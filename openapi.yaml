components:
  schemas:
    c1.api.app.v1.AddAppEntitlementOwnerRequestInput:
      description: The request message for adding an app entitlement owner.
      properties:
        userId:
          description: The user_id field for the user to add as an owner of the app
            entitlement.
          type: string
      title: Add App Entitlement Owner Request
      type: object
      x-speakeasy-name-override: AddAppEntitlementOwnerRequest
    c1.api.app.v1.AddAppEntitlementOwnerResponse:
      description: The empty response message for adding an app entitlement owner.
      title: Add App Entitlement Owner Response
      type: object
      x-speakeasy-name-override: AddAppEntitlementOwnerResponse
    c1.api.app.v1.AddAppOwnerRequestInput:
      description: Empty request body. Just placeholder for the add app owner request
        which uses URL values for input.
      title: Add App Owner Request
      type: object
      x-speakeasy-name-override: AddAppOwnerRequest
    c1.api.app.v1.AddAppOwnerResponse:
      description: Empty response with a status code indicating success
      title: Add App Owner Response
      type: object
      x-speakeasy-name-override: AddAppOwnerResponse
    c1.api.app.v1.App:
      description: The App object provides all of the details for an app, as well
        as some configuration.
      properties:
        appAccountId:
          description: The ID of the Account named by AccountName.
          readOnly: true
          type: string
        appAccountName:
          description: The AccountName of the app. For example, AWS is AccountID,
            Github is Org Name, and Okta is Okta Subdomain.
          readOnly: true
          type: string
        certifyPolicyId:
          description: The ID of the Certify Policy associated with this App.
          type: string
        createdAt:
          format: date-time
          readOnly: true
          type: string
        deletedAt:
          format: date-time
          readOnly: true
          type: string
        description:
          description: The app's description.
          type: string
        displayName:
          description: The app's display name.
          type: string
        fieldMask:
          nullable: true
          readOnly: true
          type: string
        grantPolicyId:
          description: The ID of the Grant Policy associated with this App.
          type: string
        iconUrl:
          description: The URL of an icon to display for the app.
          type: string
        id:
          description: The ID of the app.
          readOnly: true
          type: string
        isDirectory:
          description: Specifies if the app is a directory.
          readOnly: true
          type: boolean
        logoUri:
          description: The URL of a logo to display for the app.
          readOnly: true
          type: string
        monthlyCostUsd:
          description: The cost of an app per-seat, so that total cost can be calculated
            by the grant count.
          format: int32
          type: number
        parentAppId:
          description: The ID of the app that created this app, if any.
          readOnly: true
          type: string
        revokePolicyId:
          description: The ID of the Revoke Policy associated with this App.
          type: string
        updatedAt:
          format: date-time
          readOnly: true
          type: string
        userCount:
          description: The number of users with grants to this app.
          format: int64
          readOnly: true
          type: string
      title: App
      type: object
      x-speakeasy-entity: App
      x-speakeasy-name-override: App
    c1.api.app.v1.AppActionsServiceGenerateReportRequestInput:
      description: Empty request body. Just placeholder for the generate app report
        request which uses URL values for input.
      title: App Actions Service Generate Report Request
      type: object
      x-speakeasy-name-override: AppActionsServiceGenerateReportRequest
    c1.api.app.v1.AppActionsServiceGenerateReportResponse:
      description: Empty response body. Status code indicates success.
      title: App Actions Service Generate Report Response
      type: object
      x-speakeasy-name-override: AppActionsServiceGenerateReportResponse
    c1.api.app.v1.AppEntitlement:
      description: "The app entitlement represents one permission in a downstream\
        \ App (SAAS) that can be granted. For example, GitHub Read vs GitHub Write.\n\
        \nThis message contains a oneof named max_grant_duration. Only a single field\
        \ of the following list may be set at a time:\n  - durationUnset\n  - durationGrant\n"
      properties:
        alias:
          description: The alias of the app entitlement used by Cone. Also exact-match
            queryable.
          readOnly: true
          type: string
        appId:
          description: The ID of the app that is associated with the app entitlement.
          type: string
        appResourceId:
          description: The ID of the app resource that is associated with the app
            entitlement
          type: string
        appResourceTypeId:
          description: The ID of the app resource type that is associated with the
            app entitlement
          type: string
        certifyPolicyId:
          description: The ID of the policy that will be used for certify tickets
            related to the app entitlement.
          type: string
        complianceFrameworkValueIds:
          description: The IDs of different compliance frameworks associated with
            this app entitlement ex (SOX, HIPAA, PCI, etc.)
          items:
            type: string
          nullable: true
          type: array
        createdAt:
          format: date-time
          readOnly: true
          type: string
        deletedAt:
          format: date-time
          readOnly: true
          type: string
        description:
          description: The description of the app entitlement.
          type: string
        displayName:
          description: The display name of the app entitlement.
          type: string
        durationGrant:
          format: duration
          type: string
        durationUnset:
          nullable: true
          type: object
        emergencyGrantEnabled:
          description: This enables tasks to be created in an emergency and use a
            selected emergency access policy.
          type: boolean
        emergencyGrantPolicyId:
          description: The ID of the policy that will be used for emergency access
            grant tasks.
          type: string
        grantCount:
          description: The amount of grants open for this entitlement
          format: int64
          readOnly: true
          type: string
        grantPolicyId:
          description: The ID of the policy that will be used for grant tickets related
            to the app entitlement.
          type: string
        id:
          description: The unique ID for the App Entitlement.
          readOnly: true
          type: string
        provisionerPolicy:
          $ref: '#/components/schemas/c1.api.policy.v1.ProvisionPolicy'
        revokePolicyId:
          description: The ID of the policy that will be used for revoke tickets related
            to the app entitlement
          type: string
        riskLevelValueId:
          description: The riskLevelValueId field.
          type: string
        slug:
          description: The slug is displayed as an oval next to the name in the frontend
            of C1, it tells you what permission the entitlement grants. See https://www.conductorone.com/docs/product/manage-access/entitlements/
          type: string
        systemBuiltin:
          description: This field indicates if this is a system builtin entitlement.
          readOnly: true
          type: boolean
        updatedAt:
          format: date-time
          readOnly: true
          type: string
        userEditedMask:
          nullable: true
          type: string
      title: App Entitlement
      type: object
      x-speakeasy-name-override: AppEntitlement
    c1.api.app.v1.AppEntitlementExpandMask:
      description: The app entitlement expand mask allows the user to get additional
        information when getting responses containing app entitlement views.
      properties:
        paths:
          description: Array of strings to describe which items to expand on the return
            value. Can be any combination of "*", "app_id", "app_resource_type_id",
            or "app_resource_id".
          items:
            type: string
          nullable: true
          type: array
      title: App Entitlement Expand Mask
      type: object
      x-speakeasy-name-override: AppEntitlementExpandMask
    c1.api.app.v1.AppEntitlementRef:
      description: The AppEntitlementRef message.
      properties:
        appId:
          description: The appId field.
          type: string
        id:
          description: The id field.
          type: string
      title: App Entitlement Ref
      type: object
      x-speakeasy-name-override: AppEntitlementRef
    c1.api.app.v1.AppEntitlementSearchServiceSearchRequest:
      description: Search app entitlements by a variety of filters.
      properties:
        accessReviewId:
          description: Search for app entitlements that are being reviewed as part
            of this access review campaign.
          type: string
        alias:
          description: Search for app entitlements that have this alias (exact match).
          type: string
        appIds:
          description: Search for app entitlements contained in any of these apps.
          items:
            type: string
          nullable: true
          type: array
        appUserIds:
          description: Search for app entitlements that are granted to any of these
            app user ids.
          items:
            type: string
          nullable: true
          type: array
        complianceFrameworkIds:
          description: Search for app entitlements that are part of these compliace
            frameworks.
          items:
            type: string
          nullable: true
          type: array
        excludeAppIds:
          description: Exclude app entitlements from the results that are in these
            app IDs.
          items:
            type: string
          nullable: true
          type: array
        excludeAppUserIds:
          description: Exclude app entitlements from the results that these app users
            have granted.
          items:
            type: string
          nullable: true
          type: array
        expandMask:
          $ref: '#/components/schemas/c1.api.app.v1.AppEntitlementExpandMask'
        includeDeleted:
          description: Include deleted app entitlements, this includes app entitlements
            that have a deleted parent object (app, app resource, app resource type)
          type: boolean
        onlyGetExpiring:
          description: Restrict results to only those who have expiring app entitlement
            user bindings.
          type: boolean
        pageSize:
          description: The pageSize where 0 <= pageSize <= 100. Values < 10 will be
            set to 10. A value of 0 returns the default page size (currently 25)
          format: int32
          type: number
        pageToken:
          description: The pageToken field.
          type: string
        query:
          description: Query the app entitlements with a fuzzy search on display name
            and description.
          type: string
        resourceTypeIds:
          description: Search for app entitlements that are for items on these resource
            types.
          items:
            type: string
          nullable: true
          type: array
        riskLevelIds:
          description: Search for app entitlements with these risk levels.
          items:
            type: string
          nullable: true
          type: array
      title: App Entitlement Search Service Search Request
      type: object
      x-speakeasy-name-override: AppEntitlementSearchServiceSearchRequest
    c1.api.app.v1.AppEntitlementSearchServiceSearchResponse:
      description: The AppEntitlementSearchServiceSearchResponse message.
      properties:
        expanded:
          description: List of related objects.
          items:
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type
              that describes the type of the serialized message.
            properties:
              '@type':
                description: The type of the serialized message.
                type: string
            type: object
          nullable: true
          type: array
        facets:
          $ref: '#/components/schemas/c1.api.search.v1.Facets'
        list:
          description: List of app entitlement view objects.
          items:
            $ref: '#/components/schemas/c1.api.app.v1.AppEntitlementView'
          nullable: true
          type: array
        nextPageToken:
          description: The nextPageToken is shown for the next page if the number
            of results is larger than the max page size. The server returns one page
            of results and the nextPageToken until all results are retreived. To retrieve
            the next page, use the same request and append a pageToken field with
            the value of nextPageToken shown on the previous page.
          type: string
      title: App Entitlement Search Service Search Response
      type: object
      x-speakeasy-name-override: AppEntitlementSearchServiceSearchResponse
    c1.api.app.v1.AppEntitlementUserBinding:
      description: The AppEntitlementUserBinding represents the relationship that
        gives an app user access to an app entitlement
      properties:
        appEntitlementId:
          description: The ID of the app entitlement that the app user has access
            to
          type: string
        appId:
          description: The ID of the app associated with the app entitlement
          type: string
        appUserId:
          description: The ID of the app user that has access to the app entitlement
          type: string
        createdAt:
          format: date-time
          readOnly: true
          type: string
        deletedAt:
          format: date-time
          readOnly: true
          type: string
        deprovisionAt:
          format: date-time
          readOnly: true
          type: string
      title: App Entitlement User Binding
      type: object
      x-speakeasy-name-override: AppEntitlementUserBinding
    c1.api.app.v1.AppEntitlementUserView:
      description: The AppEntitlementUserView (aka grant view) describes the relationship
        between an app user and an entitlement. They have more recently been referred
        to as grants.
      properties:
        appEntitlementUserBindingCreatedAt:
          format: date-time
          readOnly: true
          type: string
        appEntitlementUserBindingDeprovisionAt:
          format: date-time
          readOnly: true
          type: string
        appUser:
          $ref: '#/components/schemas/c1.api.app.v1.AppUserView'
      title: App Entitlement User View
      type: object
      x-speakeasy-name-override: AppEntitlementUserView
    c1.api.app.v1.AppEntitlementView:
      description: The app entitlement view contains the serialized app entitlement
        and paths to objects referenced by the app entitlement.
      properties:
        appEntitlement:
          $ref: '#/components/schemas/c1.api.app.v1.AppEntitlement'
        appPath:
          description: JSONPATH expression indicating the location of the App object
            in the  array.
          type: string
        appResourcePath:
          description: JSONPATH expression indicating the location of the App Resource
            Type object in the expanded array.
          type: string
        appResourceTypePath:
          description: JSONPATH expression indicating the location of the App Resource
            object in the  array.
          type: string
      title: App Entitlement View
      type: object
      x-speakeasy-name-override: AppEntitlementView
    c1.api.app.v1.AppEntitlementWithUserBindings:
      description: The AppEntitlementWithUserBindings message represents an app entitlement
        and its associated user bindings.
      properties:
        appEntitlementUserBindings:
          description: An array of AppEntitlementUserBinding objects which represent
            the relationships that give app users access to the specific app entitlement.
          items:
            $ref: '#/components/schemas/c1.api.app.v1.AppEntitlementUserBinding'
          nullable: true
          type: array
        entitlement:
          $ref: '#/components/schemas/c1.api.app.v1.AppEntitlementView'
      title: App Entitlement With User Bindings
      type: object
      x-speakeasy-name-override: AppEntitlementWithUserBindings
    c1.api.app.v1.AppPopulationReport:
      description: The AppPopulationReport is a generated report for a specific app
        that gives details about the app's users. These details include what groups,
        roles, and other entitlements the users have access to.
      properties:
        appId:
          description: The appId is the Id of the app which the report is generated
            for.
          type: string
        createdAt:
          format: date-time
          readOnly: true
          type: string
        downloadUrl:
          description: The downloadUrl is the url used for downloading the AppPopulationReport.
          type: string
        hashes:
          additionalProperties:
            type: string
          description: The hashes field contains the file hashes of the report.
          type: object
        id:
          description: The id field.
          type: string
        state:
          description: The state field tracks the state of the AppPopulationReport.
            This state field can be one of REPORT_STATE_PENDING, REPORT_STATE_UNSPECIFIED,
            REPORT_STATE_OK, REPORT_STATE_ERROR.
          enum:
          - REPORT_STATE_UNSPECIFIED
          - REPORT_STATE_PENDING
          - REPORT_STATE_OK
          - REPORT_STATE_ERROR
          type: string
      title: App Population Report
      type: object
      x-speakeasy-name-override: AppPopulationReport
    c1.api.app.v1.AppReportServiceListResponse:
      description: The AppReportServiceListResponse message contains a list of results
        and a nextPageToken if applicable.
      properties:
        list:
          description: The list of results containing up to X results, where X is
            the page size defined in the request.
          items:
            $ref: '#/components/schemas/c1.api.app.v1.AppPopulationReport'
          nullable: true
          type: array
        nextPageToken:
          description: "The nextPageToken is shown for the next page if the number\
            \ of results is larger than the max page size.\n The server returns one\
            \ page of results and the nextPageToken until all results are retreived.\n\
            \ To retrieve the next page, use the same request and append a pageToken\
            \ field with the value of nextPageToken shown on the previous page."
          type: string
      title: App Report Service List Response
      type: object
      x-speakeasy-name-override: AppReportServiceListResponse
    c1.api.app.v1.AppResource:
      description: The app resource message is a single resource that can have entitlements.
      properties:
        appId:
          description: The app that this resource belongs to.
          type: string
        appResourceTypeId:
          description: The resource type that this resource is.
          type: string
        createdAt:
          format: date-time
          readOnly: true
          type: string
        customDescription:
          description: A custom description that can be set for a resource.
          type: string
        deletedAt:
          format: date-time
          readOnly: true
          type: string
        description:
          description: The description set for the resource.
          readOnly: true
          type: string
        displayName:
          description: The display name for this resource.
          type: string
        grantCount:
          description: The number of grants to this resource.
          format: int64
          type: string
        id:
          description: The id of the resource.
          type: string
        parentAppResourceId:
          description: The parent resource id, if this resource is a child of another
            resource.
          type: string
        parentAppResourceTypeId:
          description: The parent resource type id, if this resource is a child of
            another resource.
          type: string
        updatedAt:
          format: date-time
          readOnly: true
          type: string
      title: App Resource
      type: object
      x-speakeasy-name-override: AppResource
    c1.api.app.v1.AppResourceServiceGetResponse:
      description: The app resource service get response contains the app resource
        view and array of expanded items indicated by the request's expand mask.
      properties:
        appResourceView:
          $ref: '#/components/schemas/c1.api.app.v1.AppResourceView'
        expanded:
          description: List of serialized related objects.
          items:
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type
              that describes the type of the serialized message.
            properties:
              '@type':
                description: The type of the serialized message.
                type: string
            type: object
          nullable: true
          type: array
      title: App Resource Service Get Response
      type: object
      x-speakeasy-name-override: AppResourceServiceGetResponse
    c1.api.app.v1.AppResourceServiceListResponse:
      description: The AppResourceServiceListResponse message contains a list of results
        and a nextPageToken if applicable.
      properties:
        expanded:
          description: List of serialized related objects.
          items:
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type
              that describes the type of the serialized message.
            properties:
              '@type':
                description: The type of the serialized message.
                type: string
            type: object
          nullable: true
          type: array
        list:
          description: The list of results containing up to X results, where X is
            the page size defined in the request.
          items:
            $ref: '#/components/schemas/c1.api.app.v1.AppResourceView'
          nullable: true
          type: array
        nextPageToken:
          description: "The nextPageToken is shown for the next page if the number\
            \ of results is larger than the max page size.\n The server returns one\
            \ page of results and the nextPageToken until all results are retreived.\n\
            \ To retrieve the next page, use the same request and append a pageToken\
            \ field with the value of nextPageToken shown on the previous page."
          type: string
      title: App Resource Service List Response
      type: object
      x-speakeasy-name-override: AppResourceServiceListResponse
    c1.api.app.v1.AppResourceType:
      description: The AppResourceType is referenced by an app entitlement defining
        its resource types. Commonly things like Group or Role.
      properties:
        appId:
          description: The ID of the app that is associated with the app resource
            type
          readOnly: true
          type: string
        createdAt:
          format: date-time
          readOnly: true
          type: string
        deletedAt:
          format: date-time
          readOnly: true
          type: string
        displayName:
          description: The display name of the app resource type.
          type: string
        id:
          description: The unique ID for the app resource type.
          readOnly: true
          type: string
        updatedAt:
          format: date-time
          readOnly: true
          type: string
      title: App Resource Type
      type: object
      x-speakeasy-name-override: AppResourceType
    c1.api.app.v1.AppResourceTypeServiceGetResponse:
      description: "The AppResourceTypeServiceGetResponse contains an expanded array\
        \ containing the expanded values indicated by the expand mask\n in the request\
        \ and an app resource type view containing the resource type and JSONPATHs\
        \ indicating which objects are where in the expand mask."
      properties:
        appResourceTypeView:
          $ref: '#/components/schemas/c1.api.app.v1.AppResourceTypeView'
        expanded:
          description: List of serialized related objects.
          items:
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type
              that describes the type of the serialized message.
            properties:
              '@type':
                description: The type of the serialized message.
                type: string
            type: object
          nullable: true
          type: array
      title: App Resource Type Service Get Response
      type: object
      x-speakeasy-name-override: AppResourceTypeServiceGetResponse
    c1.api.app.v1.AppResourceTypeServiceListResponse:
      description: The AppResourceTypeServiceListResponse message contains a list
        of results and a nextPageToken if applicable.
      properties:
        expanded:
          description: List of serialized related objects.
          items:
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type
              that describes the type of the serialized message.
            properties:
              '@type':
                description: The type of the serialized message.
                type: string
            type: object
          nullable: true
          type: array
        list:
          description: The list of results containing up to X results, where X is
            the page size defined in the request.
          items:
            $ref: '#/components/schemas/c1.api.app.v1.AppResourceTypeView'
          nullable: true
          type: array
        nextPageToken:
          description: "The nextPageToken is shown for the next page if the number\
            \ of results is larger than the max page size.\n The server returns one\
            \ page of results and the nextPageToken until all results are retreived.\n\
            \ To retrieve the next page, use the same request and append a pageToken\
            \ field with the value of nextPageToken shown on the previous page."
          type: string
      title: App Resource Type Service List Response
      type: object
      x-speakeasy-name-override: AppResourceTypeServiceListResponse
    c1.api.app.v1.AppResourceTypeView:
      description: The AppResourceTypeView message.
      properties:
        appPath:
          description: JSONPATH expression indicating the location of the App object
            in the  array
          type: string
        appResourceType:
          $ref: '#/components/schemas/c1.api.app.v1.AppResourceType'
      title: App Resource Type View
      type: object
      x-speakeasy-name-override: AppResourceTypeView
    c1.api.app.v1.AppResourceView:
      description: The app resource view returns an app resource with paths for items
        in the expand mask filled in when this response is returned and a request
        expand mask has "*" or "app_id" or "resource_type_id".
      properties:
        appPath:
          description: JSONPATH expression indicating the location of the App object
            in the array
          type: string
        appResource:
          $ref: '#/components/schemas/c1.api.app.v1.AppResource'
        parentResourcePath:
          description: JSONPATH expression indicating the location of the Parent Resource
            object in the array
          type: string
        parentResourceTypePath:
          description: JSONPATH expression indicating the location of the Parent Resource
            Type object in the array
          type: string
        resourceTypePath:
          description: JSONPATH expression indicating the location of the Resource
            Type object in the array
          type: string
      title: App Resource View
      type: object
      x-speakeasy-name-override: AppResourceView
    c1.api.app.v1.AppUsageControls:
      description: The AppUsageControls object describes some peripheral configuration
        for an app.
      properties:
        appId:
          description: The app that this object belongs to.
          type: string
        notify:
          description: Whether or not to notify some if they have access to the app,
            but has not used it within a configurable amount of time.
          type: boolean
        notifyAfterDays:
          description: The duration in days after which we notify users of nonusage.
          format: uint32
          type: number
        revoke:
          description: Whether or not to revoke a grant if they have access to the
            app, but has not used it within a configurable amount of time.
          type: boolean
        revokeAfterDays:
          description: The duration in days after which we revoke users that have
            not used that grant.
          format: uint32
          type: number
      title: App Usage Controls
      type: object
      x-speakeasy-name-override: AppUsageControls
    c1.api.app.v1.AppUser:
      description: Application User that represents an account in the application.
      properties:
        appId:
          description: The ID of the application.
          readOnly: true
          type: string
        appUserType:
          description: The appplication user type. Type can be user, system or service.
          enum:
          - APP_USER_TYPE_UNSPECIFIED
          - APP_USER_TYPE_USER
          - APP_USER_TYPE_SERVICE_ACCOUNT
          - APP_USER_TYPE_SYSTEM_ACCOUNT
          type: string
        createdAt:
          format: date-time
          readOnly: true
          type: string
        deletedAt:
          format: date-time
          readOnly: true
          type: string
        displayName:
          description: The display name of the application user.
          readOnly: true
          type: string
        email:
          description: The email field of the application user.
          readOnly: true
          type: string
        emails:
          description: The emails field of the application user.
          items:
            type: string
          nullable: true
          readOnly: true
          type: array
        id:
          description: A unique idenditfier of the application user.
          readOnly: true
          type: string
        identityUserId:
          description: The conductor one user ID of the account owner.
          readOnly: true
          type: string
        profile:
          additionalProperties:
            nullable: true
            type:
            - string
            - number
            - object
            - array
            - boolean
            - 'null'
          readOnly: true
          type: object
        status:
          $ref: '#/components/schemas/c1.api.app.v1.AppUserStatus'
        updatedAt:
          format: date-time
          readOnly: true
          type: string
        username:
          description: The username field of the application user.
          readOnly: true
          type: string
        usernames:
          description: The usernames field of the application user.
          items:
            type: string
          nullable: true
          readOnly: true
          type: array
      title: App User
      type: object
      x-speakeasy-name-override: AppUser
    c1.api.app.v1.AppUserExpandMask:
      description: The AppUserExpandMask message contains a list of paths to expand
        in the response.
      properties:
        paths:
          description: The paths to expand in the response. May be any combination
            of "*", "identity_user_id", "app_id", and "last_usage".
          items:
            type: string
          nullable: true
          type: array
      title: App User Expand Mask
      type: object
      x-speakeasy-name-override: AppUserExpandMask
    c1.api.app.v1.AppUserServiceUpdateRequestInput:
      description: The AppUserServiceUpdateRequest message contains the app user and
        the fields to be updated.
      properties:
        appUser:
          $ref: '#/components/schemas/c1.api.app.v1.AppUser'
        expandMask:
          $ref: '#/components/schemas/c1.api.app.v1.AppUserExpandMask'
        updateMask:
          nullable: true
          type: string
          x-speakeasy-terraform-ignore: true
      title: App User Service Update Request
      type: object
      x-speakeasy-name-override: AppUserServiceUpdateRequest
    c1.api.app.v1.AppUserServiceUpdateResponse:
      description: The AppUserServiceUpdateResponse message.
      properties:
        appUserView:
          $ref: '#/components/schemas/c1.api.app.v1.AppUserView'
        expanded:
          description: The expanded field.
          items:
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type
              that describes the type of the serialized message.
            properties:
              '@type':
                description: The type of the serialized message.
                type: string
            type: object
          nullable: true
          type: array
      title: App User Service Update Response
      type: object
      x-speakeasy-name-override: AppUserServiceUpdateResponse
    c1.api.app.v1.AppUserStatus:
      description: The satus of the applicaiton user.
      properties:
        details:
          description: The details of applicaiton user status.
          readOnly: true
          type: string
        status:
          description: The application user status field.
          enum:
          - STATUS_UNSPECIFIED
          - STATUS_ENABLED
          - STATUS_DISABLED
          - STATUS_DELETED
          readOnly: true
          type: string
      title: App User Status
      type: object
      x-speakeasy-name-override: AppUserStatus
    c1.api.app.v1.AppUserView:
      description: The AppUserView contains an app user as well as paths for apps,
        identity users, and last usage in expanded arrays.
      properties:
        appPath:
          description: JSONPATH expression indicating where the app is expanded in
            expanded arrays indicated in the request.
          type: string
        appUser:
          $ref: '#/components/schemas/c1.api.app.v1.AppUser'
        identityUserPath:
          description: JSONPATH expression indicating where the identity user is expanded
            in expanded arrays indicated in the request.
          type: string
        lastUsagePath:
          description: JSONPATH expression indicating where the last usage information
            is expanded in expanded arrays indicated in the request.
          type: string
      title: App User View
      type: object
      x-speakeasy-name-override: AppUserView
    c1.api.app.v1.Connector:
      description: A Connector is used to sync objects into Apps
      properties:
        appId:
          description: The id of the app the connector is associated with.
          type: string
        catalogId:
          description: The catalogId describes which catalog entry this connector
            is an instance of. For example, every Okta connector will have the same
            catalogId indicating it is an Okta connector.
          readOnly: true
          type: string
        config:
          additionalProperties: true
          description: Contains an arbitrary serialized message along with a @type
            that describes the type of the serialized message.
          properties:
            '@type':
              description: The type of the serialized message.
              type: string
          type: object
        createdAt:
          format: date-time
          readOnly: true
          type: string
        deletedAt:
          format: date-time
          readOnly: true
          type: string
        description:
          description: The description of the connector.
          type: string
        displayName:
          description: The display name of the connector.
          type: string
        downloadUrl:
          description: The downloadUrl for a spreadsheet if the connector was created
            from uploading a file.
          readOnly: true
          type: string
        id:
          description: The id of the connector.
          type: string
        oauthAuthorizedAs:
          $ref: '#/components/schemas/c1.api.app.v1.OAuth2AuthorizedAs'
        status:
          $ref: '#/components/schemas/c1.api.app.v1.ConnectorStatus'
        updatedAt:
          format: date-time
          readOnly: true
          type: string
        userIds:
          description: The userIds field is used to define the integration owners
            of the connector.
          items:
            type: string
          nullable: true
          type: array
      title: Connector
      type: object
      x-speakeasy-name-override: Connector
    c1.api.app.v1.ConnectorCredential:
      description: ConnectorCredential is used by a connector to authenticate with
        conductor one.
      properties:
        appId:
          description: The appId of the app the connector is attached to.
          type: string
        clientId:
          description: The client id of the ConnectorCredential.
          type: string
        connectorId:
          description: The connectorId of the connector the credential is associated
            with.
          type: string
        createdAt:
          format: date-time
          readOnly: true
          type: string
        deletedAt:
          format: date-time
          readOnly: true
          type: string
        displayName:
          description: The display name of the ConnectorCredential.
          type: string
        expiresTime:
          format: date-time
          readOnly: true
          type: string
        id:
          description: The id of the ConnectorCredential.
          type: string
        lastUsedAt:
          format: date-time
          readOnly: true
          type: string
        updatedAt:
          format: date-time
          readOnly: true
          type: string
      title: Connector Credential
      type: object
      x-speakeasy-entity: ConnectorCredential
      x-speakeasy-name-override: ConnectorCredential
    c1.api.app.v1.ConnectorExpandMask:
      description: The ConnectorExpandMask is used to expand related objects on a
        connector.
      properties:
        paths:
          description: Paths that you want expanded in the response. Possible values
            are "app_id" and "*".
          items:
            type: string
          nullable: true
          type: array
      title: Connector Expand Mask
      type: object
      x-speakeasy-name-override: ConnectorExpandMask
    c1.api.app.v1.ConnectorServiceCreateDelegatedRequestInput:
      description: The ConnectorServiceCreateDelegatedRequest message contains the
        fields required to create a connector.
      properties:
        catalogId:
          description: The catalogId describes which catalog entry this connector
            is an instance of. For example, every Okta connector will have the same
            catalogId indicating it is an Okta connector.
          type: string
        description:
          description: The description of the connector.
          type: string
        displayName:
          description: The displayName of the connector.
          type: string
        expandMask:
          $ref: '#/components/schemas/c1.api.app.v1.ConnectorExpandMask'
        userIds:
          description: The userIds field is used to define the integration owners
            of the connector.
          items:
            type: string
          nullable: true
          type: array
      title: Connector Service Create Delegated Request
      type: object
      x-speakeasy-name-override: ConnectorServiceCreateDelegatedRequest
    c1.api.app.v1.ConnectorServiceCreateRequestInput:
      description: The ConnectorServiceCreateRequest message.
      properties:
        catalogId:
          description: The catalogId field.
          type: string
        config:
          additionalProperties: true
          description: Contains an arbitrary serialized message along with a @type
            that describes the type of the serialized message.
          properties:
            '@type':
              description: The type of the serialized message.
              type: string
          type: object
        description:
          description: The description field.
          type: string
        expandMask:
          $ref: '#/components/schemas/c1.api.app.v1.ConnectorExpandMask'
        userIds:
          description: The userIds field.
          items:
            type: string
          nullable: true
          type: array
      title: Connector Service Create Request
      type: object
      x-speakeasy-name-override: ConnectorServiceCreateRequest
    c1.api.app.v1.ConnectorServiceCreateResponse:
      description: The ConnectorServiceCreateResponse is the response returned from
        creating a connector.
      properties:
        connectorView:
          $ref: '#/components/schemas/c1.api.app.v1.ConnectorView'
        expanded:
          description: The array of expanded items indicated by the request.
          items:
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type
              that describes the type of the serialized message.
            properties:
              '@type':
                description: The type of the serialized message.
                type: string
            type: object
          nullable: true
          type: array
      title: Connector Service Create Response
      type: object
      x-speakeasy-name-override: ConnectorServiceCreateResponse
    c1.api.app.v1.ConnectorServiceDeleteRequestInput:
      description: ConnectorServiceDeleteRequest is a request for deleting a connector.
        It uses URL values for input.
      title: Connector Service Delete Request
      type: object
      x-speakeasy-name-override: ConnectorServiceDeleteRequest
    c1.api.app.v1.ConnectorServiceDeleteResponse:
      description: Empty response body. Status code indicates success.
      title: Connector Service Delete Response
      type: object
      x-speakeasy-name-override: ConnectorServiceDeleteResponse
    c1.api.app.v1.ConnectorServiceGetCredentialsResponse:
      description: ConnectorServiceGetCredentialsResponse is the response returned
        by the get method.
      properties:
        credential:
          $ref: '#/components/schemas/c1.api.app.v1.ConnectorCredential'
      title: Connector Service Get Credentials Response
      type: object
      x-speakeasy-name-override: ConnectorServiceGetCredentialsResponse
    c1.api.app.v1.ConnectorServiceGetResponse:
      description: The ConnectorServiceGetResponse message contains the connectorView,
        and an expand mask.
      properties:
        connectorView:
          $ref: '#/components/schemas/c1.api.app.v1.ConnectorView'
        expanded:
          description: The array of expanded items indicated by the request.
          items:
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type
              that describes the type of the serialized message.
            properties:
              '@type':
                description: The type of the serialized message.
                type: string
            type: object
          nullable: true
          type: array
      title: Connector Service Get Response
      type: object
      x-speakeasy-name-override: ConnectorServiceGetResponse
    c1.api.app.v1.ConnectorServiceListResponse:
      description: The ConnectorServiceListResponse message contains a list of results
        and a nextPageToken if applicable
      properties:
        expanded:
          description: List of serialized related objects
          items:
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type
              that describes the type of the serialized message.
            properties:
              '@type':
                description: The type of the serialized message.
                type: string
            type: object
          nullable: true
          type: array
        list:
          description: The list of results containing up to X results, where X is
            the page size defined in the request
          items:
            $ref: '#/components/schemas/c1.api.app.v1.ConnectorView'
          nullable: true
          type: array
        nextPageToken:
          description: The nextPageToken is shown for the next page if the number
            of results is larger than the max page size. The server returns one page
            of results and the nextPageToken until all results are retreived. To retrieve
            the next page, use the same request and append a pageToken field with
            the value of nextPageToken shown on the previous page.
          type: string
      title: Connector Service List Response
      type: object
      x-speakeasy-name-override: ConnectorServiceListResponse
    c1.api.app.v1.ConnectorServiceRevokeCredentialRequestInput:
      description: ConnectorServiceRevokeCredentialRequest is a request for revoking
        connector credentials. It uses URL values for input.
      title: Connector Service Revoke Credential Request
      type: object
      x-speakeasy-entity: ConnectorCredential
      x-speakeasy-name-override: ConnectorServiceRevokeCredentialRequest
    c1.api.app.v1.ConnectorServiceRevokeCredentialResponse:
      description: Empty response body. Status code indicates success.
      title: Connector Service Revoke Credential Response
      type: object
      x-speakeasy-entity: ConnectorCredential
      x-speakeasy-name-override: ConnectorServiceRevokeCredentialResponse
    c1.api.app.v1.ConnectorServiceRotateCredentialRequestInput:
      description: ConnectorServiceRotateCredentialRequest is a request for rotating
        connector credentials. It uses URL values for input.
      title: Connector Service Rotate Credential Request
      type: object
      x-speakeasy-entity: ConnectorCredential
      x-speakeasy-name-override: ConnectorServiceRotateCredentialRequest
    c1.api.app.v1.ConnectorServiceRotateCredentialResponse:
      description: ConnectorServiceRotateCredentialResponse is the response returned
        by the rotate method.
      properties:
        clientSecret:
          description: The new clientSecret returned after rotating the connector
            credential.
          type: string
        credential:
          $ref: '#/components/schemas/c1.api.app.v1.ConnectorCredential'
      title: Connector Service Rotate Credential Response
      type: object
      x-speakeasy-name-override: ConnectorServiceRotateCredentialResponse
    c1.api.app.v1.ConnectorServiceUpdateDelegatedRequestInput:
      description: The ConnectorServiceUpdateDelegatedRequest message contains the
        fields required to update a connector.
      properties:
        connector:
          $ref: '#/components/schemas/c1.api.app.v1.Connector'
        expandMask:
          $ref: '#/components/schemas/c1.api.app.v1.ConnectorExpandMask'
        updateMask:
          nullable: true
          type: string
          x-speakeasy-terraform-ignore: true
      title: Connector Service Update Delegated Request
      type: object
      x-speakeasy-name-override: ConnectorServiceUpdateDelegatedRequest
    c1.api.app.v1.ConnectorServiceUpdateRequestInput:
      description: The ConnectorServiceUpdateRequest message contains the fields required
        to update a connector.
      properties:
        connector:
          $ref: '#/components/schemas/c1.api.app.v1.Connector'
        expandMask:
          $ref: '#/components/schemas/c1.api.app.v1.ConnectorExpandMask'
        updateMask:
          nullable: true
          type: string
          x-speakeasy-terraform-ignore: true
      title: Connector Service Update Request
      type: object
      x-speakeasy-name-override: ConnectorServiceUpdateRequest
    c1.api.app.v1.ConnectorServiceUpdateResponse:
      description: ConnectorServiceUpdateResponse is the response returned by the
        update method.
      properties:
        connectorView:
          $ref: '#/components/schemas/c1.api.app.v1.ConnectorView'
        expanded:
          description: The array of expanded items indicated by the request.
          items:
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type
              that describes the type of the serialized message.
            properties:
              '@type':
                description: The type of the serialized message.
                type: string
            type: object
          nullable: true
          type: array
      title: Connector Service Update Response
      type: object
      x-speakeasy-name-override: ConnectorServiceUpdateResponse
    c1.api.app.v1.ConnectorStatus:
      description: The status field on the connector is used to track the status of
        the connectors sync, and when syncing last started, completed, or caused the
        connector to update.
      properties:
        completedAt:
          format: date-time
          type: string
        lastError:
          description: The last error encountered by the connector.
          type: string
        startedAt:
          format: date-time
          type: string
        status:
          description: The status of the connector sync.
          enum:
          - SYNC_STATUS_UNSPECIFIED
          - SYNC_STATUS_RUNNING
          - SYNC_STATUS_DONE
          - SYNC_STATUS_ERROR
          type: string
        updatedAt:
          format: date-time
          type: string
      title: Connector Status
      type: object
      x-speakeasy-name-override: ConnectorStatus
    c1.api.app.v1.ConnectorView:
      description: The ConnectorView object provides a connector response object,
        as well as JSONPATHs to related objects provided by expanders.
      properties:
        appPath:
          description: JSONPATH expression indicating the location of the App object
            in the expanded array.
          type: string
        connector:
          $ref: '#/components/schemas/c1.api.app.v1.Connector'
        usersPath:
          description: JSONPATH expression indicating the location of the User object
            in the expanded array. This is the user that is a direct target of the
            ticket without a specific relationship to a potentially non-existent app
            user.
          type: string
      title: Connector View
      type: object
      x-speakeasy-name-override: ConnectorView
    c1.api.app.v1.CreateAppRequest:
      description: The CreateAppRequest message is used to create a new app.
      properties:
        certifyPolicyId:
          description: Creates the app with this certify policy.
          type: string
        description:
          description: Creates the app with this description.
          type: string
        displayName:
          description: Creates the app with this display name.
          type: string
        grantPolicyId:
          description: Creates the app with this grant policy.
          type: string
        monthlyCostUsd:
          description: Creates the app with this monthly cost per seat.
          format: int32
          type: number
        owners:
          description: Creates the app with this array of owners.
          items:
            type: string
          nullable: true
          type: array
        revokePolicyId:
          description: Creates the app with this revoke policy.
          type: string
      title: Create App Request
      type: object
      x-speakeasy-entity: App
      x-speakeasy-name-override: CreateAppRequest
    c1.api.app.v1.CreateAppResponse:
      description: Returns the new app's values.
      properties:
        app:
          $ref: '#/components/schemas/c1.api.app.v1.App'
      title: Create App Response
      type: object
      x-speakeasy-name-override: CreateAppResponse
    c1.api.app.v1.DeleteAppRequestInput:
      description: Empty request body
      title: Delete App Request
      type: object
      x-speakeasy-entity: App
      x-speakeasy-name-override: DeleteAppRequest
    c1.api.app.v1.DeleteAppResponse:
      description: Empty response body. Status code indicates success.
      title: Delete App Response
      type: object
      x-speakeasy-name-override: DeleteAppResponse
    c1.api.app.v1.GetAppEntitlementResponse:
      description: The get app entitlement response returns an entitlement view containing
        paths in the expanded array for the objects expanded as indicated by the expand
        mask in the request.
      properties:
        appEntitlementView:
          $ref: '#/components/schemas/c1.api.app.v1.AppEntitlementView'
        expanded:
          description: List of serialized related objects.
          items:
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type
              that describes the type of the serialized message.
            properties:
              '@type':
                description: The type of the serialized message.
                type: string
            type: object
          nullable: true
          type: array
      title: Get App Entitlement Response
      type: object
      x-speakeasy-name-override: GetAppEntitlementResponse
    c1.api.app.v1.GetAppResponse:
      description: The GetAppResponse message contains the details of the requested
        app in the app field.
      properties:
        app:
          $ref: '#/components/schemas/c1.api.app.v1.App'
      title: Get App Response
      type: object
      x-speakeasy-name-override: GetAppResponse
    c1.api.app.v1.GetAppUsageControlsResponse:
      description: The GetAppUsageControlsResponse message contains the retrieved
        AppUsageControls object.
      properties:
        appUsageControls:
          $ref: '#/components/schemas/c1.api.app.v1.AppUsageControls'
        hasUsageData:
          description: HasUsageData is false if the access entitlement for this app
            has no usage data.
          type: boolean
      title: Get App Usage Controls Response
      type: object
      x-speakeasy-name-override: GetAppUsageControlsResponse
    c1.api.app.v1.ListAppEntitlementOwnersResponse:
      description: The response message for listing app entitlement owners.
      properties:
        list:
          description: The list of owners for the app entitlement.
          items:
            $ref: '#/components/schemas/c1.api.user.v1.User'
          nullable: true
          type: array
        nextPageToken:
          description: "The nextPageToken is shown for the next page if the number\
            \ of results is larger than the max page size.\n The server returns one\
            \ page of results and the nextPageToken until all results are retreived.\n\
            \ To retrieve the next page, use the same request and append a pageToken\
            \ field with the value of nextPageToken shown on the previous page."
          type: string
      title: List App Entitlement Owners Response
      type: object
      x-speakeasy-name-override: ListAppEntitlementOwnersResponse
    c1.api.app.v1.ListAppEntitlementUsersResponse:
      description: The ListAppEntitlementUsersResponse message contains a list of
        results and a nextPageToken if applicable.
      properties:
        expanded:
          description: List of related objects
          items:
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type
              that describes the type of the serialized message.
            properties:
              '@type':
                description: The type of the serialized message.
                type: string
            type: object
          nullable: true
          type: array
        list:
          description: The list of results containing up to X results, where X is
            the page size defined in the request.
          items:
            $ref: '#/components/schemas/c1.api.app.v1.AppEntitlementUserView'
          nullable: true
          type: array
        nextPageToken:
          description: The nextPageToken is shown for the next page if the number
            of results is larger than the max page size. The server returns one page
            of results and the nextPageToken until all results are retreived. To retrieve
            the next page, use the same request and append a pageToken field with
            the value of nextPageToken shown on the previous page.
          type: string
      title: List App Entitlement Users Response
      type: object
      x-speakeasy-name-override: ListAppEntitlementUsersResponse
    c1.api.app.v1.ListAppEntitlementsResponse:
      description: The ListAppEntitlementsResponse message contains a list of results
        and a nextPageToken if applicable.
      properties:
        expanded:
          description: List of related objects
          items:
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type
              that describes the type of the serialized message.
            properties:
              '@type':
                description: The type of the serialized message.
                type: string
            type: object
          nullable: true
          type: array
        list:
          description: The list of results containing up to X results, where X is
            the page size defined in the request.
          items:
            $ref: '#/components/schemas/c1.api.app.v1.AppEntitlementView'
          nullable: true
          type: array
        nextPageToken:
          description: The nextPageToken is shown for the next page if the number
            of results is larger than the max page size. The server returns one page
            of results and the nextPageToken until all results are retreived. To retrieve
            the next page, use the same request and append a pageToken field with
            the value of nextPageToken shown on the previous page.
          type: string
      title: List App Entitlements Response
      type: object
      x-speakeasy-name-override: ListAppEntitlementsResponse
    c1.api.app.v1.ListAppOwnersResponse:
      description: The ListAppOwnersResponse message.
      properties:
        list:
          description: The list of results containing up to X results, where X is
            the page size defined in the request
          items:
            $ref: '#/components/schemas/c1.api.user.v1.User'
          nullable: true
          type: array
        nextPageToken:
          description: The nextPageToken is shown for the next page if the number
            of results is larger than the max page size. The server returns one page
            of results and the nextPageToken until all results are retreived. To retrieve
            the next page, use the same request and append a pageToken field with
            the value of nextPageToken shown on the previous page.
          type: string
      title: List App Owners Response
      type: object
      x-speakeasy-name-override: ListAppOwnersResponse
    c1.api.app.v1.ListAppResourceOwnersResponse:
      description: The ListAppResourceOwnersResponse message contains a list of results
        and a nextPageToken if applicable
      properties:
        list:
          description: The list of results containing up to X results, where X is
            the page size defined in the request.
          items:
            $ref: '#/components/schemas/c1.api.user.v1.User'
          nullable: true
          type: array
        nextPageToken:
          description: "The nextPageToken is shown for the next page if the number\
            \ of results is larger than the max page size.\n The server returns one\
            \ page of results and the nextPageToken until all results are retreived.\n\
            \ To retrieve the next page, use the same request and append a pageToken\
            \ field with the value of nextPageToken shown on the previous page."
          type: string
      title: List App Resource Owners Response
      type: object
      x-speakeasy-name-override: ListAppResourceOwnersResponse
    c1.api.app.v1.ListAppUsersForIdentityWithGrantResponse:
      description: The ListAppUsersForIdentityWithGrantResponse message.
      properties:
        bindings:
          description: The list of app users that may also have grant information.
          items:
            $ref: '#/components/schemas/c1.api.app.v1.AppEntitlementUserBinding'
          nullable: true
          type: array
      title: List App Users For Identity With Grant Response
      type: object
      x-speakeasy-name-override: ListAppUsersForIdentityWithGrantResponse
    c1.api.app.v1.ListAppsResponse:
      description: The ListAppsResponse message contains a list of results and a nextPageToken
        if applicable.
      properties:
        list:
          description: The list of results containing up to X results, where X is
            the page size defined in the request.
          items:
            $ref: '#/components/schemas/c1.api.app.v1.App'
          nullable: true
          type: array
        nextPageToken:
          description: "The nextPageToken is shown for the next page if the number\
            \ of results is larger than the max page size.\n The server returns one\
            \ page of results and the nextPageToken until all results are retreived.\n\
            \ To retrieve the next page, use the same request and append a pageToken\
            \ field with the value of nextPageToken shown on the previous page."
          type: string
      title: List Apps Response
      type: object
      x-speakeasy-name-override: ListAppsResponse
    c1.api.app.v1.OAuth2AuthorizedAs:
      description: OAuth2AuthorizedAs tracks the user that OAuthed with the connector.
      properties:
        authEmail:
          description: authEmail is the email of the user that authorized the connector
            using OAuth.
          readOnly: true
          type: string
        authorizedAt:
          format: date-time
          readOnly: true
          type: string
      title: O Auth 2 Authorized As
      type: object
      x-speakeasy-name-override: OAuth2AuthorizedAs
    c1.api.app.v1.RemoveAppEntitlementOwnerRequestInput:
      description: The request message for removing an app entitlement owner.
      title: Remove App Entitlement Owner Request
      type: object
      x-speakeasy-name-override: RemoveAppEntitlementOwnerRequest
    c1.api.app.v1.RemoveAppEntitlementOwnerResponse:
      description: The empty response message for removing an app entitlement owner.
      title: Remove App Entitlement Owner Response
      type: object
      x-speakeasy-name-override: RemoveAppEntitlementOwnerResponse
    c1.api.app.v1.RemoveAppOwnerRequestInput:
      description: RemoveAppOwnerRequest is the request body for removing an app owner.
        It uses URL values for input.
      title: Remove App Owner Request
      type: object
      x-speakeasy-name-override: RemoveAppOwnerRequest
    c1.api.app.v1.RemoveAppOwnerResponse:
      description: Empty response with a status code indicating success.
      title: Remove App Owner Response
      type: object
      x-speakeasy-name-override: RemoveAppOwnerResponse
    c1.api.app.v1.SearchAppResourceTypesRequest:
      description: Search for app resources based on some filters.
      properties:
        appIds:
          description: A list of app IDs to restrict the search by.
          items:
            type: string
          nullable: true
          type: array
        excludeResourceTypeIds:
          description: A list of resource type IDs to exclude from the search.
          items:
            type: string
          nullable: true
          type: array
        excludeResourceTypeTraitIds:
          description: A list of resource type trait IDs to exclude from the search.
          items:
            type: string
          nullable: true
          type: array
        pageSize:
          description: The pageSize where 10 <= pageSize <= 100, default 25.
          format: int32
          type: number
        pageToken:
          description: The pageToken field.
          type: string
        query:
          description: Fuzzy search the display name of resource types.
          type: string
        resourceTypeIds:
          description: A list of resource type IDs to restrict the search by.
          items:
            type: string
          nullable: true
          type: array
        resourceTypeTraitIds:
          description: A list of resource type trait IDs to restrict the search by.
          items:
            type: string
          nullable: true
          type: array
      title: Search App Resource Types Request
      type: object
      x-speakeasy-name-override: SearchAppResourceTypesRequest
    c1.api.app.v1.SearchAppResourceTypesResponse:
      description: The SearchAppResourceTypesResponse message contains a list of results
        and a nextPageToken if applicable.
      properties:
        list:
          description: The list of results containing up to X results, where X is
            the page size defined in the request.
          items:
            $ref: '#/components/schemas/c1.api.app.v1.AppResourceType'
          nullable: true
          type: array
        nextPageToken:
          description: "The nextPageToken is shown for the next page if the number\
            \ of results is larger than the max page size.\n The server returns one\
            \ page of results and the nextPageToken until all results are retreived.\n\
            \ To retrieve the next page, use the same request and append a pageToken\
            \ field with the value of nextPageToken shown on the previous page."
          type: string
      title: Search App Resource Types Response
      type: object
      x-speakeasy-name-override: SearchAppResourceTypesResponse
    c1.api.app.v1.SearchAppsRequest:
      description: Search Apps by a few properties.
      properties:
        appIds:
          description: A list of app IDs to restrict the search to.
          items:
            type: string
          nullable: true
          type: array
        displayName:
          description: Search for apps with a case insensitive match on the display
            name.
          type: string
        excludeAppIds:
          description: A list of app IDs to remove from the results.
          items:
            type: string
          nullable: true
          type: array
        onlyDirectories:
          description: Only return apps which are directories
          type: boolean
        pageSize:
          description: The pageSize where 0 <= pageSize <= 100. Values < 10 will be
            set to 10. A value of 0 returns the default page size (currently 25)
          format: int32
          type: number
        pageToken:
          description: The pageToken field.
          type: string
        query:
          description: Query the apps with a fuzzy search on display name and description.
          type: string
      title: Search Apps Request
      type: object
      x-speakeasy-name-override: SearchAppsRequest
    c1.api.app.v1.SearchAppsResponse:
      description: The SearchAppsResponse message contains a list of results and a
        nextPageToken if applicable.
      properties:
        list:
          description: The list of results containing up to X results, where X is
            the page size defined in the request.
          items:
            $ref: '#/components/schemas/c1.api.app.v1.App'
          nullable: true
          type: array
        nextPageToken:
          description: "The nextPageToken is shown for the next page if the number\
            \ of results is larger than the max page size.\n The server returns one\
            \ page of results and the nextPageToken until all results are retreived.\n\
            \ To retrieve the next page, use the same request and append a pageToken\
            \ field with the value of nextPageToken shown on the previous page."
          type: string
      title: Search Apps Response
      type: object
      x-speakeasy-name-override: SearchAppsResponse
    c1.api.app.v1.SetAppEntitlementOwnersRequestInput:
      description: The request message for setting the app entitlement owners.
      properties:
        userIds:
          description: The user_ids field for the users to set as an owner of the
            app entitlement.
          items:
            type: string
          nullable: true
          type: array
      title: Set App Entitlement Owners Request
      type: object
      x-speakeasy-entity: App_Entitlement_Owner
      x-speakeasy-name-override: SetAppEntitlementOwnersRequest
    c1.api.app.v1.SetAppEntitlementOwnersResponse:
      description: The empty response message for setting the app entitlement owners.
      title: Set App Entitlement Owners Response
      type: object
      x-speakeasy-name-override: SetAppEntitlementOwnersResponse
    c1.api.app.v1.SetAppOwnersRequestInput:
      description: The request message for setting the app owners.
      properties:
        userIds:
          description: The user_ids field for the users to set as an owner of the
            app.
          items:
            type: string
          nullable: true
          type: array
      title: Set App Owners Request
      type: object
      x-speakeasy-entity: App_Owner
      x-speakeasy-name-override: SetAppOwnersRequest
    c1.api.app.v1.SetAppOwnersResponse:
      description: The empty response message for setting the app owners.
      title: Set App Owners Response
      type: object
      x-speakeasy-name-override: SetAppOwnersResponse
    c1.api.app.v1.UpdateAppEntitlementRequestInput:
      description: The UpdateAppEntitlementRequest message contains the app entitlement
        and the fields to be updated.
      properties:
        entitlement:
          $ref: '#/components/schemas/c1.api.app.v1.AppEntitlement'
        expandMask:
          $ref: '#/components/schemas/c1.api.app.v1.AppEntitlementExpandMask'
        updateMask:
          nullable: true
          type: string
          x-speakeasy-terraform-ignore: true
      title: Update App Entitlement Request
      type: object
      x-speakeasy-name-override: UpdateAppEntitlementRequest
    c1.api.app.v1.UpdateAppEntitlementResponse:
      description: The UpdateAppEntitlementResponse message.
      properties:
        appEntitlementView:
          $ref: '#/components/schemas/c1.api.app.v1.AppEntitlementView'
        expanded:
          description: List of related objects
          items:
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type
              that describes the type of the serialized message.
            properties:
              '@type':
                description: The type of the serialized message.
                type: string
            type: object
          nullable: true
          type: array
      title: Update App Entitlement Response
      type: object
      x-speakeasy-name-override: UpdateAppEntitlementResponse
    c1.api.app.v1.UpdateAppRequestInput:
      description: The UpdateAppRequest message contains the app to update and the
        fields to update.
      properties:
        app:
          $ref: '#/components/schemas/c1.api.app.v1.App'
        updateMask:
          nullable: true
          type: string
          x-speakeasy-terraform-ignore: true
      title: Update App Request
      type: object
      x-speakeasy-name-override: UpdateAppRequest
    c1.api.app.v1.UpdateAppResponse:
      description: Returns the updated app's new values.
      properties:
        app:
          $ref: '#/components/schemas/c1.api.app.v1.App'
      title: Update App Response
      type: object
      x-speakeasy-name-override: UpdateAppResponse
    c1.api.app.v1.UpdateAppUsageControlsRequestInput:
      description: The UpdateAppUsageControlsRequest message contains the AppUsageControls
        object to update and the update mask.
      properties:
        appUsageControls:
          $ref: '#/components/schemas/c1.api.app.v1.AppUsageControls'
        updateMask:
          nullable: true
          type: string
          x-speakeasy-terraform-ignore: true
      title: Update App Usage Controls Request
      type: object
      x-speakeasy-name-override: UpdateAppUsageControlsRequest
    c1.api.app.v1.UpdateAppUsageControlsResponse:
      description: The UpdateAppUsageControlsResponse message contains the updated
        AppUsageControls object.
      properties:
        appUsageControls:
          $ref: '#/components/schemas/c1.api.app.v1.AppUsageControls'
      title: Update App Usage Controls Response
      type: object
      x-speakeasy-name-override: UpdateAppUsageControlsResponse
    c1.api.attribute.v1.AttributeType:
      description: AttributeType defines the type of an attribute.
      properties:
        id:
          description: The ID of the AttributeType.
          type: string
        name:
          description: The name of the AttributeType.
          type: string
      title: Attribute Type
      type: object
      x-speakeasy-name-override: AttributeType
    c1.api.attribute.v1.AttributeValue:
      description: AttributeValue is the value of an attribute of a defined type.
      properties:
        attributeTypeId:
          description: The ID of the AttributeType that this AttributeValue belongs
            to.
          type: string
        createdAt:
          format: date-time
          readOnly: true
          type: string
        deletedAt:
          format: date-time
          readOnly: true
          type: string
        id:
          description: The ID of the AttributeValue.
          type: string
        updatedAt:
          format: date-time
          readOnly: true
          type: string
        value:
          description: The value of the AttributeValue. This is the string that will
            be displayed to the user.
          type: string
      title: Attribute Value
      type: object
      x-speakeasy-name-override: AttributeValue
    c1.api.attribute.v1.CreateAttributeValueRequest:
      description: The CreateAttributeValueRequest message.
      properties:
        attributeTypeId:
          description: The attributeTypeId field.
          type: string
        value:
          description: The value field.
          type: string
      title: Create Attribute Value Request
      type: object
      x-speakeasy-name-override: CreateAttributeValueRequest
    c1.api.attribute.v1.CreateAttributeValueResponse:
      description: CreateAttributeValueResponse is the response for creating an attribute
        value.
      properties:
        value:
          $ref: '#/components/schemas/c1.api.attribute.v1.AttributeValue'
      title: Create Attribute Value Response
      type: object
      x-speakeasy-name-override: CreateAttributeValueResponse
    c1.api.attribute.v1.DeleteAttributeValueRequestInput:
      description: The DeleteAttributeValueRequest message.
      title: Delete Attribute Value Request
      type: object
      x-speakeasy-name-override: DeleteAttributeValueRequest
    c1.api.attribute.v1.DeleteAttributeValueResponse:
      description: DeleteAttributeValueResponse is the empty response for deleting
        an attribute value.
      title: Delete Attribute Value Response
      type: object
      x-speakeasy-name-override: DeleteAttributeValueResponse
    c1.api.attribute.v1.GetAttributeValueResponse:
      description: GetAttributeValueResponse is the response for getting an attribute
        value by id.
      properties:
        value:
          $ref: '#/components/schemas/c1.api.attribute.v1.AttributeValue'
      title: Get Attribute Value Response
      type: object
      x-speakeasy-name-override: GetAttributeValueResponse
    c1.api.attribute.v1.ListAttributeTypesResponse:
      description: ListAttributeTypesResponse is the response for listing attribute
        types.
      properties:
        list:
          description: The list of AttributeTypes.
          items:
            $ref: '#/components/schemas/c1.api.attribute.v1.AttributeType'
          nullable: true
          type: array
        nextPageToken:
          description: "The nextPageToken is shown for the next page if the number\
            \ of results is larger than the max page size.\n The server returns one\
            \ page of results and the nextPageToken until all results are retreived.\n\
            \ To retrieve the next page, use the same request and append a pageToken\
            \ field with the value of nextPageToken shown on the previous page."
          type: string
      title: List Attribute Types Response
      type: object
      x-speakeasy-name-override: ListAttributeTypesResponse
    c1.api.attribute.v1.ListAttributeValuesResponse:
      description: ListAttributeValuesResponse is the response for listing attribute
        values for a given AttributeType.
      properties:
        list:
          description: The list of AttributeValues.
          items:
            $ref: '#/components/schemas/c1.api.attribute.v1.AttributeValue'
          nullable: true
          type: array
        nextPageToken:
          description: "The nextPageToken is shown for the next page if the number\
            \ of results is larger than the max page size.\n The server returns one\
            \ page of results and the nextPageToken until all results are retreived.\n\
            \ To retrieve the next page, use the same request and append a pageToken\
            \ field with the value of nextPageToken shown on the previous page."
          type: string
      title: List Attribute Values Response
      type: object
      x-speakeasy-name-override: ListAttributeValuesResponse
    c1.api.attribute.v1.SearchAttributeValuesRequest:
      description: Search Attributes by a few properties.
      properties:
        attributeTypeIds:
          description: The attribute type ids for what type of attributes to search
            for.
          items:
            type: string
          nullable: true
          type: array
        excludeIds:
          description: Exclude attributes with these ids from the search results.
          items:
            type: string
          nullable: true
          type: array
        ids:
          description: Include attributes with these ids in the search results.
          items:
            type: string
          nullable: true
          type: array
        pageSize:
          description: The pageSize where 0 <= pageSize <= 100. Values < 10 will be
            set to 10. A value of 0 returns the default page size (currently 25)
          format: int32
          type: number
        pageToken:
          description: The pageToken field.
          type: string
        query:
          description: Query the attributes with a fuzzy search on display name and
            description.
          type: string
        value:
          description: Search for attributes with a case insensitive match on the
            attribute value which is the attribute name.
          type: string
      title: Search Attribute Values Request
      type: object
      x-speakeasy-name-override: SearchAttributeValuesRequest
    c1.api.attribute.v1.SearchAttributeValuesResponse:
      description: SearchAttributeValuesResponse is the response for searching AttributeValues.
      properties:
        list:
          description: The list of returned AttributeValues.
          items:
            $ref: '#/components/schemas/c1.api.attribute.v1.AttributeValue'
          nullable: true
          type: array
        nextPageToken:
          description: "The nextPageToken is shown for the next page if the number\
            \ of results is larger than the max page size.\n The server returns one\
            \ page of results and the nextPageToken until all results are retreived.\n\
            \ To retrieve the next page, use the same request and append a pageToken\
            \ field with the value of nextPageToken shown on the previous page."
          type: string
      title: Search Attribute Values Response
      type: object
      x-speakeasy-name-override: SearchAttributeValuesResponse
    c1.api.auth.v1.IntrospectResponse:
      description: IntrospectResponse contains information about the current user
        who is authenticated.
      properties:
        features:
          description: The list of feature flags enabled for the tenant the logged
            in user belongs to.
          items:
            type: string
          nullable: true
          type: array
        permissions:
          description: The list of permissions that the current logged in user has.
          items:
            type: string
          nullable: true
          type: array
        principleId:
          description: The principleID of the current logged in user.
          type: string
        roles:
          description: The list of roles that the current logged in user has.
          items:
            type: string
          nullable: true
          type: array
        userId:
          description: The userID of the current logged in user.
          type: string
      title: Introspect Response
      type: object
      x-speakeasy-name-override: IntrospectResponse
    c1.api.directory.v1.Directory:
      description: This object indicates that an app is also a directory.
      properties:
        appId:
          description: The ID of the app associated with the directory.
          readOnly: true
          type: string
        createdAt:
          format: date-time
          readOnly: true
          type: string
        deletedAt:
          format: date-time
          readOnly: true
          type: string
        updatedAt:
          format: date-time
          readOnly: true
          type: string
      title: Directory
      type: object
      x-speakeasy-name-override: Directory
    c1.api.directory.v1.DirectoryExpandMask:
      description: The fields to be included in the directory response.
      properties:
        paths:
          description: An array of fields to be included in the directory response.
          items:
            type: string
          nullable: true
          type: array
      title: Directory Expand Mask
      type: object
      x-speakeasy-name-override: DirectoryExpandMask
    c1.api.directory.v1.DirectoryServiceCreateRequest:
      description: Uplevel an app into a full directory.
      properties:
        appId:
          description: The AppID to make into a directory, providing identities and
            more for the C1 app.
          type: string
        expandMask:
          $ref: '#/components/schemas/c1.api.directory.v1.DirectoryExpandMask'
      title: Directory Service Create Request
      type: object
      x-speakeasy-name-override: DirectoryServiceCreateRequest
    c1.api.directory.v1.DirectoryServiceCreateResponse:
      description: The DirectoryServiceCreateResponse message.
      properties:
        directoryView:
          $ref: '#/components/schemas/c1.api.directory.v1.DirectoryView'
        expanded:
          description: List of serialized related objects.
          items:
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type
              that describes the type of the serialized message.
            properties:
              '@type':
                description: The type of the serialized message.
                type: string
            type: object
          nullable: true
          type: array
      title: Directory Service Create Response
      type: object
      x-speakeasy-name-override: DirectoryServiceCreateResponse
    c1.api.directory.v1.DirectoryServiceDeleteRequestInput:
      description: DirectoryServiceDeleteRequest is the request message for deleting
        a directory. It uses URL values for input.
      title: Directory Service Delete Request
      type: object
      x-speakeasy-name-override: DirectoryServiceDeleteRequest
    c1.api.directory.v1.DirectoryServiceDeleteResponse:
      description: Empty response with a status code indicating success.
      title: Directory Service Delete Response
      type: object
      x-speakeasy-name-override: DirectoryServiceDeleteResponse
    c1.api.directory.v1.DirectoryServiceGetResponse:
      description: "The Directory Service Get Response returns a directory view with\
        \ a directory and JSONPATHs indicating the\n location in the expanded array\
        \ that items are expanded as indicated by the expand mask in the request."
      properties:
        directoryView:
          $ref: '#/components/schemas/c1.api.directory.v1.DirectoryView'
        expanded:
          description: List of serialized related objects.
          items:
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type
              that describes the type of the serialized message.
            properties:
              '@type':
                description: The type of the serialized message.
                type: string
            type: object
          nullable: true
          type: array
      title: Directory Service Get Response
      type: object
      x-speakeasy-name-override: DirectoryServiceGetResponse
    c1.api.directory.v1.DirectoryServiceListResponse:
      description: The DirectoryServiceListResponse message contains a list of results
        and a nextPageToken if applicable.
      properties:
        expanded:
          description: "The nextPageToken is shown for the next page if the number\
            \ of results is larger than the max page size.\n The server returns one\
            \ page of results and the nextPageToken until all results are retreived.\n\
            \ To retrieve the next page, use the same request and append a pageToken\
            \ field with the value of nextPageToken shown on the previous page."
          items:
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type
              that describes the type of the serialized message.
            properties:
              '@type':
                description: The type of the serialized message.
                type: string
            type: object
          nullable: true
          type: array
        list:
          description: The list of results containing up to X results, where X is
            the page size defined in the request.
          items:
            $ref: '#/components/schemas/c1.api.directory.v1.DirectoryView'
          nullable: true
          type: array
        nextPageToken:
          description: List of serialized related objects.
          type: string
      title: Directory Service List Response
      type: object
      x-speakeasy-name-override: DirectoryServiceListResponse
    c1.api.directory.v1.DirectoryView:
      description: The directory view contains a directory and an app_path which is
        a JSONPATH set to the location in the expand mask that the expanded app will
        live if requested by the expander.
      properties:
        appPath:
          description: JSONPATH expression indicating the location of the App object
            in the  array.
          type: string
        directory:
          $ref: '#/components/schemas/c1.api.directory.v1.Directory'
      title: Directory View
      type: object
      x-speakeasy-name-override: DirectoryView
    c1.api.iam.v1.GetRolesResponse:
      description: The GetRolesResponse message contains the retrieved role.
      properties:
        role:
          $ref: '#/components/schemas/c1.api.iam.v1.Role'
      title: Get Roles Response
      type: object
      x-speakeasy-name-override: GetRolesResponse
    c1.api.iam.v1.ListRolesResponse:
      description: The ListRolesResponse message contains a list of results and a
        nextPageToken if applicable.
      properties:
        list:
          description: The list of results containing up to X results, where X is
            the page size defined in the request.
          items:
            $ref: '#/components/schemas/c1.api.iam.v1.Role'
          nullable: true
          type: array
        nextPageToken:
          description: "The nextPageToken is shown for the next page if the number\
            \ of results is larger than the max page size.\n The server returns one\
            \ page of results and the nextPageToken until all results are retreived.\n\
            \ To retrieve the next page, use the same request and append a pageToken\
            \ field with the value of nextPageToken shown on the previous page."
          type: string
      title: List Roles Response
      type: object
      x-speakeasy-name-override: ListRolesResponse
    c1.api.iam.v1.PersonalClient:
      description: The PersonalClient message contains information about a presonal
        client credential.
      properties:
        allowSourceCidr:
          description: If set, only allows the CIDRs in the array to use the credential.
          items:
            type: string
          nullable: true
          type: array
        clientId:
          description: The clientID of the credential.
          readOnly: true
          type: string
        createdAt:
          format: date-time
          readOnly: true
          type: string
        deletedAt:
          format: date-time
          readOnly: true
          type: string
        displayName:
          description: The display name of the personal client credential.
          type: string
        expiresTime:
          format: date-time
          type: string
        id:
          description: The unique ID of the personal client credential.
          readOnly: true
          type: string
        lastUsedAt:
          format: date-time
          readOnly: true
          type: string
        scopedRoles:
          description: "scoped_roles provides a list of IAM Roles\n that this OAuth2\
            \ Client's API permissions\n are reduced to. The permissions granted to\
            \ OAuth2 Client\n are AND'ed against the owning User's own permissions."
          items:
            type: string
          nullable: true
          type: array
        updatedAt:
          format: date-time
          readOnly: true
          type: string
        userId:
          description: The ID of the user that this credential is created for.
          readOnly: true
          type: string
      title: Personal Client
      type: object
      x-speakeasy-name-override: PersonalClient
    c1.api.iam.v1.PersonalClientServiceCreateRequest:
      description: The PersonalClientServiceCreateRequest message contains the fields
        for creating a new personal client.
      properties:
        allowSourceCidr:
          description: A list of CIDRs to restrict this credential to.
          items:
            type: string
          nullable: true
          type: array
        displayName:
          description: The display name for the new personal client.
          type: string
        expires:
          format: duration
          type: string
        scopedRoles:
          description: The list of roles to restrict the credential to.
          items:
            type: string
          nullable: true
          type: array
      title: Personal Client Service Create Request
      type: object
      x-speakeasy-name-override: PersonalClientServiceCreateRequest
    c1.api.iam.v1.PersonalClientServiceCreateResponse:
      description: The PersonalClientServiceCreateResponse message contains the created
        personal client and client secret.
      properties:
        client:
          $ref: '#/components/schemas/c1.api.iam.v1.PersonalClient'
        clientSecret:
          description: The client secret that corresponds to the personal client.
            Make sure to save this, because it cannot be returned or queried again.
          type: string
      title: Personal Client Service Create Response
      type: object
      x-speakeasy-name-override: PersonalClientServiceCreateResponse
    c1.api.iam.v1.Role:
      description: Role is a role that can be assigned to a user in ConductorOne.
      properties:
        createdAt:
          format: date-time
          readOnly: true
          type: string
        deletedAt:
          format: date-time
          readOnly: true
          type: string
        displayName:
          description: The display name of the role.
          type: string
        id:
          description: The id of the role.
          readOnly: true
          type: string
        name:
          description: The internal name of the role.
          readOnly: true
          type: string
        permissions:
          description: The list of permissions this role has.
          items:
            type: string
          nullable: true
          type: array
        serviceRoles:
          description: The list of serviceRoles that this role has.
          items:
            type: string
          nullable: true
          type: array
        systemBuiltin:
          description: The system builtin field. If this field is set, the role is
            not editable.
          readOnly: true
          type: boolean
        updatedAt:
          format: date-time
          readOnly: true
          type: string
      title: Role
      type: object
      x-speakeasy-name-override: Role
    c1.api.iam.v1.UpdateRoleRequestInput:
      description: The UpdateRoleRequest message contains the role to update and the
        update mask.
      properties:
        role:
          $ref: '#/components/schemas/c1.api.iam.v1.Role'
        updateMask:
          nullable: true
          type: string
          x-speakeasy-terraform-ignore: true
      title: Update Role Request
      type: object
      x-speakeasy-name-override: UpdateRoleRequest
    c1.api.iam.v1.UpdateRolesResponse:
      description: UpdateRolesResponse is the response message containing the updated
        role.
      properties:
        role:
          $ref: '#/components/schemas/c1.api.iam.v1.Role'
      title: Update Roles Response
      type: object
      x-speakeasy-name-override: UpdateRolesResponse
    c1.api.policy.v1.Accept:
      description: This policy step indicates that a ticket should have an approved
        outcome. This is a terminal approval state and is used to explicitly define
        the end of approval steps.
      nullable: true
      title: Accept
      type: object
      x-speakeasy-name-override: Accept
    c1.api.policy.v1.AcceptInstance:
      description: "This policy step indicates that a ticket should have an approved\
        \ outcome. This is a terminal approval state and is used to explicitly define\
        \ the end of approval steps.\n The instance is just a marker for it being\
        \ copied into an active policy."
      nullable: true
      title: Accept Instance
      type: object
      x-speakeasy-name-override: AcceptInstance
    c1.api.policy.v1.AppEntitlementReference:
      description: This object references an app entitlement's ID and AppID.
      properties:
        appEntitlementId:
          description: The ID of the Entitlement.
          type: string
        appId:
          description: The ID of the App this entitlement belongs to.
          type: string
      title: App Entitlement Reference
      type: object
      x-speakeasy-name-override: AppEntitlementReference
    c1.api.policy.v1.AppGroupApproval:
      description: The AppGroupApproval object provides the configuration for setting
        a group as the approvers of an approval policy step.
      nullable: true
      properties:
        allowSelfApproval:
          description: Configuration to allow self approval if the target user is
            a member of the group during this step.
          readOnly: true
          type: boolean
        appGroupId:
          description: The ID of the group specified for approval.
          readOnly: true
          type: string
        appId:
          description: The ID of the app that conatins the group specified for approval.
          readOnly: true
          type: string
        fallback:
          description: Configuration to allow a fallback if the group is empty.
          readOnly: true
          type: boolean
        fallbackUserIds:
          description: Configuration to specific which users to fallback to if fallback
            is enabled and the group is empty.
          items:
            type: string
          nullable: true
          readOnly: true
          type: array
      title: App Group Approval
      type: object
      x-speakeasy-name-override: AppGroupApproval
    c1.api.policy.v1.AppOwnerApproval:
      description: App owner approval provides the configuration for an approval step
        when the app owner is the target.
      nullable: true
      properties:
        allowSelfApproval:
          description: Configuration that allows a user to self approve if they are
            an app owner during this approval step.
          readOnly: true
          type: boolean
      title: App Owner Approval
      type: object
      x-speakeasy-name-override: AppOwnerApproval
    c1.api.policy.v1.Approval:
      description: "The Approval message.\n\nThis message contains a oneof named typ.\
        \ Only a single field of the following list may be set at a time:\n  - users\n\
        \  - manager\n  - appOwners\n  - group\n  - self\n  - entitlementOwners\n\
        \  - expression\n"
      nullable: true
      properties:
        allowReassignment:
          description: Configuration to allow reassignment by reviewers during this
            step.
          readOnly: true
          type: boolean
        appOwners:
          $ref: '#/components/schemas/c1.api.policy.v1.AppOwnerApproval'
        assigned:
          description: A field indicating whether this step is assigned.
          readOnly: true
          type: boolean
        entitlementOwners:
          $ref: '#/components/schemas/c1.api.policy.v1.EntitlementOwnerApproval'
        expression:
          $ref: '#/components/schemas/c1.api.policy.v1.ExpressionApproval'
        group:
          $ref: '#/components/schemas/c1.api.policy.v1.AppGroupApproval'
        manager:
          $ref: '#/components/schemas/c1.api.policy.v1.ManagerApproval'
        requireApprovalReason:
          description: Configuration to require a reason when approving this step.
          readOnly: true
          type: boolean
        requireReassignmentReason:
          description: Configuration to require a reason when reassigning this step.
          readOnly: true
          type: boolean
        self:
          $ref: '#/components/schemas/c1.api.policy.v1.SelfApproval'
        users:
          $ref: '#/components/schemas/c1.api.policy.v1.UserApproval'
      title: Approval
      type: object
      x-speakeasy-name-override: Approval
    c1.api.policy.v1.ApprovalInstance:
      description: "The approval instance object describes the way a policy step should\
        \ be approved as well as its outcomes and state.\n\nThis message contains\
        \ a oneof named outcome. Only a single field of the following list may be\
        \ set at a time:\n  - approved\n  - denied\n  - reassigned\n  - restarted\n\
        \  - reassignedByError\n"
      nullable: true
      properties:
        approval:
          $ref: '#/components/schemas/c1.api.policy.v1.Approval'
        approved:
          $ref: '#/components/schemas/c1.api.policy.v1.ApprovedAction'
        denied:
          $ref: '#/components/schemas/c1.api.policy.v1.DeniedAction'
        reassigned:
          $ref: '#/components/schemas/c1.api.policy.v1.ReassignedAction'
        reassignedByError:
          $ref: '#/components/schemas/c1.api.policy.v1.ReassignedByErrorAction'
        restarted:
          $ref: '#/components/schemas/c1.api.policy.v1.RestartAction'
        state:
          description: The state of the approval instance
          enum:
          - APPROVAL_INSTANCE_STATE_UNSPECIFIED
          - APPROVAL_INSTANCE_STATE_INIT
          - APPROVAL_INSTANCE_STATE_SENDING_NOTIFICATIONS
          - APPROVAL_INSTANCE_STATE_WAITING
          - APPROVAL_INSTANCE_STATE_DONE
          readOnly: true
          type: string
      title: Approval Instance
      type: object
      x-speakeasy-name-override: ApprovalInstance
    c1.api.policy.v1.ApprovedAction:
      description: The approved action indicates that the approvalinstance had an
        outcome of approved.
      nullable: true
      properties:
        approvedAt:
          format: date-time
          readOnly: true
          type: string
        entitlements:
          description: The entitlements that were approved. This will only ever be
            a list of one entitlement.
          items:
            $ref: '#/components/schemas/c1.api.policy.v1.AppEntitlementReference'
          nullable: true
          readOnly: true
          type: array
        userId:
          description: The UserID that approved this step.
          readOnly: true
          type: string
      title: Approved Action
      type: object
      x-speakeasy-name-override: ApprovedAction
    c1.api.policy.v1.CancelledAction:
      description: The outcome of a provision instance that is cancelled.
      nullable: true
      properties:
        cancelledAt:
          format: date-time
          type: string
        cancelledByUserId:
          description: The userID, usually the system, that cancells a provision instance.
          type: string
      title: Cancelled Action
      type: object
      x-speakeasy-name-override: CancelledAction
    c1.api.policy.v1.CompletedAction:
      description: The outcome of a provision instance that has been completed succesfully.
      nullable: true
      properties:
        completedAt:
          format: date-time
          type: string
        entitlements:
          description: The list of entitlements that were provisioned. This is leftover
            from an older design, and is only ever going to be a single entitlement.
          items:
            $ref: '#/components/schemas/c1.api.policy.v1.AppEntitlementReference'
          nullable: true
          type: array
        userId:
          description: The UserID of who completed provisioning. For connector provisioning
            this is the system user id, for manual provisioning this is who clicked
            "provision complete"
          type: string
      title: Completed Action
      type: object
      x-speakeasy-name-override: CompletedAction
    c1.api.policy.v1.ConnectorProvision:
      description: Indicates that a connector should perform the provisioning. This
        object has no fields.
      nullable: true
      title: Connector Provision
      type: object
      x-speakeasy-name-override: ConnectorProvision
    c1.api.policy.v1.CreatePolicyRequest:
      description: The CreatePolicyRequest message is used to create a new policy.
      properties:
        description:
          description: The description of the new policy.
          type: string
        displayName:
          description: The display name of the new policy.
          type: string
        policySteps:
          additionalProperties:
            $ref: '#/components/schemas/c1.api.policy.v1.PolicySteps'
          description: The map of policy type to policy steps. The key is the stringified
            version of the enum. See other policies for examples.
          type: object
        policyType:
          description: The enum of the policy type.
          enum:
          - POLICY_TYPE_UNSPECIFIED
          - POLICY_TYPE_GRANT
          - POLICY_TYPE_REVOKE
          - POLICY_TYPE_CERTIFY
          - POLICY_TYPE_ACCESS_REQUEST
          - POLICY_TYPE_PROVISION
          type: string
        postActions:
          description: Actions to occur after a policy finishes. As of now this is
            only valid on a certify policy to remediate a denied certification immediately.
          items:
            $ref: '#/components/schemas/c1.api.policy.v1.PolicyPostActions'
          nullable: true
          type: array
        reassignTasksToDelegates:
          description: Allows reassigning tasks to delegates.
          type: boolean
      title: Create Policy Request
      type: object
      x-speakeasy-entity: Policy
      x-speakeasy-name-override: CreatePolicyRequest
    c1.api.policy.v1.CreatePolicyResponse:
      description: The CreatePolicyResponse message contains the created policy object.
      properties:
        policy:
          $ref: '#/components/schemas/c1.api.policy.v1.Policy'
      title: Create Policy Response
      type: object
      x-speakeasy-name-override: CreatePolicyResponse
    c1.api.policy.v1.DelegatedProvision:
      description: This provision step indicates that we should delegate provisioning
        to the configuration of another app entitlement. This app entitlement does
        not have to be one from the same app, but MUST be configured as a proxy binding
        leading into this entitlement.
      nullable: true
      properties:
        appId:
          description: The AppID of the entitlement to delegate provisioning to.
          type: string
        entitlementId:
          description: The ID of the entitlement we are delegating provisioning to.
          type: string
        implicit:
          description: If true, a binding will be automatically created from the entitlement
            of the parent app.
          type: boolean
      title: Delegated Provision
      type: object
      x-speakeasy-name-override: DelegatedProvision
    c1.api.policy.v1.DeletePolicyRequestInput:
      description: The DeletePolicyRequest message contains the ID of the policy to
        delete. It uses URL value for input.
      title: Delete Policy Request
      type: object
      x-speakeasy-entity: Policy
      x-speakeasy-name-override: DeletePolicyRequest
    c1.api.policy.v1.DeletePolicyResponse:
      description: Empty response with a status code indicating success.
      title: Delete Policy Response
      type: object
      x-speakeasy-name-override: DeletePolicyResponse
    c1.api.policy.v1.DeniedAction:
      description: The denied action indicates that the c1.api.policy.v1.ApprovalInstance
        had an outcome of denied.
      nullable: true
      properties:
        deniedAt:
          format: date-time
          readOnly: true
          type: string
        userId:
          description: The UserID that denied this step.
          readOnly: true
          type: string
      title: Denied Action
      type: object
      x-speakeasy-name-override: DeniedAction
    c1.api.policy.v1.EntitlementOwnerApproval:
      description: The entitlement owner approval allows configuration of the approval
        step when the target approvers are the entitlement owners.
      nullable: true
      properties:
        allowSelfApproval:
          description: Configuration to allow self approval if the target user is
            an entitlement owner during this step.
          readOnly: true
          type: boolean
        fallback:
          description: Configuration to allow a fallback if the entitlement owner
            cannot be identified.
          readOnly: true
          type: boolean
        fallbackUserIds:
          description: Configuration to specific which users to fallback to if fallback
            is enabled and the entitlement owner cannot be identified.
          items:
            type: string
          nullable: true
          readOnly: true
          type: array
      title: Entitlement Owner Approval
      type: object
      x-speakeasy-name-override: EntitlementOwnerApproval
    c1.api.policy.v1.ErroredAction:
      description: The outcome of a provision instance that has errored.
      nullable: true
      properties:
        description:
          description: The description of a provision instance that has errored.
          type: string
        errorCode:
          description: The error code of a provision instance that has errored. This
            is only PEC-1 for now, but more will be added in the future.
          type: string
        erroredAt:
          format: date-time
          type: string
      title: Errored Action
      type: object
      x-speakeasy-name-override: ErroredAction
    c1.api.policy.v1.ExpressionApproval:
      description: The ExpressionApproval message.
      nullable: true
      properties:
        allowSelfApproval:
          description: Configuration to allow self approval of if the user is specified
            and also the target of the ticket.
          readOnly: true
          type: boolean
        assignedUserIds:
          description: The assignedUserIds field.
          items:
            type: string
          nullable: true
          readOnly: true
          type: array
        expressions:
          description: Array of dynamic expressions to determine the approvers.  The
            first expression to return a non-empty list of users will be used.
          items:
            type: string
          nullable: true
          readOnly: true
          type: array
        fallback:
          description: Configuration to allow a fallback if the expression does not
            return a valid list of users.
          readOnly: true
          type: boolean
        fallbackUserIds:
          description: Configuration to specific which users to fallback to if and
            the expression does not return a valid list of users.
          items:
            type: string
          nullable: true
          readOnly: true
          type: array
      title: Expression Approval
      type: object
      x-speakeasy-name-override: ExpressionApproval
    c1.api.policy.v1.GetPolicyResponse:
      description: The GetPolicyResponse message contains the policy object.
      properties:
        policy:
          $ref: '#/components/schemas/c1.api.policy.v1.Policy'
      title: Get Policy Response
      type: object
      x-speakeasy-name-override: GetPolicyResponse
    c1.api.policy.v1.ListPolicyResponse:
      description: The ListPolicyResponse message.
      properties:
        list:
          description: The list of results containing up to X results, where X is
            the page size defined in the request
          items:
            $ref: '#/components/schemas/c1.api.policy.v1.Policy'
          nullable: true
          type: array
        nextPageToken:
          description: The nextPageToken is shown for the next page if the number
            of results is larger than the max page size. The server returns one page
            of results and the nextPageToken until all results are retreived. To retrieve
            the next page, use the same request and append a pageToken field with
            the value of nextPageToken shown on the previous page.
          type: string
      title: List Policy Response
      type: object
      x-speakeasy-name-override: ListPolicyResponse
    c1.api.policy.v1.ManagerApproval:
      description: The manager approval object provides configuration options for
        approval when the target of the approval is the manager of the user in the
        task.
      nullable: true
      properties:
        allowSelfApproval:
          description: Configuration to allow self approval if the target user is
            their own manager. This may occur if a service account has an identity
            user and manager specified as the same person.
          readOnly: true
          type: boolean
        assignedUserIds:
          description: The array of users determined to be the manager during processing
            time.
          items:
            type: string
          nullable: true
          readOnly: true
          type: array
        fallback:
          description: Configuration to allow a fallback if no manager is found.
          readOnly: true
          type: boolean
        fallbackUserIds:
          description: Configuration to specific which users to fallback to if fallback
            is enabled and no manager is found.
          items:
            type: string
          nullable: true
          readOnly: true
          type: array
      title: Manager Approval
      type: object
      x-speakeasy-name-override: ManagerApproval
    c1.api.policy.v1.ManualProvision:
      description: Manual provisioning indicates that a human must intervene for the
        provisioning of this step.
      nullable: true
      properties:
        instructions:
          description: This field indicates a text body of instructions for the provisioner
            to indicate.
          type: string
        userIds:
          description: An array of users that are required to provision during this
            step.
          items:
            type: string
          nullable: true
          type: array
      title: Manual Provision
      type: object
      x-speakeasy-name-override: ManualProvision
    c1.api.policy.v1.Marker:
      description: The Marker message.
      properties:
        endColumn:
          description: The endColumn field.
          format: int32
          type: number
        endLineNumber:
          description: The endLineNumber field.
          format: int32
          type: number
        message:
          description: The message field.
          type: string
        severity:
          description: The severity field.
          enum:
          - UNKNOWN
          - HINT
          - INFO
          - WARNING
          - ERROR
          type: string
        startColumn:
          description: The startColumn field.
          format: int32
          type: number
        startLineNumber:
          description: The startLineNumber field.
          format: int32
          type: number
      title: Marker
      type: object
      x-speakeasy-name-override: Marker
    c1.api.policy.v1.Policy:
      description: A policy describes the behavior of the ConductorOne system when
        processing a task. You can describe the type, approvers, fallback behavior,
        and escalation processes.
      properties:
        createdAt:
          format: date-time
          readOnly: true
          type: string
        deletedAt:
          format: date-time
          readOnly: true
          type: string
        description:
          description: The description of the Policy.
          type: string
        displayName:
          description: The display name of the Policy.
          type: string
        id:
          description: The ID of the Policy.
          readOnly: true
          type: string
        policySteps:
          additionalProperties:
            $ref: '#/components/schemas/c1.api.policy.v1.PolicySteps'
          description: A map of string(policy type) to steps in a policy. This structure
            is leftover from a previous design, and should only ever have one key->value
            set.
          type: object
        policyType:
          description: Indicates the type of this policy. Can also be used to get
            the value from policySteps.
          enum:
          - POLICY_TYPE_UNSPECIFIED
          - POLICY_TYPE_GRANT
          - POLICY_TYPE_REVOKE
          - POLICY_TYPE_CERTIFY
          - POLICY_TYPE_ACCESS_REQUEST
          - POLICY_TYPE_PROVISION
          type: string
        postActions:
          description: An array of actions (ordered) to take place after a policy
            completes processing.
          items:
            $ref: '#/components/schemas/c1.api.policy.v1.PolicyPostActions'
          nullable: true
          type: array
        reassignTasksToDelegates:
          description: A policy configuration option that allows for reassinging tasks
            to delgated users. This level of delegation referrs to the individual
            delegates users set on their account.
          type: boolean
        rules:
          description: The rules field.
          items:
            $ref: '#/components/schemas/c1.api.policy.v1.Policy.Rule'
          nullable: true
          type: array
        systemBuiltin:
          description: Whether this policy is a builtin system policy. Builtin system
            policies cannot be edited.
          readOnly: true
          type: boolean
        updatedAt:
          format: date-time
          readOnly: true
          type: string
      title: Policy
      type: object
      x-speakeasy-entity: Policy
      x-speakeasy-name-override: Policy
    c1.api.policy.v1.Policy.Rule:
      description: The Rule message.
      properties:
        condition:
          description: The condition field.
          type: string
        policyKey:
          description: This is a reference to a list of policy steps from `policy_steps`
          type: string
      title: Rule
      type: object
      x-speakeasy-name-override: Rule
    c1.api.policy.v1.PolicyInstance:
      description: A policy instance is an object that contains a reference to the
        policy it was created from, the currently executing step, the next steps,
        and the history of previously completed steps.
      properties:
        current:
          $ref: '#/components/schemas/c1.api.policy.v1.PolicyStepInstance'
        history:
          description: An array of steps that were previously processed by the ticket
            with their outcomes set, in order.
          items:
            $ref: '#/components/schemas/c1.api.policy.v1.PolicyStepInstance'
          nullable: true
          readOnly: true
          type: array
        next:
          description: An array of steps that will be processed by the ticket, in
            order.
          items:
            $ref: '#/components/schemas/c1.api.policy.v1.PolicyStep'
          nullable: true
          readOnly: true
          type: array
        policy:
          $ref: '#/components/schemas/c1.api.policy.v1.Policy'
      title: Policy Instance
      type: object
      x-speakeasy-name-override: PolicyInstance
    c1.api.policy.v1.PolicyPostActions:
      description: "These are actions to happen after a policy is complete.\n\nThis\
        \ message contains a oneof named action. Only a single field of the following\
        \ list may be set at a time:\n  - certifyRemediateImmediately\n"
      properties:
        certifyRemediateImmediately:
          description: "ONLY valid when used in a CERTIFY Ticket Type:\n Causes any\
            \ deprovision or change in a grant to be applied when Certify Ticket is\
            \ closed.\nThis field is part of the `action` oneof.\nSee the documentation\
            \ for `c1.api.policy.v1.PolicyPostActions` for more details."
          nullable: true
          type: boolean
      title: Policy Post Actions
      type: object
      x-speakeasy-name-override: PolicyPostActions
    c1.api.policy.v1.PolicyRef:
      description: The PolicyRef message.
      properties:
        id:
          description: The id field.
          type: string
      title: Policy Ref
      type: object
      x-speakeasy-name-override: PolicyRef
    c1.api.policy.v1.PolicyStep:
      description: "The PolicyStep message.\n\nThis message contains a oneof named\
        \ step. Only a single field of the following list may be set at a time:\n\
        \  - approval\n  - provision\n  - accept\n  - reject\n"
      properties:
        accept:
          $ref: '#/components/schemas/c1.api.policy.v1.Accept'
        approval:
          $ref: '#/components/schemas/c1.api.policy.v1.Approval'
        provision:
          $ref: '#/components/schemas/c1.api.policy.v1.Provision'
        reject:
          $ref: '#/components/schemas/c1.api.policy.v1.Reject'
      title: Policy Step
      type: object
      x-speakeasy-name-override: PolicyStep
    c1.api.policy.v1.PolicyStepInstance:
      description: "The policy step instance includes a reference to an instance of\
        \ a policy step that tracks state and has a unique ID.\n\nThis message contains\
        \ a oneof named instance. Only a single field of the following list may be\
        \ set at a time:\n  - approval\n  - provision\n  - accept\n  - reject\n"
      properties:
        accept:
          $ref: '#/components/schemas/c1.api.policy.v1.AcceptInstance'
        approval:
          $ref: '#/components/schemas/c1.api.policy.v1.ApprovalInstance'
        id:
          description: The ID of the PolicyStepInstance. This is required by many
            action submission endpoints to indicate what step you're approving.
          readOnly: true
          type: string
        policyGenerationId:
          description: The policy generation id refers to the version of the policy
            that this step was created from.
          type: string
        provision:
          $ref: '#/components/schemas/c1.api.policy.v1.ProvisionInstance'
        reject:
          $ref: '#/components/schemas/c1.api.policy.v1.RejectInstance'
        state:
          description: The state of the step, which is either active or done.
          enum:
          - POLICY_STEP_STATE_UNSPECIFIED
          - POLICY_STEP_STATE_ACTIVE
          - POLICY_STEP_STATE_DONE
          readOnly: true
          type: string
      title: Policy Step Instance
      type: object
      x-speakeasy-name-override: PolicyStepInstance
    c1.api.policy.v1.PolicySteps:
      description: The PolicySteps message.
      properties:
        steps:
          description: An array of policy steps indicating the processing flow of
            a policy. These steps are oneOfs, and only one property may be set for
            each array index at a time.
          items:
            $ref: '#/components/schemas/c1.api.policy.v1.PolicyStep'
          nullable: true
          type: array
      title: Policy Steps
      type: object
      x-speakeasy-name-override: PolicySteps
    c1.api.policy.v1.Provision:
      description: The provision step references a provision policy for this step.
      nullable: true
      properties:
        assigned:
          description: A field indicating whether this step is assigned.
          type: boolean
        provisionPolicy:
          $ref: '#/components/schemas/c1.api.policy.v1.ProvisionPolicy'
        provisionTarget:
          $ref: '#/components/schemas/c1.api.policy.v1.ProvisionTarget'
      title: Provision
      type: object
      x-speakeasy-name-override: Provision
    c1.api.policy.v1.ProvisionInstance:
      description: "A provision instance describes the specific configuration of an\
        \ executing provision policy step including actions taken and notification\
        \ id.\n\nThis message contains a oneof named outcome. Only a single field\
        \ of the following list may be set at a time:\n  - completed\n  - cancelled\n\
        \  - errored\n  - reassignedByError\n"
      nullable: true
      properties:
        cancelled:
          $ref: '#/components/schemas/c1.api.policy.v1.CancelledAction'
        completed:
          $ref: '#/components/schemas/c1.api.policy.v1.CompletedAction'
        errored:
          $ref: '#/components/schemas/c1.api.policy.v1.ErroredAction'
        notificationId:
          description: This indicates the notification id for this step.
          type: string
        provision:
          $ref: '#/components/schemas/c1.api.policy.v1.Provision'
        reassignedByError:
          $ref: '#/components/schemas/c1.api.policy.v1.ReassignedByErrorAction'
        state:
          description: This property indicates the current state of this step.
          enum:
          - PROVISION_INSTANCE_STATE_UNSPECIFIED
          - PROVISION_INSTANCE_STATE_INIT
          - PROVISION_INSTANCE_STATE_CREATE_CONNECTOR_ACTIONS_FOR_TARGET
          - PROVISION_INSTANCE_STATE_SENDING_NOTIFICATIONS
          - PROVISION_INSTANCE_STATE_WAITING
          - PROVISION_INSTANCE_STATE_DONE
          type: string
      title: Provision Instance
      type: object
      x-speakeasy-name-override: ProvisionInstance
    c1.api.policy.v1.ProvisionPolicy:
      description: "ProvisionPolicy is a oneOf that indicates how a provision step\
        \ should be processed.\n\nThis message contains a oneof named typ. Only a\
        \ single field of the following list may be set at a time:\n  - connector\n\
        \  - manual\n  - delegated\n"
      properties:
        connector:
          $ref: '#/components/schemas/c1.api.policy.v1.ConnectorProvision'
        delegated:
          $ref: '#/components/schemas/c1.api.policy.v1.DelegatedProvision'
        manual:
          $ref: '#/components/schemas/c1.api.policy.v1.ManualProvision'
      title: Provision Policy
      type: object
      x-speakeasy-name-override: ProvisionPolicy
    c1.api.policy.v1.ProvisionTarget:
      description: ProvisionTarget indicates the specific app, app entitlement, and
        if known, the app user and grant duration of this provision step
      properties:
        appEntitlementId:
          description: The app entitlement that should be provisioned.
          type: string
        appId:
          description: The app in which the entitlement should be provisioned
          type: string
        appUserId:
          description: The app user that should be provisioned. May be unset if the
            app user is unknown
          type: string
        grantDuration:
          format: duration
          type: string
      title: Provision Target
      type: object
      x-speakeasy-name-override: ProvisionTarget
    c1.api.policy.v1.ReassignedAction:
      description: The ReassignedAction object describes the outcome of a policy step
        that has been reassigned.
      nullable: true
      properties:
        newPolicyStepId:
          description: The ID of the policy step that was created as a result of this
            reassignment.
          readOnly: true
          type: string
        reassignedAt:
          format: date-time
          readOnly: true
          type: string
        userId:
          description: The UserID of the person who reassigned this step.
          readOnly: true
          type: string
      title: Reassigned Action
      type: object
      x-speakeasy-name-override: ReassignedAction
    c1.api.policy.v1.ReassignedByErrorAction:
      description: The ReassignedByErrorAction object describes the outcome of a policy
        step that has been reassigned because it had an error provisioning.
      nullable: true
      properties:
        description:
          description: The description of the error with more details on why this
            was reassigned.
          readOnly: true
          type: string
        errorCode:
          description: Additional information about the error, like http status codes
            or error messages from SDKs.
          readOnly: true
          type: string
        errorUserId:
          description: The UserID of the user who reassigned this due to an error.
            This will exclusively be the System's UserID.
          readOnly: true
          type: string
        erroredAt:
          format: date-time
          readOnly: true
          type: string
        newPolicyStepId:
          description: The ID of the policy step that was created by this reassignment.
          readOnly: true
          type: string
        reassignedAt:
          format: date-time
          readOnly: true
          type: string
      title: Reassigned By Error Action
      type: object
      x-speakeasy-name-override: ReassignedByErrorAction
    c1.api.policy.v1.Reject:
      description: This policy step indicates that a ticket should have a denied outcome.
        This is a terminal approval state and is used to explicitly define the end
        of approval steps.
      nullable: true
      title: Reject
      type: object
      x-speakeasy-name-override: Reject
    c1.api.policy.v1.RejectInstance:
      description: "This policy step indicates that a ticket should have a denied\
        \ outcome. This is a terminal approval state and is used to explicitly define\
        \ the end of approval steps.\n The instance is just a marker for it being\
        \ copied into an active policy."
      nullable: true
      title: Reject Instance
      type: object
      x-speakeasy-name-override: RejectInstance
    c1.api.policy.v1.RestartAction:
      description: The restart action describes the outcome of policy steps for when
        the task was restarted. This can be applied to multiple steps since restart
        skips all pending next steps.
      nullable: true
      properties:
        oldPolicyStepId:
          description: The step ID that was restarted. Potentially multiple "history"
            steps will reference this ID to indicate by what step they were restarted.
          readOnly: true
          type: string
        restartedAt:
          format: date-time
          readOnly: true
          type: string
        userId:
          description: The user that submitted the restart action.
          readOnly: true
          type: string
      title: Restart Action
      type: object
      x-speakeasy-name-override: RestartAction
    c1.api.policy.v1.SearchPoliciesRequest:
      description: Search Policies by a few properties.
      properties:
        displayName:
          description: Search for policies with a case insensitive match on the display
            name.
          type: string
        pageSize:
          description: The pageSize where 0 <= pageSize <= 100. Values < 10 will be
            set to 10. A value of 0 returns the default page size (currently 25)
          format: int32
          type: number
        pageToken:
          description: The pageToken field.
          type: string
        policyTypes:
          description: The policy type to search on. This can be POLICY_TYPE_GRANT,
            POLICY_TYPE_REVOKE, POLICY_TYPE_CERTIFY, POLICY_TYPE_ACCESS_REQUEST, or
            POLICY_TYPE_PROVISION.
          items:
            enum:
            - POLICY_TYPE_UNSPECIFIED
            - POLICY_TYPE_GRANT
            - POLICY_TYPE_REVOKE
            - POLICY_TYPE_CERTIFY
            - POLICY_TYPE_ACCESS_REQUEST
            - POLICY_TYPE_PROVISION
            type: string
          nullable: true
          type: array
        query:
          description: Query the policies with a fuzzy search on display name and
            description.
          type: string
        refs:
          description: The refs field.
          items:
            $ref: '#/components/schemas/c1.api.policy.v1.PolicyRef'
          nullable: true
          type: array
      title: Search Policies Request
      type: object
      x-speakeasy-name-override: SearchPoliciesRequest
    c1.api.policy.v1.SelfApproval:
      description: The self approval object describes the configuration of a policy
        step that needs to be approved by the target of the request.
      nullable: true
      properties:
        assignedUserIds:
          description: The array of users determined to be themselves during approval.
            This should only ever be one person, but is saved because it may change
            if the owner of an app user changes while the ticket is open.
          items:
            type: string
          nullable: true
          readOnly: true
          type: array
        fallback:
          description: Configuration to allow a fallback if the identity user of the
            target app user cannot be determined.
          readOnly: true
          type: boolean
        fallbackUserIds:
          description: Configuration to specific which users to fallback to if fallback
            is enabled and the identity user of the target app user cannot be determined.
          items:
            type: string
          nullable: true
          readOnly: true
          type: array
      title: Self Approval
      type: object
      x-speakeasy-name-override: SelfApproval
    c1.api.policy.v1.UpdatePolicyRequestInput:
      description: The UpdatePolicyRequest message contains the policy object to update
        and a field mask to indicate which fields to update. It uses URL value for
        input.
      properties:
        policy:
          $ref: '#/components/schemas/c1.api.policy.v1.Policy'
        updateMask:
          nullable: true
          type: string
          x-speakeasy-terraform-ignore: true
      title: Update Policy Request
      type: object
      x-speakeasy-name-override: UpdatePolicyRequest
    c1.api.policy.v1.UpdatePolicyResponse:
      description: The UpdatePolicyResponse message contains the updated policy object.
      properties:
        policy:
          $ref: '#/components/schemas/c1.api.policy.v1.Policy'
      title: Update Policy Response
      type: object
      x-speakeasy-name-override: UpdatePolicyResponse
    c1.api.policy.v1.UserApproval:
      description: The user approval object describes the approval configuration of
        a policy step that needs to be approved by a specific list of users.
      nullable: true
      properties:
        allowSelfApproval:
          description: Configuration to allow self approval of if the user is specified
            and also the target of the ticket.
          readOnly: true
          type: boolean
        userIds:
          description: Array of users configured for approval.
          items:
            type: string
          nullable: true
          readOnly: true
          type: array
      title: User Approval
      type: object
      x-speakeasy-name-override: UserApproval
    c1.api.policy.v1.ValidatePolicyCELRequest:
      description: The ValidatePolicyCELRequest message.
      properties:
        cel:
          description: The cel field.
          type: string
      title: Validate Policy Cel Request
      type: object
      x-speakeasy-name-override: ValidatePolicyCELRequest
    c1.api.policy.v1.ValidatePolicyCELResponse:
      description: The ValidatePolicyCELResponse message.
      properties:
        markers:
          description: The markers field.
          items:
            $ref: '#/components/schemas/c1.api.policy.v1.Marker'
          nullable: true
          type: array
      title: Validate Policy Cel Response
      type: object
      x-speakeasy-name-override: ValidatePolicyCELResponse
    c1.api.requestcatalog.v1.RequestCatalog:
      description: The RequestCatalog is used for managing which entitlements are
        requestable, and who can request them.
      properties:
        accessEntitlements:
          description: An array of app entitlements that, if the user has, can view
            the contents of this catalog.
          items:
            $ref: '#/components/schemas/c1.api.app.v1.AppEntitlement'
          nullable: true
          type: array
        appIds:
          description: The Apps contained in this request catalog.
          items:
            type: string
          nullable: true
          type: array
        createdAt:
          format: date-time
          readOnly: true
          type: string
        createdByUserId:
          description: The id of the user this request catalog was created by.
          type: string
        deletedAt:
          format: date-time
          readOnly: true
          type: string
        description:
          description: The description of the request catalog.
          type: string
        displayName:
          description: The display name of the request catalog.
          type: string
        id:
          description: The id of the request catalog.
          type: string
        published:
          description: Whether or not this catalog is published.
          type: boolean
        updatedAt:
          format: date-time
          readOnly: true
          type: string
        visibleToEveryone:
          description: If this is true, the access entitlement requirement is ignored.
          type: boolean
      title: Request Catalog
      type: object
      x-speakeasy-entity: Catalog
      x-speakeasy-name-override: RequestCatalog
    c1.api.requestcatalog.v1.RequestCatalogExpandMask:
      description: The RequestCatalogExpandMask includes the paths in the catalog
        view to expand in the return value of this call.
      properties:
        paths:
          description: An array of paths to be expanded in the response. May be any
            combination of "*", "created_by_user_id", "app_ids", and "access_entitlements".
          items:
            type: string
          nullable: true
          type: array
      title: Request Catalog Expand Mask
      type: object
      x-speakeasy-name-override: RequestCatalogExpandMask
    c1.api.requestcatalog.v1.RequestCatalogManagementServiceAddAccessEntitlementsRequestInput:
      description: "The RequestCatalogManagementServiceAddAccessEntitlementsRequest\
        \ message is used to add access entitlements to a request\n catalog to determine\
        \ which users can view the request catalog."
      properties:
        accessEntitlements:
          description: List of entitlements to add to the request catalog as access
            entitlements.
          items:
            $ref: '#/components/schemas/c1.api.app.v1.AppEntitlementRef'
          nullable: true
          type: array
      title: Request Catalog Management Service Add Access Entitlements Request
      type: object
      x-speakeasy-entity: Catalog_Visibility_Bindings
      x-speakeasy-name-override: RequestCatalogManagementServiceAddAccessEntitlementsRequest
    c1.api.requestcatalog.v1.RequestCatalogManagementServiceAddAccessEntitlementsResponse:
      description: Empty response with a status code indicating success.
      title: Request Catalog Management Service Add Access Entitlements Response
      type: object
      x-speakeasy-name-override: RequestCatalogManagementServiceAddAccessEntitlementsResponse
    c1.api.requestcatalog.v1.RequestCatalogManagementServiceAddAppEntitlementsRequestInput:
      description: The RequestCatalogManagementServiceAddAppEntitlementsRequest object
        is used to add app requestable app entitlements to a request catalog.
      properties:
        appEntitlements:
          description: List of entitlements to add to the request catalog.
          items:
            $ref: '#/components/schemas/c1.api.app.v1.AppEntitlementRef'
          nullable: true
          type: array
      title: Request Catalog Management Service Add App Entitlements Request
      type: object
      x-speakeasy-entity: Catalog_Requestable_Entries
      x-speakeasy-name-override: RequestCatalogManagementServiceAddAppEntitlementsRequest
    c1.api.requestcatalog.v1.RequestCatalogManagementServiceAddAppEntitlementsResponse:
      description: Empty response with a status code indicating success.
      title: Request Catalog Management Service Add App Entitlements Response
      type: object
      x-speakeasy-name-override: RequestCatalogManagementServiceAddAppEntitlementsResponse
    c1.api.requestcatalog.v1.RequestCatalogManagementServiceCreateRequest:
      description: Create a request catalog.
      properties:
        description:
          description: The description of the new request catalog.
          type: string
        displayName:
          description: The display name of the new request catalog.
          type: string
        expandMask:
          $ref: '#/components/schemas/c1.api.requestcatalog.v1.RequestCatalogExpandMask'
        published:
          description: Whether or not the new catalog should be created as published.
          type: boolean
        visibleToEveryone:
          description: Whether or not the new catalog is visible to everyone by default.
          type: boolean
      title: Request Catalog Management Service Create Request
      type: object
      x-speakeasy-entity: Catalog
      x-speakeasy-name-override: RequestCatalogManagementServiceCreateRequest
    c1.api.requestcatalog.v1.RequestCatalogManagementServiceDeleteRequestInput:
      description: Delete a request catalog by Id. It uses URL value for input.
      title: Request Catalog Management Service Delete Request
      type: object
      x-speakeasy-entity: Catalog
      x-speakeasy-name-override: RequestCatalogManagementServiceDeleteRequest
    c1.api.requestcatalog.v1.RequestCatalogManagementServiceDeleteResponse:
      description: Empty response with a status code indicating success.
      title: Request Catalog Management Service Delete Response
      type: object
      x-speakeasy-name-override: RequestCatalogManagementServiceDeleteResponse
    c1.api.requestcatalog.v1.RequestCatalogManagementServiceGetResponse:
      description: The request catalog management service get response returns a request
        catalog view with the expanded items in the expanded array indicated by the
        expand mask in the request.
      properties:
        expanded:
          description: List of serialized related objects.
          items:
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type
              that describes the type of the serialized message.
            properties:
              '@type':
                description: The type of the serialized message.
                type: string
            type: object
          nullable: true
          type: array
        requestCatalogView:
          $ref: '#/components/schemas/c1.api.requestcatalog.v1.RequestCatalogView'
      title: Request Catalog Management Service Get Response
      type: object
      x-speakeasy-name-override: RequestCatalogManagementServiceGetResponse
    c1.api.requestcatalog.v1.RequestCatalogManagementServiceListEntitlementsForAccessResponse:
      description: The RequestCatalogManagementServiceListEntitlementsForAccessResponse
        message contains a list of results and a nextPageToken if applicable.
      properties:
        expanded:
          description: List of serialized related objects.
          items:
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type
              that describes the type of the serialized message.
            properties:
              '@type':
                description: The type of the serialized message.
                type: string
            type: object
          nullable: true
          type: array
        list:
          description: The list of results containing up to X results, where X is
            the page size defined in the request.
          items:
            $ref: '#/components/schemas/c1.api.app.v1.AppEntitlementView'
          nullable: true
          type: array
        nextPageToken:
          description: "The nextPageToken is shown for the next page if the number\
            \ of results is larger than the max page size.\n The server returns one\
            \ page of results and the nextPageToken until all results are retreived.\n\
            \ To retrieve the next page, use the same request and append a pageToken\
            \ field with the value of nextPageToken shown on the previous page."
          type: string
      title: Request Catalog Management Service List Entitlements For Access Response
      type: object
      x-speakeasy-name-override: RequestCatalogManagementServiceListEntitlementsForAccessResponse
    c1.api.requestcatalog.v1.RequestCatalogManagementServiceListEntitlementsPerCatalogResponse:
      description: The RequestCatalogManagementServiceListEntitlementsPerCatalogResponse
        message contains a list of results and a nextPageToken if applicable.
      properties:
        expanded:
          description: List of serialized related objects.
          items:
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type
              that describes the type of the serialized message.
            properties:
              '@type':
                description: The type of the serialized message.
                type: string
            type: object
          nullable: true
          type: array
        list:
          description: The list of results containing up to X results, where X is
            the page size defined in the request.
          items:
            $ref: '#/components/schemas/c1.api.app.v1.AppEntitlementView'
          nullable: true
          type: array
        nextPageToken:
          description: "The nextPageToken is shown for the next page if the number\
            \ of results is larger than the max page size.\n The server returns one\
            \ page of results and the nextPageToken until all results are retreived.\n\
            \ To retrieve the next page, use the same request and append a pageToken\
            \ field with the value of nextPageToken shown on the previous page."
          type: string
      title: Request Catalog Management Service List Entitlements Per Catalog Response
      type: object
      x-speakeasy-name-override: RequestCatalogManagementServiceListEntitlementsPerCatalogResponse
    c1.api.requestcatalog.v1.RequestCatalogManagementServiceListResponse:
      description: The RequestCatalogManagementServiceListResponse message.
      properties:
        expanded:
          description: List of serialized related objects.
          items:
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type
              that describes the type of the serialized message.
            properties:
              '@type':
                description: The type of the serialized message.
                type: string
            type: object
          nullable: true
          type: array
        list:
          description: The list of request catalogs.
          items:
            $ref: '#/components/schemas/c1.api.requestcatalog.v1.RequestCatalogView'
          nullable: true
          type: array
        nextPageToken:
          description: "The nextPageToken is shown for the next page if the number\
            \ of results is larger than the max page size.\n The server returns one\
            \ page of results and the nextPageToken until all results are retreived.\n\
            \ To retrieve the next page, use the same request and append a pageToken\
            \ field with the value of nextPageToken shown on the previous page."
          type: string
      title: Request Catalog Management Service List Response
      type: object
      x-speakeasy-name-override: RequestCatalogManagementServiceListResponse
    c1.api.requestcatalog.v1.RequestCatalogManagementServiceRemoveAccessEntitlementsRequestInput:
      description: "The RequestCatalogManagementServiceRemoveAccessEntitlementsRequest\
        \ message is used to remove access entitlements from a request catalog.\n\
        \ The access entitlements are used to determine which users can view the request\
        \ catalog."
      properties:
        accessEntitlements:
          description: The list of access entitlements to remove from the catalog.
          items:
            $ref: '#/components/schemas/c1.api.app.v1.AppEntitlementRef'
          nullable: true
          type: array
      title: Request Catalog Management Service Remove Access Entitlements Request
      type: object
      x-speakeasy-entity: Catalog_Visibility_Bindings
      x-speakeasy-name-override: RequestCatalogManagementServiceRemoveAccessEntitlementsRequest
    c1.api.requestcatalog.v1.RequestCatalogManagementServiceRemoveAccessEntitlementsResponse:
      description: Empty response with a status code indicating success.
      title: Request Catalog Management Service Remove Access Entitlements Response
      type: object
      x-speakeasy-name-override: RequestCatalogManagementServiceRemoveAccessEntitlementsResponse
    c1.api.requestcatalog.v1.RequestCatalogManagementServiceRemoveAppEntitlementsRequestInput:
      description: The RequestCatalogManagementServiceRemoveAppEntitlementsRequest
        message is used to remove app entitlements from a request catalog.
      properties:
        appEntitlements:
          description: The list of app entitlements to remove from the catalog.
          items:
            $ref: '#/components/schemas/c1.api.app.v1.AppEntitlementRef'
          nullable: true
          type: array
      title: Request Catalog Management Service Remove App Entitlements Request
      type: object
      x-speakeasy-entity: Catalog_Requestable_Entries
      x-speakeasy-name-override: RequestCatalogManagementServiceRemoveAppEntitlementsRequest
    c1.api.requestcatalog.v1.RequestCatalogManagementServiceRemoveAppEntitlementsResponse:
      description: Empty response with a status code indicating success
      title: Request Catalog Management Service Remove App Entitlements Response
      type: object
      x-speakeasy-name-override: RequestCatalogManagementServiceRemoveAppEntitlementsResponse
    c1.api.requestcatalog.v1.RequestCatalogManagementServiceUpdateRequestInput:
      description: Update a request catalog object by ID.
      properties:
        catalog:
          $ref: '#/components/schemas/c1.api.requestcatalog.v1.RequestCatalog'
        expandMask:
          $ref: '#/components/schemas/c1.api.requestcatalog.v1.RequestCatalogExpandMask'
        updateMask:
          nullable: true
          type: string
          x-speakeasy-terraform-ignore: true
      title: Request Catalog Management Service Update Request
      type: object
      x-speakeasy-name-override: RequestCatalogManagementServiceUpdateRequest
    c1.api.requestcatalog.v1.RequestCatalogSearchServiceSearchEntitlementsRequest:
      description: The RequestCatalogSearchServiceSearchEntitlementsRequest searches
        entitlements, but only ones that are available to you through the open catalogs.
      properties:
        appDisplayName:
          description: Search entitlements that belong to this app name (exact match).
          type: string
        entitlementAlias:
          description: Search for entitlements with this alias (exact match).
          type: string
        expandMask:
          $ref: '#/components/schemas/c1.api.app.v1.AppEntitlementExpandMask'
        grantedStatus:
          description: Search entitlements with this granted status for your signed
            in user.
          enum:
          - UNSPECIFIED
          - ALL
          - GRANTED
          - NOT_GRANTED
          type: string
        includeDeleted:
          description: Include deleted entitlements
          type: boolean
        pageSize:
          description: The pageSize where 0 <= pageSize <= 100. Values < 10 will be
            set to 10. A value of 0 returns the default page size (currently 25)
          format: int32
          type: number
        pageToken:
          description: The pageToken field.
          type: string
        query:
          description: Fuzzy search the display name of resource types.
          type: string
      title: Request Catalog Search Service Search Entitlements Request
      type: object
      x-speakeasy-name-override: RequestCatalogSearchServiceSearchEntitlementsRequest
    c1.api.requestcatalog.v1.RequestCatalogSearchServiceSearchEntitlementsResponse:
      description: The RequestCatalogSearchServiceSearchEntitlementsResponse message
        contains a list of results and a nextPageToken if applicable.
      properties:
        expanded:
          description: List of serialized related objects.
          items:
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type
              that describes the type of the serialized message.
            properties:
              '@type':
                description: The type of the serialized message.
                type: string
            type: object
          nullable: true
          type: array
        list:
          description: The list of results containing up to X results, where X is
            the page size defined in the request.
          items:
            $ref: '#/components/schemas/c1.api.app.v1.AppEntitlementWithUserBindings'
          nullable: true
          type: array
        nextPageToken:
          description: "The nextPageToken is shown for the next page if the number\
            \ of results is larger than the max page size.\n The server returns one\
            \ page of results and the nextPageToken until all results are retreived.\n\
            \ To retrieve the next page, use the same request and append a pageToken\
            \ field with the value of nextPageToken shown on the previous page."
          type: string
      title: Request Catalog Search Service Search Entitlements Response
      type: object
      x-speakeasy-name-override: RequestCatalogSearchServiceSearchEntitlementsResponse
    c1.api.requestcatalog.v1.RequestCatalogView:
      description: The request catalog view contains the serialized request catalog
        and paths to objects referenced by the request catalog.
      properties:
        accessEntitlementsPath:
          description: JSONPATH expression indicating the location of the access entitlement
            objects, that the request catalog allows users to request, in the array.
          type: string
        appPaths:
          description: JSONPATH expression indicating the location of the App object
            in the array.
          type: string
        createdByUserPath:
          description: JSONPATH expression indicating the location of the User object,
            that created the request catalog, in the array.
          type: string
        requestCatalog:
          $ref: '#/components/schemas/c1.api.requestcatalog.v1.RequestCatalog'
      title: Request Catalog View
      type: object
      x-speakeasy-name-override: RequestCatalogView
    c1.api.search.v1.FacetCategory:
      description: "The FacetCategory indicates a grouping of facets by type. For\
        \ example, facets \"OnePassword\" and \"Okta\" would group under an \"Apps\"\
        \ category.\n\nThis message contains a oneof named item. Only a single field\
        \ of the following list may be set at a time:\n  - value\n  - range\n"
      properties:
        displayName:
          description: The display name of the category.
          type: string
        iconUrl:
          description: An icon for the category.
          type: string
        param:
          description: The param that is being set when checking a facet in this category.
          type: string
        range:
          $ref: '#/components/schemas/c1.api.search.v1.FacetRangeItem'
        value:
          $ref: '#/components/schemas/c1.api.search.v1.FacetValueItem'
      title: Facet Category
      type: object
      x-speakeasy-name-override: FacetCategory
    c1.api.search.v1.FacetRange:
      description: The FacetRange message.
      properties:
        count:
          description: The count of items in the range.
          format: int64
          type: string
        displayName:
          description: The display name of the range.
          type: string
        from:
          description: The starting value of the range.
          format: int64
          type: string
        iconUrl:
          description: The icon of the range.
          type: string
        to:
          description: The ending value of the range.
          format: int64
          type: string
      title: Facet Range
      type: object
      x-speakeasy-name-override: FacetRange
    c1.api.search.v1.FacetRangeItem:
      description: The FacetRangeItem message.
      nullable: true
      properties:
        ranges:
          description: An array of facet ranges.
          items:
            $ref: '#/components/schemas/c1.api.search.v1.FacetRange'
          nullable: true
          type: array
      title: Facet Range Item
      type: object
      x-speakeasy-name-override: FacetRangeItem
    c1.api.search.v1.FacetValue:
      description: A FacetValue message contains count and value of the facet entry.
      properties:
        count:
          description: The count of the values in this facet.
          format: int64
          type: string
        displayName:
          description: The name of this facet.
          type: string
        iconUrl:
          description: The icon for this facet.
          type: string
        value:
          description: The value of this facet.
          type: string
      title: Facet Value
      type: object
      x-speakeasy-name-override: FacetValue
    c1.api.search.v1.FacetValueItem:
      description: The FacetValueItem message.
      nullable: true
      properties:
        values:
          description: An array of facet values.
          items:
            $ref: '#/components/schemas/c1.api.search.v1.FacetValue'
          nullable: true
          type: array
      title: Facet Value Item
      type: object
      x-speakeasy-name-override: FacetValueItem
    c1.api.search.v1.Facets:
      description: Indicates one value of a facet.
      properties:
        count:
          description: The count of items in this facet.
          format: int64
          type: string
        facets:
          description: The facet being referenced.
          items:
            $ref: '#/components/schemas/c1.api.search.v1.FacetCategory'
          nullable: true
          type: array
      title: Facets
      type: object
      x-speakeasy-name-override: Facets
    c1.api.task.v1.ExternalRef:
      description: A reference to an external source. This value is unused currently,
        but may be brought back.
      properties:
        externalRefSource:
          description: The source of the external reference.
          enum:
          - UNSPECIFIED
          - JIRA
          readOnly: true
          type: string
        name:
          description: The name of the external reference.
          readOnly: true
          type: string
        url:
          description: The URL to the external reference.
          readOnly: true
          type: string
      title: External Ref
      type: object
      x-speakeasy-name-override: ExternalRef
    c1.api.task.v1.Task:
      description: A fully-fleged task object. Includes its policy, references to
        external apps, its type, its processing history, and more.
      properties:
        actions:
          description: The actions that can be performed on the task by the current
            user.
          items:
            enum:
            - TASK_ACTION_TYPE_UNSPECIFIED
            - TASK_ACTION_TYPE_CLOSE
            - TASK_ACTION_TYPE_APPROVE
            - TASK_ACTION_TYPE_DENY
            - TASK_ACTION_TYPE_COMMENT
            - TASK_ACTION_TYPE_DELETE
            - TASK_ACTION_TYPE_REASSIGN
            - TASK_ACTION_TYPE_RESTART
            - TASK_ACTION_TYPE_SEND_REMINDER
            - TASK_ACTION_TYPE_PROVISION_COMPLETE
            - TASK_ACTION_TYPE_PROVISION_CANCELLED
            - TASK_ACTION_TYPE_PROVISION_ERRORED
            - TASK_ACTION_TYPE_PROVISION_APP_USER_TARGET_CREATED
            - TASK_ACTION_TYPE_ROLLBACK_SKIPPED
            - TASK_ACTION_TYPE_HARD_RESET
            - TASK_ACTION_TYPE_ESCALATE_TO_EMERGENCY_ACCESS
            - TASK_ACTION_TYPE_CHANGE_POLICY
            - TASK_ACTION_TYPE_RECALCULATE_DENIAL_FROM_BASE_POLICY_DECISIONS
            type: string
          nullable: true
          readOnly: true
          type: array
        analysisId:
          description: The ID of the analysis object associated with this task created
            by an analysis workflow if the analysis feature is enabled for your tenant.
          readOnly: true
          type: string
        annotations:
          description: An array of `google.protobuf.Any` annotations with various
            base64-encoded data.
          items:
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type
              that describes the type of the serialized message.
            properties:
              '@type':
                description: The type of the serialized message.
                type: string
            readOnly: true
            type: object
          nullable: true
          readOnly: true
          type: array
        commentCount:
          description: The count of comments.
          format: int32
          readOnly: true
          type: number
        createdAt:
          format: date-time
          readOnly: true
          type: string
        createdByUserId:
          description: The ID of the user that is the creator of this task. This may
            not always match the userId field.
          readOnly: true
          type: string
        deletedAt:
          format: date-time
          readOnly: true
          type: string
        description:
          description: The description of the task. This is also known as justification.
          readOnly: true
          type: string
        displayName:
          description: The display name of the task.
          readOnly: true
          type: string
        emergencyAccess:
          description: A field indicating whether this task was created using an emergency
            access flow, or escalated to emergency access. On task creation, it will
            also use the app entitlement's emergency policy when possible.
          readOnly: true
          type: boolean
        externalRefs:
          description: An array of external references to the task. Historically that
            has been items like Jira task IDs. This is currently unused, but may come
            back in the future for integrations.
          items:
            $ref: '#/components/schemas/c1.api.task.v1.ExternalRef'
          nullable: true
          readOnly: true
          type: array
        id:
          description: The ID of the task.
          readOnly: true
          type: string
        insightIds:
          description: The insightIds field.
          items:
            type: string
          nullable: true
          type: array
        numericId:
          description: A human-usable numeric ID of a task which can be included in
            place of the fully qualified task id in path parmeters (but not search
            queries).
          format: int64
          readOnly: true
          type: string
        policy:
          $ref: '#/components/schemas/c1.api.policy.v1.PolicyInstance'
        policyGenerationId:
          description: The policy generation id refers to the current policy's generation
            ID. This is changed when the policy is changed on a task.
          readOnly: true
          type: string
        processing:
          description: The processing state of a task as defined by the `processing_enum`
          enum:
          - TASK_PROCESSING_TYPE_UNSPECIFIED
          - TASK_PROCESSING_TYPE_PROCESSING
          - TASK_PROCESSING_TYPE_WAITING
          - TASK_PROCESSING_TYPE_DONE
          readOnly: true
          type: string
        recommendation:
          description: The recommendation field.
          enum:
          - INSIGHT_RECOMMENDATION_UNSPECIFIED
          - INSIGHT_RECOMMENDATION_APPROVE
          - INSIGHT_RECOMMENDATION_DENY
          type: string
        state:
          description: The current state of the task as defined by the `state_enum`
          enum:
          - TASK_STATE_UNSPECIFIED
          - TASK_STATE_OPEN
          - TASK_STATE_CLOSED
          readOnly: true
          type: string
        stepApproverIds:
          description: An array of IDs belonging to Identity Users that are allowed
            to review this step in a task.
          items:
            type: string
          nullable: true
          readOnly: true
          type: array
        type:
          $ref: '#/components/schemas/c1.api.task.v1.TaskType'
        updatedAt:
          format: date-time
          readOnly: true
          type: string
        userId:
          description: The ID of the user that is the target of this task. This may
            be empty if we're targeting a specific app user that has no known identity
            user.
          readOnly: true
          type: string
      title: Task
      type: object
      x-speakeasy-name-override: Task
    c1.api.task.v1.TaskActionsServiceApproveRequestInput:
      description: The TaskActionsServiceApproveRequest object lets you approve a
        task.
      properties:
        comment:
          description: The comment attached to the request.
          type: string
        expandMask:
          $ref: '#/components/schemas/c1.api.task.v1.TaskExpandMask'
        policyStepId:
          description: The ID of the policy step on the given task to approve.
          type: string
      required:
      - policyStepId
      title: Task Actions Service Approve Request
      type: object
      x-speakeasy-name-override: TaskActionsServiceApproveRequest
    c1.api.task.v1.TaskActionsServiceApproveResponse:
      description: The TaskActionsServiceApproveResponse returns a task view with
        paths indicating the location of expanded items in the array.
      properties:
        expanded:
          description: List of serialized related objects.
          items:
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type
              that describes the type of the serialized message.
            properties:
              '@type':
                description: The type of the serialized message.
                type: string
            readOnly: true
            type: object
          nullable: true
          readOnly: true
          type: array
        taskView:
          $ref: '#/components/schemas/c1.api.task.v1.TaskView'
        ticketActionId:
          description: The ID of the ticket (task) approve action created by this
            request.
          readOnly: true
          type: string
      title: Task Actions Service Approve Response
      type: object
      x-speakeasy-name-override: TaskActionsServiceApproveResponse
    c1.api.task.v1.TaskActionsServiceCommentRequestInput:
      description: The TaskActionsServiceCommentRequest object lets you create a new
        comment on a task.
      properties:
        comment:
          description: The comment to be posted to the ticket
          type: string
        expandMask:
          $ref: '#/components/schemas/c1.api.task.v1.TaskExpandMask'
      title: Task Actions Service Comment Request
      type: object
      x-speakeasy-name-override: TaskActionsServiceCommentRequest
    c1.api.task.v1.TaskActionsServiceCommentResponse:
      description: Task actions service comment response returns the task view inluding
        the expanded array of items that are indicated by the expand mask on the request.
      properties:
        expanded:
          description: List of serialized related objects.
          items:
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type
              that describes the type of the serialized message.
            properties:
              '@type':
                description: The type of the serialized message.
                type: string
            type: object
          nullable: true
          type: array
        taskView:
          $ref: '#/components/schemas/c1.api.task.v1.TaskView'
      title: Task Actions Service Comment Response
      type: object
      x-speakeasy-name-override: TaskActionsServiceCommentResponse
    c1.api.task.v1.TaskActionsServiceDenyRequestInput:
      description: The TaskActionsServiceDenyRequest object lets you deny a task.
      properties:
        comment:
          description: The comment attached to the request.
          type: string
        expandMask:
          $ref: '#/components/schemas/c1.api.task.v1.TaskExpandMask'
        policyStepId:
          description: The ID of the currently policy step. This is the step you want
            to deny.
          type: string
      title: Task Actions Service Deny Request
      type: object
      x-speakeasy-name-override: TaskActionsServiceDenyRequest
    c1.api.task.v1.TaskActionsServiceDenyResponse:
      description: The TaskActionsServiceDenyResponse returns a task view with paths
        indicating the location of expanded items in the array.
      properties:
        expanded:
          description: List of serialized related objects.
          items:
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type
              that describes the type of the serialized message.
            properties:
              '@type':
                description: The type of the serialized message.
                type: string
            readOnly: true
            type: object
          nullable: true
          readOnly: true
          type: array
        taskView:
          $ref: '#/components/schemas/c1.api.task.v1.TaskView'
        ticketActionId:
          description: The ID of the ticket (task) deny action created by this request.
          readOnly: true
          type: string
      title: Task Actions Service Deny Response
      type: object
      x-speakeasy-name-override: TaskActionsServiceDenyResponse
    c1.api.task.v1.TaskActionsServiceEscalateToEmergencyAccessRequestInput:
      description: The TaskActionsServiceEscalateToEmergencyAccessRequest message.
      properties:
        comment:
          description: The comment field.
          type: string
        expandMask:
          $ref: '#/components/schemas/c1.api.task.v1.TaskExpandMask'
        policyStepId:
          description: The policyStepId field.
          type: string
      title: Task Actions Service Escalate To Emergency Access Request
      type: object
      x-speakeasy-name-override: TaskActionsServiceEscalateToEmergencyAccessRequest
    c1.api.task.v1.TaskActionsServiceRestartRequestInput:
      description: The TaskActionsServiceRestartRequest object lets you restart a
        task.
      properties:
        comment:
          description: The comment attached to the request.
          type: string
        expandMask:
          $ref: '#/components/schemas/c1.api.task.v1.TaskExpandMask'
        policyStepId:
          description: The ID of the policy step on the given task to restart.
          type: string
      title: Task Actions Service Restart Request
      type: object
      x-speakeasy-name-override: TaskActionsServiceRestartRequest
    c1.api.task.v1.TaskActionsServiceRestartResponse:
      description: The TaskActionsServiceRestartResponse message.
      properties:
        expanded:
          description: The expanded field.
          items:
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type
              that describes the type of the serialized message.
            properties:
              '@type':
                description: The type of the serialized message.
                type: string
            type: object
          nullable: true
          type: array
        taskView:
          $ref: '#/components/schemas/c1.api.task.v1.TaskView'
        ticketActionId:
          description: The ticketActionId field.
          type: string
      title: Task Actions Service Restart Response
      type: object
      x-speakeasy-name-override: TaskActionsServiceRestartResponse
    c1.api.task.v1.TaskExpandMask:
      description: The task expand mask is an array of strings that specifes the related
        objects the requester wishes to have returned when making a request where
        the expand mask is part of the input. Use '*' to view all possible responses.
      properties:
        paths:
          description: A list of paths to expand in the response. May be any combination
            of "*", "access_review_id", "user_id", "created_by_user_id", "app_id",
            "app_user_id", "app_entitlement_ids", "step_approver_ids", "identity_user_id",
            and "insight_ids".
          items:
            type: string
          nullable: true
          type: array
      title: Task Expand Mask
      type: object
      x-speakeasy-name-override: TaskExpandMask
    c1.api.task.v1.TaskGrantSource:
      description: The TaskGrantSource message tracks which external URL was the source
        of the specificed grant ticket.
      properties:
        externalUrl:
          description: The external url source of the grant ticket.
          type: string
        integrationId:
          description: The integration id for the source of tickets.
          type: string
      title: Task Grant Source
      type: object
      x-speakeasy-name-override: TaskGrantSource
    c1.api.task.v1.TaskRef:
      description: This object references a task by ID.
      properties:
        id:
          description: The ID of the referenced Task
          type: string
      title: Task Ref
      type: object
      x-speakeasy-name-override: TaskRef
    c1.api.task.v1.TaskRevokeSource:
      description: "The TaskRevokeSource message indicates the source of the revoke\
        \ task is one of expired, nonUsage, request, or review.\n\nThis message contains\
        \ a oneof named origin. Only a single field of the following list may be set\
        \ at a time:\n  - review\n  - request\n  - expired\n  - nonUsage\n"
      properties:
        expired:
          $ref: '#/components/schemas/c1.api.task.v1.TaskRevokeSourceExpired'
        nonUsage:
          $ref: '#/components/schemas/c1.api.task.v1.TaskRevokeSourceNonUsage'
        request:
          $ref: '#/components/schemas/c1.api.task.v1.TaskRevokeSourceRequest'
        review:
          $ref: '#/components/schemas/c1.api.task.v1.TaskRevokeSourceReview'
      title: Task Revoke Source
      type: object
      x-speakeasy-name-override: TaskRevokeSource
    c1.api.task.v1.TaskRevokeSourceExpired:
      description: The TaskRevokeSourceExpired message indicates that the source of
        the revoke task is due to a grant expiring.
      nullable: true
      properties:
        expiredAt:
          format: date-time
          type: string
      title: Task Revoke Source Expired
      type: object
      x-speakeasy-name-override: TaskRevokeSourceExpired
    c1.api.task.v1.TaskRevokeSourceNonUsage:
      description: The TaskRevokeSourceNonUsage message indicates that the source
        of the revoke task is due to the grant not being used.
      nullable: true
      properties:
        expiresAt:
          format: date-time
          type: string
        lastLogin:
          format: date-time
          type: string
      title: Task Revoke Source Non Usage
      type: object
      x-speakeasy-name-override: TaskRevokeSourceNonUsage
    c1.api.task.v1.TaskRevokeSourceRequest:
      description: The TaskRevokeSourceRequest message indicates that the source of
        the revoke task was a request.
      nullable: true
      properties:
        requestUserId:
          description: The ID of the user who initiated the revoke request.
          type: string
      title: Task Revoke Source Request
      type: object
      x-speakeasy-name-override: TaskRevokeSourceRequest
    c1.api.task.v1.TaskRevokeSourceReview:
      description: The TaskRevokeSourceReview message tracks which access review was
        the source of the specificed revoke ticket.
      nullable: true
      properties:
        accessReviewId:
          description: The ID of the access review associated with the revoke task.
          type: string
        certTicketId:
          description: The ID of the certify ticket that was denied and created this
            revoke task.
          type: string
      title: Task Revoke Source Review
      type: object
      x-speakeasy-name-override: TaskRevokeSourceReview
    c1.api.task.v1.TaskSearchRequest:
      description: Search for tasks based on a plethora filters.
      properties:
        accessReviewIds:
          description: Search tasks that belong to any of the access reviews included
            in this list.
          items:
            type: string
          nullable: true
          type: array
        accountOwnerIds:
          description: Search tasks that have any of these account owners.
          items:
            type: string
          nullable: true
          type: array
        actorId:
          description: Search tasks that have this actor ID.
          type: string
        appEntitlementIds:
          description: Search tasks that have any of these app entitlement IDs.
          items:
            type: string
          nullable: true
          type: array
        appResourceIds:
          description: Search tasks that have any of these app resource IDs.
          items:
            type: string
          nullable: true
          type: array
        appResourceTypeIds:
          description: Search tasks that have any of these app resource type IDs.
          items:
            type: string
          nullable: true
          type: array
        appUserSubjectIds:
          description: Search tasks that have any of these app users as subjects.
          items:
            type: string
          nullable: true
          type: array
        applicationIds:
          description: Search tasks that have any of these apps as targets.
          items:
            type: string
          nullable: true
          type: array
        assigneesInIds:
          description: Search tasks by  List of UserIDs which are currently assigned
            these Tasks
          items:
            type: string
          nullable: true
          type: array
        createdAfter:
          format: date-time
          type: string
        createdBefore:
          format: date-time
          type: string
        currentStep:
          description: Search tasks that have this type of step as the current step.
          enum:
          - TASK_SEARCH_CURRENT_STEP_UNSPECIFIED
          - TASK_SEARCH_CURRENT_STEP_APPROVAL
          - TASK_SEARCH_CURRENT_STEP_PROVISION
          type: string
        emergencyStatus:
          description: Search tasks that are or are not emergency access.
          enum:
          - UNSPECIFIED
          - ALL
          - NON_EMERGENCY
          - EMERGENCY
          type: string
        excludeAppEntitlementIds:
          description: Search tasks that do not have any of these app entitlement
            IDs.
          items:
            type: string
          nullable: true
          type: array
        excludeIds:
          description: Exclude Specific TaskIDs from this serach result.
          items:
            type: string
          nullable: true
          type: array
        expandMask:
          $ref: '#/components/schemas/c1.api.task.v1.TaskExpandMask'
        includeDeleted:
          description: Whether or not to include deleted tasks.
          type: boolean
        myWorkUserIds:
          description: Search tasks where the user would see this task in the My Work
            section
          items:
            type: string
          nullable: true
          type: array
        openerIds:
          description: Search tasks that were created by any of the users in this
            array.
          items:
            type: string
          nullable: true
          type: array
        pageSize:
          description: The pageSize where 0 <= pageSize <= 100. Values < 10 will be
            set to 10. A value of 0 returns the default page size (currently 25)
          format: int32
          type: number
        pageToken:
          description: The pageToken field.
          type: string
        previouslyActedOnIds:
          description: Search tasks that were acted on by any of these users.
          items:
            type: string
          nullable: true
          type: array
        query:
          description: Fuzzy search tasks by display name or description. Also can
            search by numeric ID.
          type: string
        refs:
          description: Query tasks by display name, description, or numeric ID.
          items:
            $ref: '#/components/schemas/c1.api.task.v1.TaskRef'
          nullable: true
          type: array
        sortBy:
          description: Sort tasks in a specific order.
          enum:
          - TASK_SEARCH_SORT_BY_UNSPECIFIED
          - TASK_SEARCH_SORT_BY_ACCOUNT
          - TASK_SEARCH_SORT_BY_RESOURCE
          - TASK_SEARCH_SORT_BY_ACCOUNT_OWNER
          - TASK_SEARCH_SORT_BY_REVERSE_TICKET_ID
          type: string
        subjectIds:
          description: Search tasks where these users are the subject.
          items:
            type: string
          nullable: true
          type: array
        taskStates:
          description: Search tasks with this task state.
          items:
            enum:
            - TASK_STATE_UNSPECIFIED
            - TASK_STATE_OPEN
            - TASK_STATE_CLOSED
            type: string
          nullable: true
          type: array
        taskTypes:
          description: Search tasks with this task type. This is a oneOf, and needs
            an object, which can be empty, to sort.
          items:
            $ref: '#/components/schemas/c1.api.task.v1.TaskType'
          nullable: true
          type: array
      title: Task Search Request
      type: object
      x-speakeasy-name-override: TaskSearchRequest
    c1.api.task.v1.TaskSearchResponse:
      description: The TaskSearchResponse message contains a list of results and a
        nextPageToken if applicable.
      properties:
        expanded:
          description: The list of results containing up to X results, where X is
            the page size defined in the request.
          items:
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type
              that describes the type of the serialized message.
            properties:
              '@type':
                description: The type of the serialized message.
                type: string
            type: object
          nullable: true
          type: array
        list:
          description: List of serialized related objects.
          items:
            $ref: '#/components/schemas/c1.api.task.v1.TaskView'
          nullable: true
          type: array
        nextPageToken:
          description: "The nextPageToken is shown for the next page if the number\
            \ of results is larger than the max page size.\n The server returns one\
            \ page of results and the nextPageToken until all results are retreived.\n\
            \ To retrieve the next page, use the same request and append a pageToken\
            \ field with the value of nextPageToken shown on the previous page."
          type: string
      title: Task Search Response
      type: object
      x-speakeasy-name-override: TaskSearchResponse
    c1.api.task.v1.TaskServiceActionResponse:
      description: The TaskServiceActionResponse message.
      properties:
        expanded:
          description: The expanded field.
          items:
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type
              that describes the type of the serialized message.
            properties:
              '@type':
                description: The type of the serialized message.
                type: string
            type: object
          nullable: true
          type: array
        taskView:
          $ref: '#/components/schemas/c1.api.task.v1.TaskView'
        ticketActionId:
          description: The ticketActionId field.
          type: string
      title: Task Service Action Response
      type: object
      x-speakeasy-name-override: TaskServiceActionResponse
    c1.api.task.v1.TaskServiceCreateGrantRequest:
      description: Create a grant task.
      properties:
        appEntitlementId:
          description: The ID of the app entitlement to grant access to.
          type: string
        appId:
          description: The ID of the app that is associated with the entitlement.
          type: string
        appUserId:
          description: The ID of the app user to grant access for. This field and
            identityUserId cannot both be set for a given request.
          type: string
        description:
          description: The description of the request.
          type: string
        emergencyAccess:
          description: Boolean stating whether or not the task is marked as emergency
            access.
          type: boolean
        expandMask:
          $ref: '#/components/schemas/c1.api.task.v1.TaskExpandMask'
        grantDuration:
          format: duration
          type: string
        identityUserId:
          description: The ID of the user associated with the app user we are granting
            access for. This field cannot be set if appUserID is also set.
          type: string
        source:
          $ref: '#/components/schemas/c1.api.task.v1.TaskGrantSource'
      required:
      - appId
      - appEntitlementId
      title: Task Service Create Grant Request
      type: object
      x-speakeasy-name-override: TaskServiceCreateGrantRequest
    c1.api.task.v1.TaskServiceCreateGrantResponse:
      description: The TaskServiceCreateGrantResponse returns a task view which has
        a task including JSONPATHs to the expanded items in the expanded array.
      properties:
        expanded:
          description: List of serialized related objects.
          items:
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type
              that describes the type of the serialized message.
            properties:
              '@type':
                description: The type of the serialized message.
                type: string
            readOnly: true
            type: object
          nullable: true
          readOnly: true
          type: array
        taskView:
          $ref: '#/components/schemas/c1.api.task.v1.TaskView'
      title: Task Service Create Grant Response
      type: object
      x-speakeasy-name-override: TaskServiceCreateGrantResponse
    c1.api.task.v1.TaskServiceCreateRevokeRequest:
      description: Create a revoke task.
      properties:
        appEntitlementId:
          description: The ID of the app entitlement to revoke access to.
          type: string
        appId:
          description: The ID of the app associated with the entitlement.
          type: string
        appUserId:
          description: The ID of the app user to revoke access from. This field and
            identityUserId cannot both be set for a given request.
          type: string
        description:
          description: The description of the request.
          type: string
        expandMask:
          $ref: '#/components/schemas/c1.api.task.v1.TaskExpandMask'
        identityUserId:
          description: The ID of the user associated with the app user we are revoking
            access from. This field cannot be set if appUserID is also set.
          type: string
      required:
      - appId
      - appEntitlementId
      title: Task Service Create Revoke Request
      type: object
      x-speakeasy-name-override: TaskServiceCreateRevokeRequest
    c1.api.task.v1.TaskServiceCreateRevokeResponse:
      description: The TaskServiceCreateRevokeResponse returns a task view which has
        a task including JSONPATHs to the expanded items in the expanded array.
      properties:
        expanded:
          description: List of serialized related objects.
          items:
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type
              that describes the type of the serialized message.
            properties:
              '@type':
                description: The type of the serialized message.
                type: string
            type: object
          nullable: true
          type: array
        taskView:
          $ref: '#/components/schemas/c1.api.task.v1.TaskView'
      title: Task Service Create Revoke Response
      type: object
      x-speakeasy-name-override: TaskServiceCreateRevokeResponse
    c1.api.task.v1.TaskServiceGetResponse:
      description: The TaskServiceGetResponse returns a task view which has a task
        including JSONPATHs to the expanded items in the expanded array.
      properties:
        expanded:
          description: List of serialized related objects.
          items:
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type
              that describes the type of the serialized message.
            properties:
              '@type':
                description: The type of the serialized message.
                type: string
            readOnly: true
            type: object
          nullable: true
          readOnly: true
          type: array
        taskView:
          $ref: '#/components/schemas/c1.api.task.v1.TaskView'
      title: Task Service Get Response
      type: object
      x-speakeasy-name-override: TaskServiceGetResponse
    c1.api.task.v1.TaskType:
      description: "Task Type provides configuration for the type of task: certify,\
        \ grant, or revoke\n\nThis message contains a oneof named task_type. Only\
        \ a single field of the following list may be set at a time:\n  - grant\n\
        \  - revoke\n  - certify\n"
      properties:
        certify:
          $ref: '#/components/schemas/c1.api.task.v1.TaskTypeCertify'
        grant:
          $ref: '#/components/schemas/c1.api.task.v1.TaskTypeGrant'
        revoke:
          $ref: '#/components/schemas/c1.api.task.v1.TaskTypeRevoke'
      title: Task Type
      type: object
      x-speakeasy-name-override: TaskType
    c1.api.task.v1.TaskTypeCertify:
      description: The TaskTypeCertify message indicates that a task is a certify
        task and all related details.
      nullable: true
      properties:
        accessReviewId:
          description: The ID of the access review.
          readOnly: true
          type: string
        accessReviewSelection:
          description: The ID of the specific access review object that owns this
            certify task. This is also set on a revoke task if the revoke task is
            created from the denied outcome of a certify task.
          readOnly: true
          type: string
        appEntitlementId:
          description: The ID of the app entitlement.
          readOnly: true
          type: string
        appId:
          description: The ID of the app.
          readOnly: true
          type: string
        appUserId:
          description: The ID of the app user.
          readOnly: true
          type: string
        identityUserId:
          description: The ID of the user.
          readOnly: true
          type: string
        outcome:
          description: The outcome of the certification.
          enum:
          - CERTIFY_OUTCOME_UNSPECIFIED
          - CERTIFY_OUTCOME_CERTIFIED
          - CERTIFY_OUTCOME_DECERTIFIED
          - CERTIFY_OUTCOME_ERROR
          - CERTIFY_OUTCOME_CANCELLED
          readOnly: true
          type: string
        outcomeTime:
          format: date-time
          readOnly: true
          type: string
      title: Task Type Certify
      type: object
      x-speakeasy-name-override: TaskTypeCertify
    c1.api.task.v1.TaskTypeGrant:
      description: The TaskTypeGrant message indicates that a task is a grant task
        and all related details.
      nullable: true
      properties:
        appEntitlementId:
          description: The ID of the app entitlement.
          readOnly: true
          type: string
        appId:
          description: The ID of the app.
          readOnly: true
          type: string
        appUserId:
          description: The ID of the app user.
          readOnly: true
          type: string
        grantDuration:
          format: duration
          readOnly: true
          type: string
        identityUserId:
          description: The ID of the user.
          readOnly: true
          type: string
        outcome:
          description: The outcome of the grant.
          enum:
          - GRANT_OUTCOME_UNSPECIFIED
          - GRANT_OUTCOME_GRANTED
          - GRANT_OUTCOME_DENIED
          - GRANT_OUTCOME_ERROR
          - GRANT_OUTCOME_CANCELLED
          readOnly: true
          type: string
        outcomeTime:
          format: date-time
          readOnly: true
          type: string
        source:
          $ref: '#/components/schemas/c1.api.task.v1.TaskGrantSource'
      title: Task Type Grant
      type: object
      x-speakeasy-name-override: TaskTypeGrant
    c1.api.task.v1.TaskTypeRevoke:
      description: The TaskTypeRevoke message indicates that a task is a revoke task
        and all related details.
      nullable: true
      properties:
        appEntitlementId:
          description: The ID of the app entitlement.
          readOnly: true
          type: string
        appId:
          description: The ID of the app.
          readOnly: true
          type: string
        appUserId:
          description: The ID of the app user.
          readOnly: true
          type: string
        identityUserId:
          description: The ID of the user.
          readOnly: true
          type: string
        outcome:
          description: The outcome of the revoke.
          enum:
          - REVOKE_OUTCOME_UNSPECIFIED
          - REVOKE_OUTCOME_REVOKED
          - REVOKE_OUTCOME_DENIED
          - REVOKE_OUTCOME_ERROR
          - REVOKE_OUTCOME_CANCELLED
          readOnly: true
          type: string
        outcomeTime:
          format: date-time
          readOnly: true
          type: string
        source:
          $ref: '#/components/schemas/c1.api.task.v1.TaskRevokeSource'
      title: Task Type Revoke
      type: object
      x-speakeasy-name-override: TaskTypeRevoke
    c1.api.task.v1.TaskView:
      description: Contains a task and JSONPATH expressions that describe where in
        the expanded array related objects are located. This view can be used to display
        a fully-detailed dashboard of task information.
      properties:
        accessReviewPath:
          description: JSONPATH expression indicating the location of the AccessReview
            object in the expanded array
          readOnly: true
          type: string
        appPath:
          description: JSONPATH expression indicating the location of the App object
            in the expanded array
          readOnly: true
          type: string
        appUserPath:
          description: JSONPATH expression indicating the location of the AppUser
            object in the expanded array
          readOnly: true
          type: string
        createdByUserPath:
          description: JSONPATH expression indicating the location of the object of
            the User that created the ticket in the expanded array
          readOnly: true
          type: string
        entitlementsPath:
          description: JSONPATH expression indicating the location of the Entitlements
            objects in the expanded array
          readOnly: true
          type: string
        identityUserPath:
          description: JSONPATH expression indicating the location of the User object
            of the User that this task is targeting in the expanded array. This is
            the user that is the identity when the target of a task is an app user.
          readOnly: true
          type: string
        insightsPath:
          description: JSONPATH expression indicating the location of the Insights
            objects in the expanded array
          readOnly: true
          type: string
        stepApproversPath:
          description: JSONPATH expression indicating the location of the StepApproverUsers
            objects in the expanded array
          readOnly: true
          type: string
        task:
          $ref: '#/components/schemas/c1.api.task.v1.Task'
        userPath:
          description: JSONPATH expression indicating the location of the User object
            in the expanded array. This is the user that is a direct target of the
            ticket without a specific relationship to a potentially non-existent app
            user.
          readOnly: true
          type: string
      title: Task View
      type: object
      x-speakeasy-name-override: TaskView
    c1.api.user.v1.SearchUsersRequest:
      description: Search for users based on some filters.
      properties:
        email:
          description: Search for users based on their email (exact match).
          type: string
        excludeIds:
          description: An array of users IDs to exclude from the results.
          items:
            type: string
          nullable: true
          type: array
        expandMask:
          $ref: '#/components/schemas/c1.api.user.v1.UserExpandMask'
        ids:
          description: Deprecated. Use refs array instead.
          items:
            type: string
          nullable: true
          type: array
        pageSize:
          description: The pageSize where 0 <= pageSize <= 100. Values < 10 will be
            set to 10. A value of 0 returns the default page size (currently 25)
          format: int32
          type: number
        pageToken:
          description: The pageToken field.
          type: string
        query:
          description: Query the apps with a fuzzy search on display name and emails.
          type: string
        refs:
          description: An array of user refs to restrict the return values to by ID.
          items:
            $ref: '#/components/schemas/c1.api.user.v1.UserRef'
          nullable: true
          type: array
        roleIds:
          description: Search for users that have any of the role IDs on this list.
          items:
            type: string
          nullable: true
          type: array
        userStatuses:
          description: Search for users that have any of the statuses on this list.
            This can only be ENABLED, DISABLED, and DELETED
          items:
            enum:
            - UNKNOWN
            - ENABLED
            - DISABLED
            - DELETED
            type: string
          nullable: true
          type: array
      title: Search Users Request
      type: object
      x-speakeasy-name-override: SearchUsersRequest
    c1.api.user.v1.SearchUsersResponse:
      description: The SearchUsersResponse message.
      properties:
        expanded:
          description: List of related objects
          items:
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type
              that describes the type of the serialized message.
            properties:
              '@type':
                description: The type of the serialized message.
                type: string
            type: object
          nullable: true
          type: array
        list:
          description: The list of results containing up to X results, where X is
            the page size defined in the request
          items:
            $ref: '#/components/schemas/c1.api.user.v1.UserView'
          nullable: true
          type: array
        nextPageToken:
          description: The nextPageToken is shown for the next page if the number
            of results is larger than the max page size. The server returns one page
            of results and the nextPageToken until all results are retreived. To retrieve
            the next page, use the same request and append a pageToken field with
            the value of nextPageToken shown on the previous page.
          type: string
      title: Search Users Response
      type: object
      x-speakeasy-name-override: SearchUsersResponse
    c1.api.user.v1.User:
      description: The User object provides all of the details for an user, as well
        as some configuration.
      properties:
        createdAt:
          format: date-time
          readOnly: true
          type: string
        delegatedUserId:
          description: The id of the user to whom tasks will be automatically reassigned
            to.
          type: string
        deletedAt:
          format: date-time
          readOnly: true
          type: string
        department:
          description: The department which the user belongs to in the organization.
          readOnly: true
          type: string
        departmentSources:
          description: A list of objects mapped based on department attribute mappings
            configured in the system.
          items:
            $ref: '#/components/schemas/c1.api.user.v1.UserAttributeMappingSource'
          nullable: true
          readOnly: true
          type: array
        directoryIds:
          description: A list of unique ids that represent different directories.
          items:
            type: string
          nullable: true
          readOnly: true
          type: array
        directoryStatus:
          description: The status of the user in the directory.
          enum:
          - UNKNOWN
          - ENABLED
          - DISABLED
          - DELETED
          readOnly: true
          type: string
        directoryStatusSources:
          description: A list of objects mapped based on directoryStatus attribute
            mappings configured in the system.
          items:
            $ref: '#/components/schemas/c1.api.user.v1.UserAttributeMappingSource'
          nullable: true
          readOnly: true
          type: array
        displayName:
          description: The display name of the user.
          readOnly: true
          type: string
        email:
          description: This is the user's email.
          readOnly: true
          type: string
        emails:
          description: This is a list of all of the user's emails from app users.
          items:
            type: string
          nullable: true
          readOnly: true
          type: array
        employmentStatus:
          description: The users employment status.
          readOnly: true
          type: string
        employmentStatusSources:
          description: A list of objects mapped based on employmentStatus attribute
            mappings configured in the system.
          items:
            $ref: '#/components/schemas/c1.api.user.v1.UserAttributeMappingSource'
          nullable: true
          readOnly: true
          type: array
        employmentType:
          description: The employment type of the user.
          readOnly: true
          type: string
        employmentTypeSources:
          description: A list of objects mapped based on employmentType attribute
            mappings configured in the system.
          items:
            $ref: '#/components/schemas/c1.api.user.v1.UserAttributeMappingSource'
          nullable: true
          readOnly: true
          type: array
        id:
          description: A unique identifier of the user.
          readOnly: true
          type: string
        jobTitle:
          description: The job title of the user.
          readOnly: true
          type: string
        jobTitleSources:
          description: A list of objects mapped based on jobTitle attribute mappings
            configured in the system.
          items:
            $ref: '#/components/schemas/c1.api.user.v1.UserAttributeMappingSource'
          nullable: true
          readOnly: true
          type: array
        managerIds:
          description: A list of ids of the user's managers.
          items:
            type: string
          nullable: true
          readOnly: true
          type: array
        managerSources:
          description: A list of objects mapped based on managerId attribute mappings
            configured in the system.
          items:
            $ref: '#/components/schemas/c1.api.user.v1.UserAttributeMappingSource'
          nullable: true
          readOnly: true
          type: array
        profile:
          additionalProperties:
            nullable: true
            type:
            - string
            - number
            - object
            - array
            - boolean
            - 'null'
          readOnly: true
          type: object
        roleIds:
          description: "A list of unique identifiers that maps to ConductorOne\u2019\
            s user roles let you assign users permissions tailored to the work they\
            \ do in the software."
          items:
            type: string
          nullable: true
          type: array
        status:
          description: The status of the user in the system.
          enum:
          - UNKNOWN
          - ENABLED
          - DISABLED
          - DELETED
          type: string
        updatedAt:
          format: date-time
          readOnly: true
          type: string
        username:
          description: This is the user's primary username. Typically sourced from
            the primary directory.
          readOnly: true
          type: string
        usernames:
          description: This is a list of all of the user's usernames from app users.
          items:
            type: string
          nullable: true
          readOnly: true
          type: array
      title: User
      type: object
      x-speakeasy-name-override: User
    c1.api.user.v1.UserAttributeMappingSource:
      description: The UserAttributeMappingSource message.
      properties:
        appId:
          description: The appId field.
          type: string
        appUserId:
          description: The appUserId field.
          type: string
        appUserProfileAttributeKey:
          description: The appUserProfileAttributeKey field.
          type: string
        userAttributeMappingId:
          description: The userAttributeMappingId field.
          type: string
        value:
          description: The value field.
          type: string
      title: User Attribute Mapping Source
      type: object
      x-speakeasy-name-override: UserAttributeMappingSource
    c1.api.user.v1.UserExpandMask:
      description: "The user expand mask is used to indicate which related objects\
        \ should be expanded in the response.\n The supported paths are 'role_ids',\
        \ 'manager_ids', 'delegated_user_id', 'directory_ids', and '*'."
      properties:
        paths:
          description: An array of paths to be expanded in the response.
          items:
            type: string
          nullable: true
          type: array
      title: User Expand Mask
      type: object
      x-speakeasy-name-override: UserExpandMask
    c1.api.user.v1.UserRef:
      description: A reference to a user.
      properties:
        id:
          description: The id of the user.
          type: string
      title: User Ref
      type: object
      x-speakeasy-name-override: UserRef
    c1.api.user.v1.UserServiceGetResponse:
      description: The UserServiceGetResponse returns a user view which has a user
        including JSONPATHs to the expanded items in the expanded array.
      properties:
        expanded:
          description: List of serialized related objects.
          items:
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type
              that describes the type of the serialized message.
            properties:
              '@type':
                description: The type of the serialized message.
                type: string
            type: object
          nullable: true
          type: array
        userView:
          $ref: '#/components/schemas/c1.api.user.v1.UserView'
      title: User Service Get Response
      type: object
      x-speakeasy-name-override: UserServiceGetResponse
    c1.api.user.v1.UserServiceListResponse:
      description: The UserServiceListResponse message contains a list of results
        and a nextPageToken if applicable.
      properties:
        expanded:
          description: List of serialized related objects.
          items:
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type
              that describes the type of the serialized message.
            properties:
              '@type':
                description: The type of the serialized message.
                type: string
            type: object
          nullable: true
          type: array
        list:
          description: The list of results containing up to X results, where X is
            the page size defined in the request
          items:
            $ref: '#/components/schemas/c1.api.user.v1.UserView'
          nullable: true
          type: array
        nextPageToken:
          description: "The nextPageToken is shown for the next page if the number\
            \ of results is larger than the max page size.\n The server returns one\
            \ page of results and the nextPageToken until all results are retreived.\n\
            \ To retrieve the next page, use the same request and append a pageToken\
            \ field with the value of nextPageToken shown on the previous page."
          type: string
      title: User Service List Response
      type: object
      x-speakeasy-name-override: UserServiceListResponse
    c1.api.user.v1.UserView:
      description: The UserView object provides a user response object, as well as
        JSONPATHs to related objects provided by expanders.
      properties:
        delegatedUserPath:
          description: JSONPATH expression indicating the location of the user objects
            of delegates of the current user in the expanded array.
          readOnly: true
          type: string
        directoriesPath:
          description: JSONPATH expression indicating the location of directory objects
            in the expanded array.
          readOnly: true
          type: string
        managersPath:
          description: JSONPATH expression indicating the location of the user objects
            that managed the current user in the expanded array.
          readOnly: true
          type: string
        rolesPath:
          description: JSONPATH expression indicating the location of the roles of
            the current user in the expanded array.
          readOnly: true
          type: string
        user:
          $ref: '#/components/schemas/c1.api.user.v1.User'
      title: User View
      type: object
      x-speakeasy-name-override: UserView
  securitySchemes:
    bearerAuth:
      scheme: bearer
      type: http
    oauth:
      description: 'This API uses OAuth2 with the Client Credential flow.

        Client Credentials must be sent in the BODY, not the headers.

        For an example of how to implement this, refer to the [c1TokenSource.Token()](https://github.com/ConductorOne/conductorone-sdk-go/blob/3375fe7c0126d17e7ec4e711693dee7b791023aa/token_source.go#L101-L187)
        function.'
      flows:
        clientCredentials:
          scopes: {}
          tokenUrl: /auth/v1/token
      type: oauth2
info:
  description: The ConductorOne API is a HTTP API for managing ConductorOne resources.
  title: ConductorOne API
  version: 0.1.0-alpha
openapi: 3.1.0
paths:
  /api/v1/apps:
    get:
      description: List all apps.
      operationId: c1.api.app.v1.Apps.List
      parameters:
      - in: query
        name: page_size
        schema:
          description: The pageSize field.
          format: int32
          type: number
      - in: query
        name: page_token
        schema:
          description: The pageToken field.
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.app.v1.ListAppsResponse'
          description: The ListAppsResponse message contains a list of results and
            a nextPageToken if applicable.
      summary: List
      tags:
      - App
      x-speakeasy-group: Apps
      x-speakeasy-name-override: List
    post:
      description: Create a new app.
      operationId: c1.api.app.v1.Apps.Create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/c1.api.app.v1.CreateAppRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.app.v1.CreateAppResponse'
          description: Returns the new app's values.
      summary: Create
      tags:
      - App
      x-speakeasy-entity-operation: App#create
      x-speakeasy-group: Apps
      x-speakeasy-name-override: Create
  /api/v1/apps/{app_id}/connectors:
    get:
      description: List connectors for an app.
      operationId: c1.api.app.v1.ConnectorService.List
      parameters:
      - in: path
        name: app_id
        required: true
        schema:
          description: The appId field.
          type: string
      - in: query
        name: page_size
        schema:
          description: The pageSize field.
          format: int32
          type: number
      - in: query
        name: page_token
        schema:
          description: The pageToken field.
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.app.v1.ConnectorServiceListResponse'
          description: The ConnectorServiceListResponse message contains a list of
            results and a nextPageToken if applicable
      summary: List
      tags:
      - Connector
      x-speakeasy-group: Connector
      x-speakeasy-name-override: List
    post:
      description: Create a connector that is pending a connector config.
      operationId: c1.api.app.v1.ConnectorService.CreateDelegated
      parameters:
      - in: path
        name: app_id
        required: true
        schema:
          description: The appId of the app the connector is attached to.
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/c1.api.app.v1.ConnectorServiceCreateDelegatedRequestInput'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.app.v1.ConnectorServiceCreateResponse'
          description: The ConnectorServiceCreateResponse is the response returned
            from creating a connector.
      summary: Create Delegated
      tags:
      - Connector
      x-speakeasy-group: Connector
      x-speakeasy-name-override: CreateDelegated
  /api/v1/apps/{app_id}/connectors/{connector_id}/credentials:
    post:
      description: Rotate credentials for a connector.
      operationId: c1.api.app.v1.ConnectorService.RotateCredential
      parameters:
      - in: path
        name: app_id
        required: true
        schema:
          description: The appId of the app the connector is attached to.
          type: string
      - in: path
        name: connector_id
        required: true
        schema:
          description: The connectorId of the connector that we are rotating the credentials
            for.
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/c1.api.app.v1.ConnectorServiceRotateCredentialRequestInput'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.app.v1.ConnectorServiceRotateCredentialResponse'
          description: ConnectorServiceRotateCredentialResponse is the response returned
            by the rotate method.
      summary: Rotate Credential
      tags:
      - Connector
      x-speakeasy-entity-operation: ConnectorCredential#create
      x-speakeasy-group: Connector
      x-speakeasy-name-override: RotateCredential
  /api/v1/apps/{app_id}/connectors/{connector_id}/credentials/{id}:
    get:
      description: Get credentials for a connector.
      operationId: c1.api.app.v1.ConnectorService.GetCredentials
      parameters:
      - in: path
        name: app_id
        required: true
        schema:
          description: The appId of the app the connector is attached to.
          type: string
      - in: path
        name: connector_id
        required: true
        schema:
          description: The connectorId of the connector that we are getting the credentials
            for.
          type: string
      - in: path
        name: id
        required: true
        schema:
          description: The id of the ConnectorCredential.
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.app.v1.ConnectorServiceGetCredentialsResponse'
          description: ConnectorServiceGetCredentialsResponse is the response returned
            by the get method.
      summary: Get Credentials
      tags:
      - Connector
      x-speakeasy-entity-operation: ConnectorCredential#read
      x-speakeasy-group: Connector
      x-speakeasy-name-override: GetCredentials
    post:
      description: Revoke credentials for a connector.
      operationId: c1.api.app.v1.ConnectorService.RevokeCredential
      parameters:
      - in: path
        name: app_id
        required: true
        schema:
          description: The appId of the app the connector is attached to.
          type: string
      - in: path
        name: connector_id
        required: true
        schema:
          description: The connectorId of the connector that we are revoking the credentials
            for.
          type: string
      - in: path
        name: id
        required: true
        schema:
          description: The id of the ConnectorCredential.
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/c1.api.app.v1.ConnectorServiceRevokeCredentialRequestInput'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.app.v1.ConnectorServiceRevokeCredentialResponse'
          description: Empty response body. Status code indicates success.
      summary: Revoke Credential
      tags:
      - Connector
      x-speakeasy-entity-operation: ConnectorCredential#delete
      x-speakeasy-group: Connector
      x-speakeasy-name-override: RevokeCredential
  /api/v1/apps/{app_id}/connectors/{id}:
    delete:
      description: Delete a connector.
      operationId: c1.api.app.v1.ConnectorService.Delete
      parameters:
      - in: path
        name: app_id
        required: true
        schema:
          description: The appId of the app the connector is attached to.
          type: string
      - in: path
        name: id
        required: true
        schema:
          description: The id of the connector.
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/c1.api.app.v1.ConnectorServiceDeleteRequestInput'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.app.v1.ConnectorServiceDeleteResponse'
          description: Empty response body. Status code indicates success.
      summary: Delete
      tags:
      - Connector
      x-speakeasy-group: Connector
      x-speakeasy-name-override: Delete
    get:
      description: Get a connector.
      operationId: c1.api.app.v1.ConnectorService.Get
      parameters:
      - in: path
        name: app_id
        required: true
        schema:
          description: The appId of the app the connector is attached to.
          type: string
      - in: path
        name: id
        required: true
        schema:
          description: The id of the connector.
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.app.v1.ConnectorServiceGetResponse'
          description: The ConnectorServiceGetResponse message contains the connectorView,
            and an expand mask.
      summary: Get
      tags:
      - Connector
      x-speakeasy-group: Connector
      x-speakeasy-name-override: Get
    post:
      description: Update a connector.
      operationId: c1.api.app.v1.ConnectorService.Update
      parameters:
      - in: path
        name: app_id
        required: true
        schema:
          description: The id of the app the connector is associated with.
          type: string
      - in: path
        name: id
        required: true
        schema:
          description: The id of the connector.
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/c1.api.app.v1.ConnectorServiceUpdateRequestInput'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.app.v1.ConnectorServiceUpdateResponse'
          description: ConnectorServiceUpdateResponse is the response returned by
            the update method.
      summary: Update
      tags:
      - Connector
      x-speakeasy-group: Connector
      x-speakeasy-name-override: Update
  /api/v1/apps/{app_id}/connectors/create:
    post:
      description: Create a configured connector.
      operationId: c1.api.app.v1.ConnectorService.Create
      parameters:
      - in: path
        name: app_id
        required: true
        schema:
          description: The appId field.
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/c1.api.app.v1.ConnectorServiceCreateRequestInput'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.app.v1.ConnectorServiceCreateResponse'
          description: The ConnectorServiceCreateResponse is the response returned
            from creating a connector.
      summary: Create
      tags:
      - Connector
      x-speakeasy-group: Connector
      x-speakeasy-name-override: Create
  /api/v1/apps/{app_id}/entitlements:
    get:
      description: List app entitlements associated with an app.
      operationId: c1.api.app.v1.AppEntitlements.List
      parameters:
      - in: path
        name: app_id
        required: true
        schema:
          description: The appId field.
          type: string
      - in: query
        name: page_size
        schema:
          description: The pageSize field.
          format: int32
          type: number
      - in: query
        name: page_token
        schema:
          description: The pageToken field.
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.app.v1.ListAppEntitlementsResponse'
          description: The ListAppEntitlementsResponse message contains a list of
            results and a nextPageToken if applicable.
      summary: List
      tags:
      - App Entitlement
      x-speakeasy-group: AppEntitlements
      x-speakeasy-name-override: List
  /api/v1/apps/{app_id}/entitlements/{app_entitlement_id}/users:
    get:
      description: List the users, as AppEntitlementUsers objects, of an app entitlement.
      operationId: c1.api.app.v1.AppEntitlements.ListUsers
      parameters:
      - in: path
        name: app_id
        required: true
        schema:
          description: The appId field.
          type: string
      - in: path
        name: app_entitlement_id
        required: true
        schema:
          description: The appEntitlementId field.
          type: string
      - in: query
        name: page_size
        schema:
          description: The pageSize field.
          format: int32
          type: number
      - in: query
        name: page_token
        schema:
          description: The pageToken field.
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.app.v1.ListAppEntitlementUsersResponse'
          description: The ListAppEntitlementUsersResponse message contains a list
            of results and a nextPageToken if applicable.
      summary: List Users
      tags:
      - App Entitlement
      x-speakeasy-group: AppEntitlements
      x-speakeasy-name-override: ListUsers
  /api/v1/apps/{app_id}/entitlements/{app_entitlement_id}/users/{identity_user_id}/grants:
    get:
      description: Returns a list of app users for the identity in the app. If that
        app user also has a grant to the entitlement from the request, data about
        the grant is also returned. It will always return ALL app users for this identity,
        but only SOME may have grant data.
      operationId: c1.api.app.v1.AppEntitlementUserBindingService.ListAppUsersForIdentityWithGrant
      parameters:
      - in: path
        name: app_id
        required: true
        schema:
          description: The appId field.
          type: string
      - in: path
        name: app_entitlement_id
        required: true
        schema:
          description: The appEntitlementId field.
          type: string
      - in: path
        name: identity_user_id
        required: true
        schema:
          description: The identityUserId field.
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.app.v1.ListAppUsersForIdentityWithGrantResponse'
          description: Successful response
      summary: List App Users For Identity With Grant
      tags:
      - App Entitlement User Binding
      x-speakeasy-group: AppEntitlementUserBinding
      x-speakeasy-name-override: ListAppUsersForIdentityWithGrant
  /api/v1/apps/{app_id}/entitlements/{entitlement_id}/owners:
    get:
      description: List owners for a given app entitlement.
      operationId: c1.api.app.v1.AppEntitlementOwners.List
      parameters:
      - in: path
        name: app_id
        required: true
        schema:
          description: The app_id field for the app entitlement to list owners of.
          type: string
      - in: path
        name: entitlement_id
        required: true
        schema:
          description: The entitlement_id field for the app entitlement to list owners
            of.
          type: string
      - in: query
        name: page_size
        schema:
          description: The page_size field for pagination.
          format: int32
          type: number
      - in: query
        name: page_token
        schema:
          description: The page_token field for pagination.
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.app.v1.ListAppEntitlementOwnersResponse'
          description: The response message for listing app entitlement owners.
      summary: List
      tags:
      - App Entitlement Owner
      x-speakeasy-group: AppEntitlementOwners
      x-speakeasy-name-override: List
    post:
      description: Add an owner to a given app entitlement.
      operationId: c1.api.app.v1.AppEntitlementOwners.Add
      parameters:
      - in: path
        name: app_id
        required: true
        schema:
          description: The app_id field for the app entitlement to add the owner to.
          type: string
      - in: path
        name: entitlement_id
        required: true
        schema:
          description: The entitlement_id field for the app entitlement to add the
            owner to.
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/c1.api.app.v1.AddAppEntitlementOwnerRequestInput'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.app.v1.AddAppEntitlementOwnerResponse'
          description: The empty response message for adding an app entitlement owner.
      summary: Add
      tags:
      - App Entitlement Owner
      x-speakeasy-group: AppEntitlementOwners
      x-speakeasy-name-override: Add
    put:
      description: Sets the owners for a given app entitlement to the specified list
        of users.
      operationId: c1.api.app.v1.AppEntitlementOwners.Set
      parameters:
      - in: path
        name: app_id
        required: true
        schema:
          description: The app_id field for the app entitlement to set the owners
            of.
          type: string
      - in: path
        name: entitlement_id
        required: true
        schema:
          description: The entitlement_id field for the app entitlement to set the
            owners of.
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/c1.api.app.v1.SetAppEntitlementOwnersRequestInput'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.app.v1.SetAppEntitlementOwnersResponse'
          description: The empty response message for setting the app entitlement
            owners.
      summary: Set
      tags:
      - App Entitlement Owner
      x-speakeasy-entity-operation: App_Entitlement_Owner#create
      x-speakeasy-group: AppEntitlementOwners
      x-speakeasy-name-override: Set
  /api/v1/apps/{app_id}/entitlements/{entitlement_id}/owners/{user_id}:
    delete:
      description: Remove an owner from a given app entitlement.
      operationId: c1.api.app.v1.AppEntitlementOwners.Remove
      parameters:
      - in: path
        name: app_id
        required: true
        schema:
          description: The app_id field for the app entitlement to remove the owner
            of.
          type: string
      - in: path
        name: entitlement_id
        required: true
        schema:
          description: The entitlement_id field for the app entitlement to remove
            the owner of.
          type: string
      - in: path
        name: user_id
        required: true
        schema:
          description: The user_id field for the user to remove as an owner of the
            app entitlement.
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/c1.api.app.v1.RemoveAppEntitlementOwnerRequestInput'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.app.v1.RemoveAppEntitlementOwnerResponse'
          description: The empty response message for removing an app entitlement
            owner.
      summary: Remove
      tags:
      - App Entitlement Owner
      x-speakeasy-group: AppEntitlementOwners
      x-speakeasy-name-override: Remove
  /api/v1/apps/{app_id}/entitlements/{id}:
    get:
      description: Get an app entitlement by ID.
      operationId: c1.api.app.v1.AppEntitlements.Get
      parameters:
      - in: path
        name: app_id
        required: true
        schema:
          description: The appId field.
          type: string
      - in: path
        name: id
        required: true
        schema:
          description: The id field.
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.app.v1.GetAppEntitlementResponse'
          description: The get app entitlement response returns an entitlement view
            containing paths in the expanded array for the objects expanded as indicated
            by the expand mask in the request.
      summary: Get
      tags:
      - App Entitlement
      x-speakeasy-group: AppEntitlements
      x-speakeasy-name-override: Get
    post:
      description: Update an app entitlement by ID.
      operationId: c1.api.app.v1.AppEntitlements.Update
      parameters:
      - in: path
        name: app_id
        required: true
        schema:
          description: The ID of the app that is associated with the app entitlement.
          type: string
      - in: path
        name: id
        required: true
        schema:
          description: The unique ID for the App Entitlement.
          readOnly: true
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/c1.api.app.v1.UpdateAppEntitlementRequestInput'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.app.v1.UpdateAppEntitlementResponse'
          description: Successful response
      summary: Update
      tags:
      - App Entitlement
      x-speakeasy-group: AppEntitlements
      x-speakeasy-name-override: Update
  /api/v1/apps/{app_id}/entitlements/resource_types/{app_resource_type_id}/resources/{app_resource_id}:
    get:
      description: List app entitlements associated with an app resource.
      operationId: c1.api.app.v1.AppEntitlements.ListForAppResource
      parameters:
      - in: path
        name: app_id
        required: true
        schema:
          description: The appId field.
          type: string
      - in: path
        name: app_resource_type_id
        required: true
        schema:
          description: The appResourceTypeId field.
          type: string
      - in: path
        name: app_resource_id
        required: true
        schema:
          description: The appResourceId field.
          type: string
      - in: query
        name: page_size
        schema:
          description: The pageSize field.
          format: int32
          type: number
      - in: query
        name: page_token
        schema:
          description: The pageToken field.
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.app.v1.ListAppEntitlementsResponse'
          description: The ListAppEntitlementsResponse message contains a list of
            results and a nextPageToken if applicable.
      summary: List For App Resource
      tags:
      - App Entitlement
      x-speakeasy-group: AppEntitlements
      x-speakeasy-name-override: ListForAppResource
  /api/v1/apps/{app_id}/entitlements/users/{app_user_id}:
    get:
      description: List app entitlements associated with an app user.
      operationId: c1.api.app.v1.AppEntitlements.ListForAppUser
      parameters:
      - in: path
        name: app_id
        required: true
        schema:
          description: The appId field.
          type: string
      - in: path
        name: app_user_id
        required: true
        schema:
          description: The appUserId field.
          type: string
      - in: query
        name: page_size
        schema:
          description: The pageSize field.
          format: int32
          type: number
      - in: query
        name: page_token
        schema:
          description: The pageToken field.
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.app.v1.ListAppEntitlementsResponse'
          description: The ListAppEntitlementsResponse message contains a list of
            results and a nextPageToken if applicable.
      summary: List For App User
      tags:
      - App Entitlement
      x-speakeasy-group: AppEntitlements
      x-speakeasy-name-override: ListForAppUser
  /api/v1/apps/{app_id}/owners:
    get:
      description: List owners of an app.
      operationId: c1.api.app.v1.AppOwners.List
      parameters:
      - in: path
        name: app_id
        required: true
        schema:
          description: The appId field.
          type: string
      - in: query
        name: page_size
        schema:
          description: The pageSize where 0 <= pageSize <= 100. Values < 10 will be
            set to 10. A value of 0 returns the default page size (currently 25)
          format: int32
          type: number
      - in: query
        name: page_token
        schema:
          description: The pageToken field.
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.app.v1.ListAppOwnersResponse'
          description: Successful response
      summary: List
      tags:
      - App Owner
      x-speakeasy-group: AppOwners
      x-speakeasy-name-override: List
    put:
      description: Sets the owners for a given app to the specified list of users.
      operationId: c1.api.app.v1.AppOwners.Set
      parameters:
      - in: path
        name: app_id
        required: true
        schema:
          description: The app_id field for the app to set the owners of.
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/c1.api.app.v1.SetAppOwnersRequestInput'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.app.v1.SetAppOwnersResponse'
          description: The empty response message for setting the app owners.
      summary: Set
      tags:
      - App Owner
      x-speakeasy-entity-operation: App_Owner#create
      x-speakeasy-group: AppOwners
      x-speakeasy-name-override: Set
  /api/v1/apps/{app_id}/owners/{user_id}:
    delete:
      description: Removes an owner from an app.
      operationId: c1.api.app.v1.AppOwners.Remove
      parameters:
      - in: path
        name: app_id
        required: true
        schema:
          description: App ID of the app to remove the owner from.
          type: string
      - in: path
        name: user_id
        required: true
        schema:
          description: User ID of the user to remove as an owner.
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/c1.api.app.v1.RemoveAppOwnerRequestInput'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.app.v1.RemoveAppOwnerResponse'
          description: Empty response with a status code indicating success.
      summary: Remove
      tags:
      - App Owner
      x-speakeasy-group: AppOwners
      x-speakeasy-name-override: Remove
    post:
      description: Adds an owner to an app.
      operationId: c1.api.app.v1.AppOwners.Add
      parameters:
      - in: path
        name: app_id
        required: true
        schema:
          description: The appId field.
          type: string
      - in: path
        name: user_id
        required: true
        schema:
          description: The userId field.
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/c1.api.app.v1.AddAppOwnerRequestInput'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.app.v1.AddAppOwnerResponse'
          description: Empty response with a status code indicating success
      summary: Add
      tags:
      - App Owner
      x-speakeasy-group: AppOwners
      x-speakeasy-name-override: Add
  /api/v1/apps/{app_id}/report:
    get:
      description: Get a list of reports for the given app.
      operationId: c1.api.app.v1.AppReportService.List
      parameters:
      - in: path
        name: app_id
        required: true
        schema:
          description: The appId field.
          type: string
      - in: query
        name: page_size
        schema:
          description: The pageSize field.
          format: int32
          type: number
      - in: query
        name: page_token
        schema:
          description: The pageToken field.
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.app.v1.AppReportServiceListResponse'
          description: The AppReportServiceListResponse message contains a list of
            results and a nextPageToken if applicable.
      summary: List
      tags:
      - App Reports
      x-speakeasy-group: AppReport
      x-speakeasy-name-override: List
    post:
      description: Generate a report for the given app.
      operationId: c1.api.app.v1.AppReportActionService.GenerateReport
      parameters:
      - in: path
        name: app_id
        required: true
        schema:
          description: The appId field.
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/c1.api.app.v1.AppActionsServiceGenerateReportRequestInput'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.app.v1.AppActionsServiceGenerateReportResponse'
          description: Empty response body. Status code indicates success.
      summary: Generate Report
      tags:
      - App Reports
      x-speakeasy-group: AppReportAction
      x-speakeasy-name-override: GenerateReport
  /api/v1/apps/{app_id}/resource_types:
    get:
      description: List app resource types.
      operationId: c1.api.app.v1.AppResourceTypeService.List
      parameters:
      - in: path
        name: app_id
        required: true
        schema:
          description: The appId field.
          type: string
      - in: query
        name: page_size
        schema:
          description: The pageSize field.
          format: int32
          type: number
      - in: query
        name: page_token
        schema:
          description: The pageToken field.
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.app.v1.AppResourceTypeServiceListResponse'
          description: The AppResourceTypeServiceListResponse message contains a list
            of results and a nextPageToken if applicable.
      summary: List
      tags:
      - App Resource Type
      x-speakeasy-group: AppResourceType
      x-speakeasy-name-override: List
  /api/v1/apps/{app_id}/resource_types/{app_resource_type_id}/resources:
    get:
      description: Invokes the c1.api.app.v1.AppResourceService.List method.
      operationId: c1.api.app.v1.AppResourceService.List
      parameters:
      - in: path
        name: app_id
        required: true
        schema:
          description: The appId field.
          type: string
      - in: path
        name: app_resource_type_id
        required: true
        schema:
          description: The appResourceTypeId field.
          type: string
      - in: query
        name: page_size
        schema:
          description: The pageSize field.
          format: int32
          type: number
      - in: query
        name: page_token
        schema:
          description: The pageToken field.
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.app.v1.AppResourceServiceListResponse'
          description: The AppResourceServiceListResponse message contains a list
            of results and a nextPageToken if applicable.
      summary: List
      tags:
      - App Resource
      x-speakeasy-group: AppResource
      x-speakeasy-name-override: List
  /api/v1/apps/{app_id}/resource_types/{app_resource_type_id}/resources/{id}:
    get:
      description: Invokes the c1.api.app.v1.AppResourceService.Get method.
      operationId: c1.api.app.v1.AppResourceService.Get
      parameters:
      - in: path
        name: app_id
        required: true
        schema:
          description: The appId field.
          type: string
      - in: path
        name: app_resource_type_id
        required: true
        schema:
          description: The appResourceTypeId field.
          type: string
      - in: path
        name: id
        required: true
        schema:
          description: The id field.
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.app.v1.AppResourceServiceGetResponse'
          description: The app resource service get response contains the app resource
            view and array of expanded items indicated by the request's expand mask.
      summary: Get
      tags:
      - App Resource
      x-speakeasy-group: AppResource
      x-speakeasy-name-override: Get
  /api/v1/apps/{app_id}/resource_types/{id}:
    get:
      description: Get an app resource type.
      operationId: c1.api.app.v1.AppResourceTypeService.Get
      parameters:
      - in: path
        name: app_id
        required: true
        schema:
          description: The appId field.
          type: string
      - in: path
        name: id
        required: true
        schema:
          description: The id field.
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.app.v1.AppResourceTypeServiceGetResponse'
          description: "The AppResourceTypeServiceGetResponse contains an expanded\
            \ array containing the expanded values indicated by the expand mask\n\
            \ in the request and an app resource type view containing the resource\
            \ type and JSONPATHs indicating which objects are where in the expand\
            \ mask."
      summary: Get
      tags:
      - App Resource Type
      x-speakeasy-group: AppResourceType
      x-speakeasy-name-override: Get
  /api/v1/apps/{app_id}/resource_types/{resource_type_id}/resource/{resource_id}/owners:
    get:
      description: List all owners of an app resource.
      operationId: c1.api.app.v1.AppResourceOwners.List
      parameters:
      - in: path
        name: app_id
        required: true
        schema:
          description: The appId field.
          type: string
      - in: path
        name: resource_type_id
        required: true
        schema:
          description: The resourceTypeId field.
          type: string
      - in: path
        name: resource_id
        required: true
        schema:
          description: The resourceId field.
          type: string
      - in: query
        name: page_size
        schema:
          description: The pageSize field.
          format: int32
          type: number
      - in: query
        name: page_token
        schema:
          description: The pageToken field.
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.app.v1.ListAppResourceOwnersResponse'
          description: The ListAppResourceOwnersResponse message contains a list of
            results and a nextPageToken if applicable
      summary: List
      tags:
      - App Resource Owner
      x-speakeasy-group: AppResourceOwners
      x-speakeasy-name-override: List
  /api/v1/apps/{app_id}/usage_controls:
    get:
      description: Get usage controls, as an AppUsageControls object which describes
        some peripheral configuration, for an app.
      operationId: c1.api.app.v1.AppUsageControlsService.Get
      parameters:
      - in: path
        name: app_id
        required: true
        schema:
          description: The appId field.
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.app.v1.GetAppUsageControlsResponse'
          description: The GetAppUsageControlsResponse message contains the retrieved
            AppUsageControls object.
      summary: Get
      tags:
      - App Usage Controls
      x-speakeasy-group: AppUsageControls
      x-speakeasy-name-override: Get
    post:
      description: Update usage controls for an app.
      operationId: c1.api.app.v1.AppUsageControlsService.Update
      parameters:
      - in: path
        name: app_id
        required: true
        schema:
          description: The app that this object belongs to.
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/c1.api.app.v1.UpdateAppUsageControlsRequestInput'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.app.v1.UpdateAppUsageControlsResponse'
          description: The UpdateAppUsageControlsResponse message contains the updated
            AppUsageControls object.
      summary: Update
      tags:
      - App Usage Controls
      x-speakeasy-group: AppUsageControls
      x-speakeasy-name-override: Update
  /api/v1/apps/{app_user_app_id}/app_users/{app_user_id}:
    post:
      description: "Update an app user by ID. Only the fields specified in the update\
        \ mask are updated.\n Currently, only the appUserType, and identityUserId\
        \ fields can be updated."
      operationId: c1.api.app.v1.AppUserService.Update
      parameters:
      - in: path
        name: app_user_app_id
        required: true
        schema:
          description: The ID of the application.
          readOnly: true
          type: string
      - in: path
        name: app_user_id
        required: true
        schema:
          description: A unique idenditfier of the application user.
          readOnly: true
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/c1.api.app.v1.AppUserServiceUpdateRequestInput'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.app.v1.AppUserServiceUpdateResponse'
          description: Successful response
      summary: Update
      tags:
      - AppUsers
      x-speakeasy-group: AppUser
      x-speakeasy-name-override: Update
  /api/v1/apps/{connector_app_id}/connectors/{connector_id}/delegated:
    post:
      description: Update a delegated connector.
      operationId: c1.api.app.v1.ConnectorService.UpdateDelegated
      parameters:
      - in: path
        name: connector_app_id
        required: true
        schema:
          description: The id of the app the connector is associated with.
          type: string
      - in: path
        name: connector_id
        required: true
        schema:
          description: The id of the connector.
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/c1.api.app.v1.ConnectorServiceUpdateDelegatedRequestInput'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.app.v1.ConnectorServiceUpdateResponse'
          description: ConnectorServiceUpdateResponse is the response returned by
            the update method.
      summary: Update Delegated
      tags:
      - Connector
      x-speakeasy-group: Connector
      x-speakeasy-name-override: UpdateDelegated
  /api/v1/apps/{id}:
    delete:
      description: Delete an app.
      operationId: c1.api.app.v1.Apps.Delete
      parameters:
      - in: path
        name: id
        required: true
        schema:
          description: The id field.
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/c1.api.app.v1.DeleteAppRequestInput'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.app.v1.DeleteAppResponse'
          description: Empty response body. Status code indicates success.
      summary: Delete
      tags:
      - App
      x-speakeasy-entity-operation: App#delete
      x-speakeasy-group: Apps
      x-speakeasy-name-override: Delete
    get:
      description: Get an app by ID.
      operationId: c1.api.app.v1.Apps.Get
      parameters:
      - in: path
        name: id
        required: true
        schema:
          description: The id field.
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.app.v1.GetAppResponse'
          description: The GetAppResponse message contains the details of the requested
            app in the app field.
      summary: Get
      tags:
      - App
      x-speakeasy-entity-operation: App#read
      x-speakeasy-group: Apps
      x-speakeasy-name-override: Get
    post:
      description: Update an existing app.
      operationId: c1.api.app.v1.Apps.Update
      parameters:
      - in: path
        name: id
        required: true
        schema:
          description: The ID of the app.
          readOnly: true
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/c1.api.app.v1.UpdateAppRequestInput'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.app.v1.UpdateAppResponse'
          description: Returns the updated app's new values.
      summary: Update
      tags:
      - App
      x-speakeasy-entity-operation: App#update
      x-speakeasy-group: Apps
      x-speakeasy-name-override: Update
  /api/v1/attribute/{id}:
    delete:
      description: Delete an attribute value by id.
      operationId: c1.api.attribute.v1.Attributes.DeleteAttributeValue
      parameters:
      - in: path
        name: id
        required: true
        schema:
          description: The id field.
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/c1.api.attribute.v1.DeleteAttributeValueRequestInput'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.attribute.v1.DeleteAttributeValueResponse'
          description: DeleteAttributeValueResponse is the empty response for deleting
            an attribute value.
      summary: Delete Attribute Value
      tags:
      - Attribute
      x-speakeasy-group: Attributes
      x-speakeasy-name-override: DeleteAttributeValue
  /api/v1/attributes:
    post:
      description: Create a new attribute value.
      operationId: c1.api.attribute.v1.Attributes.CreateAttributeValue
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/c1.api.attribute.v1.CreateAttributeValueRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.attribute.v1.CreateAttributeValueResponse'
          description: CreateAttributeValueResponse is the response for creating an
            attribute value.
      summary: Create Attribute Value
      tags:
      - Attribute
      x-speakeasy-group: Attributes
      x-speakeasy-name-override: CreateAttributeValue
  /api/v1/attributes/{id}:
    get:
      description: Get an attribute value by id.
      operationId: c1.api.attribute.v1.Attributes.GetAttributeValue
      parameters:
      - in: path
        name: id
        required: true
        schema:
          description: The id field.
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.attribute.v1.GetAttributeValueResponse'
          description: GetAttributeValueResponse is the response for getting an attribute
            value by id.
      summary: Get Attribute Value
      tags:
      - Attribute
      x-speakeasy-group: Attributes
      x-speakeasy-name-override: GetAttributeValue
  /api/v1/attributes/types:
    get:
      description: List all attribute types.
      operationId: c1.api.attribute.v1.Attributes.ListAttributeTypes
      parameters:
      - in: query
        name: page_size
        schema:
          description: The pageSize field.
          format: int32
          type: number
      - in: query
        name: page_token
        schema:
          description: The pageToken field.
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.attribute.v1.ListAttributeTypesResponse'
          description: ListAttributeTypesResponse is the response for listing attribute
            types.
      summary: List Attribute Types
      tags:
      - Attribute
      x-speakeasy-group: Attributes
      x-speakeasy-name-override: ListAttributeTypes
  /api/v1/attributes/types/{attribute_type_id}/values:
    get:
      description: List all attribute values for a given attribute type.
      operationId: c1.api.attribute.v1.Attributes.ListAttributeValues
      parameters:
      - in: path
        name: attribute_type_id
        required: true
        schema:
          description: The attributeTypeId field.
          type: string
      - in: query
        name: page_size
        schema:
          description: The pageSize field.
          format: int32
          type: number
      - in: query
        name: page_token
        schema:
          description: The pageToken field.
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.attribute.v1.ListAttributeValuesResponse'
          description: ListAttributeValuesResponse is the response for listing attribute
            values for a given AttributeType.
      summary: List Attribute Values
      tags:
      - Attribute
      x-speakeasy-group: Attributes
      x-speakeasy-name-override: ListAttributeValues
  /api/v1/auth/introspect:
    get:
      description: Introspect returns the current user's principle_id, user_id and
        a list of roles, permissions, and enabled features.
      operationId: c1.api.auth.v1.Auth.Introspect
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.auth.v1.IntrospectResponse'
          description: IntrospectResponse contains information about the current user
            who is authenticated.
      summary: Introspect
      tags:
      - Auth
      x-speakeasy-group: Auth
      x-speakeasy-name-override: Introspect
  /api/v1/catalogs:
    get:
      description: Get a list of request catalogs.
      operationId: c1.api.requestcatalog.v1.RequestCatalogManagementService.List
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.requestcatalog.v1.RequestCatalogManagementServiceListResponse'
          description: Successful response
      summary: List
      tags:
      - Request Catalog
      x-speakeasy-group: RequestCatalogManagement
      x-speakeasy-name-override: List
    post:
      description: Creates a new request catalog.
      operationId: c1.api.requestcatalog.v1.RequestCatalogManagementService.Create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/c1.api.requestcatalog.v1.RequestCatalogManagementServiceCreateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.requestcatalog.v1.RequestCatalogManagementServiceGetResponse'
          description: The request catalog management service get response returns
            a request catalog view with the expanded items in the expanded array indicated
            by the expand mask in the request.
      summary: Create
      tags:
      - Request Catalog
      x-speakeasy-entity-operation: Catalog#create
      x-speakeasy-group: RequestCatalogManagement
      x-speakeasy-name-override: Create
  /api/v1/catalogs/{catalog_id}/requestable_entitlements:
    get:
      description: List entitlements in a catalog that are requestable.
      operationId: c1.api.requestcatalog.v1.RequestCatalogManagementService.ListEntitlementsPerCatalog
      parameters:
      - in: path
        name: catalog_id
        required: true
        schema:
          description: The catalogId field.
          type: string
      - in: query
        name: page_size
        schema:
          description: The pageSize field.
          format: int32
          type: number
      - in: query
        name: page_token
        schema:
          description: The pageToken field.
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.requestcatalog.v1.RequestCatalogManagementServiceListEntitlementsPerCatalogResponse'
          description: The RequestCatalogManagementServiceListEntitlementsPerCatalogResponse
            message contains a list of results and a nextPageToken if applicable.
      summary: List Entitlements Per Catalog
      tags:
      - Request Catalog
      x-speakeasy-group: RequestCatalogManagement
      x-speakeasy-name-override: ListEntitlementsPerCatalog
  /api/v1/catalogs/{catalog_id}/requestable_entries:
    delete:
      description: Remove requestable entitlements from a catalog.
      operationId: c1.api.requestcatalog.v1.RequestCatalogManagementService.RemoveAppEntitlements
      parameters:
      - in: path
        name: catalog_id
        required: true
        schema:
          description: The catalogId for the catalog to remove entitlements from.
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/c1.api.requestcatalog.v1.RequestCatalogManagementServiceRemoveAppEntitlementsRequestInput'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.requestcatalog.v1.RequestCatalogManagementServiceRemoveAppEntitlementsResponse'
          description: Empty response with a status code indicating success
      summary: Remove App Entitlements
      tags:
      - Request Catalog
      x-speakeasy-entity-operation: Catalog_Requestable_Entries#delete
      x-speakeasy-group: RequestCatalogManagement
      x-speakeasy-name-override: RemoveAppEntitlements
    post:
      description: Add requestable entitlements to a catalog.
      operationId: c1.api.requestcatalog.v1.RequestCatalogManagementService.AddAppEntitlements
      parameters:
      - in: path
        name: catalog_id
        required: true
        schema:
          description: The Id of the request catalog to add app entitlements to. This
            is a URL value.
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/c1.api.requestcatalog.v1.RequestCatalogManagementServiceAddAppEntitlementsRequestInput'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.requestcatalog.v1.RequestCatalogManagementServiceAddAppEntitlementsResponse'
          description: Empty response with a status code indicating success.
      summary: Add App Entitlements
      tags:
      - Request Catalog
      x-speakeasy-entity-operation: Catalog_Requestable_Entries#create
      x-speakeasy-group: RequestCatalogManagement
      x-speakeasy-name-override: AddAppEntitlements
  /api/v1/catalogs/{catalog_id}/visibility_bindings:
    delete:
      description: Remove visibility bindings (access entitlements) to a catalog.
      operationId: c1.api.requestcatalog.v1.RequestCatalogManagementService.RemoveAccessEntitlements
      parameters:
      - in: path
        name: catalog_id
        required: true
        schema:
          description: The catalogId for the catalog to remove access entitlements
            from.
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/c1.api.requestcatalog.v1.RequestCatalogManagementServiceRemoveAccessEntitlementsRequestInput'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.requestcatalog.v1.RequestCatalogManagementServiceRemoveAccessEntitlementsResponse'
          description: Empty response with a status code indicating success.
      summary: Remove Access Entitlements
      tags:
      - Request Catalog
      x-speakeasy-entity-operation: Catalog_Visibility_Bindings#delete
      x-speakeasy-group: RequestCatalogManagement
      x-speakeasy-name-override: RemoveAccessEntitlements
    post:
      description: Add visibility bindings (access entitlements) to a catalog.
      operationId: c1.api.requestcatalog.v1.RequestCatalogManagementService.AddAccessEntitlements
      parameters:
      - in: path
        name: catalog_id
        required: true
        schema:
          description: The Id of the request catalog to add access entitlements to.
            This is a URL value.
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/c1.api.requestcatalog.v1.RequestCatalogManagementServiceAddAccessEntitlementsRequestInput'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.requestcatalog.v1.RequestCatalogManagementServiceAddAccessEntitlementsResponse'
          description: Empty response with a status code indicating success.
      summary: Add Access Entitlements
      tags:
      - Request Catalog
      x-speakeasy-entity-operation: Catalog_Visibility_Bindings#create
      x-speakeasy-group: RequestCatalogManagement
      x-speakeasy-name-override: AddAccessEntitlements
  /api/v1/catalogs/{catalog_id}/visibility_entitlements:
    get:
      description: List visibility bindings (access entitlements) for a catalog.
      operationId: c1.api.requestcatalog.v1.RequestCatalogManagementService.ListEntitlementsForAccess
      parameters:
      - in: path
        name: catalog_id
        required: true
        schema:
          description: The catalogId field.
          type: string
      - in: query
        name: page_size
        schema:
          description: The pageSize field.
          format: int32
          type: number
      - in: query
        name: page_token
        schema:
          description: The pageToken field.
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.requestcatalog.v1.RequestCatalogManagementServiceListEntitlementsForAccessResponse'
          description: The RequestCatalogManagementServiceListEntitlementsForAccessResponse
            message contains a list of results and a nextPageToken if applicable.
      summary: List Entitlements For Access
      tags:
      - Request Catalog
      x-speakeasy-group: RequestCatalogManagement
      x-speakeasy-name-override: ListEntitlementsForAccess
  /api/v1/catalogs/{id}:
    delete:
      description: Delete a catalog.
      operationId: c1.api.requestcatalog.v1.RequestCatalogManagementService.Delete
      parameters:
      - in: path
        name: id
        required: true
        schema:
          description: The Id of the RequestCatalog to delete.
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/c1.api.requestcatalog.v1.RequestCatalogManagementServiceDeleteRequestInput'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.requestcatalog.v1.RequestCatalogManagementServiceDeleteResponse'
          description: Empty response with a status code indicating success.
      summary: Delete
      tags:
      - Request Catalog
      x-speakeasy-entity-operation: Catalog#delete
      x-speakeasy-group: RequestCatalogManagement
      x-speakeasy-name-override: Delete
    get:
      description: Get a catalog.
      operationId: c1.api.requestcatalog.v1.RequestCatalogManagementService.Get
      parameters:
      - in: path
        name: id
        required: true
        schema:
          description: The id field.
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.requestcatalog.v1.RequestCatalogManagementServiceGetResponse'
          description: The request catalog management service get response returns
            a request catalog view with the expanded items in the expanded array indicated
            by the expand mask in the request.
      summary: Get
      tags:
      - Request Catalog
      x-speakeasy-entity-operation: Catalog#read
      x-speakeasy-group: RequestCatalogManagement
      x-speakeasy-name-override: Get
    post:
      description: Update a catalog.
      operationId: c1.api.requestcatalog.v1.RequestCatalogManagementService.Update
      parameters:
      - in: path
        name: id
        required: true
        schema:
          description: The id of the request catalog.
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/c1.api.requestcatalog.v1.RequestCatalogManagementServiceUpdateRequestInput'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.requestcatalog.v1.RequestCatalogManagementServiceGetResponse'
          description: The request catalog management service get response returns
            a request catalog view with the expanded items in the expanded array indicated
            by the expand mask in the request.
      summary: Update
      tags:
      - Request Catalog
      x-speakeasy-entity-operation: Catalog#update
      x-speakeasy-group: RequestCatalogManagement
      x-speakeasy-name-override: Update
  /api/v1/directories:
    get:
      description: List directories.
      operationId: c1.api.directory.v1.DirectoryService.List
      parameters:
      - in: query
        name: page_size
        schema:
          description: The pageSize field.
          format: int32
          type: number
      - in: query
        name: page_token
        schema:
          description: The pageToken field.
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.directory.v1.DirectoryServiceListResponse'
          description: The DirectoryServiceListResponse message contains a list of
            results and a nextPageToken if applicable.
      summary: List
      tags:
      - Directory
      x-speakeasy-group: Directory
      x-speakeasy-name-override: List
    post:
      description: Create a directory.
      operationId: c1.api.directory.v1.DirectoryService.Create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/c1.api.directory.v1.DirectoryServiceCreateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.directory.v1.DirectoryServiceCreateResponse'
          description: The DirectoryServiceCreateResponse message.
      summary: Create
      tags:
      - Directory
      x-speakeasy-group: Directory
      x-speakeasy-name-override: Create
  /api/v1/directories/{app_id}:
    delete:
      description: Delete a directory by app_id.
      operationId: c1.api.directory.v1.DirectoryService.Delete
      parameters:
      - in: path
        name: app_id
        required: true
        schema:
          description: The app_id of the directory to delete.
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/c1.api.directory.v1.DirectoryServiceDeleteRequestInput'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.directory.v1.DirectoryServiceDeleteResponse'
          description: Empty response with a status code indicating success.
      summary: Delete
      tags:
      - Directory
      x-speakeasy-group: Directory
      x-speakeasy-name-override: Delete
    get:
      description: Get a directory by app_id.
      operationId: c1.api.directory.v1.DirectoryService.Get
      parameters:
      - in: path
        name: app_id
        required: true
        schema:
          description: The appId field.
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.directory.v1.DirectoryServiceGetResponse'
          description: "The Directory Service Get Response returns a directory view\
            \ with a directory and JSONPATHs indicating the\n location in the expanded\
            \ array that items are expanded as indicated by the expand mask in the\
            \ request."
      summary: Get
      tags:
      - Directory
      x-speakeasy-group: Directory
      x-speakeasy-name-override: Get
  /api/v1/iam/personal_clients:
    post:
      description: Create creates a new PersonalClient object for the current User.
      operationId: c1.api.iam.v1.PersonalClientService.Create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/c1.api.iam.v1.PersonalClientServiceCreateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.iam.v1.PersonalClientServiceCreateResponse'
          description: The PersonalClientServiceCreateResponse message contains the
            created personal client and client secret.
      summary: Create
      tags:
      - Personal Client
      x-speakeasy-group: PersonalClient
      x-speakeasy-name-override: Create
  /api/v1/iam/roles:
    get:
      description: List all roles for the current user.
      operationId: c1.api.iam.v1.Roles.List
      parameters:
      - in: query
        name: page_size
        schema:
          description: The pageSize field.
          format: int32
          type: number
      - in: query
        name: page_token
        schema:
          description: The pageToken field.
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.iam.v1.ListRolesResponse'
          description: The ListRolesResponse message contains a list of results and
            a nextPageToken if applicable.
      summary: List
      tags:
      - Role
      x-speakeasy-group: Roles
      x-speakeasy-name-override: List
  /api/v1/iam/roles/{role_id}:
    get:
      description: Get a role by id.
      operationId: c1.api.iam.v1.Roles.Get
      parameters:
      - in: path
        name: role_id
        required: true
        schema:
          description: The roleId field.
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.iam.v1.GetRolesResponse'
          description: The GetRolesResponse message contains the retrieved role.
      summary: Get
      tags:
      - Role
      x-speakeasy-group: Roles
      x-speakeasy-name-override: Get
    post:
      description: Update a role by passing a Role object.
      operationId: c1.api.iam.v1.Roles.Update
      parameters:
      - in: path
        name: role_id
        required: true
        schema:
          description: The id of the role.
          readOnly: true
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/c1.api.iam.v1.UpdateRoleRequestInput'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.iam.v1.UpdateRolesResponse'
          description: UpdateRolesResponse is the response message containing the
            updated role.
      summary: Update
      tags:
      - Role
      x-speakeasy-group: Roles
      x-speakeasy-name-override: Update
  /api/v1/policies:
    get:
      description: List policies.
      operationId: c1.api.policy.v1.Policies.List
      parameters:
      - in: query
        name: page_size
        schema:
          description: The pageSize field.
          format: int32
          type: number
      - in: query
        name: page_token
        schema:
          description: The pageToken field.
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.policy.v1.ListPolicyResponse'
          description: Successful response
      summary: List
      tags:
      - Policy
      x-speakeasy-group: Policies
      x-speakeasy-name-override: List
    post:
      description: Create a policy.
      operationId: c1.api.policy.v1.Policies.Create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/c1.api.policy.v1.CreatePolicyRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.policy.v1.CreatePolicyResponse'
          description: The CreatePolicyResponse message contains the created policy
            object.
      summary: Create
      tags:
      - Policy
      x-speakeasy-entity-operation: Policy#create
      x-speakeasy-group: Policies
      x-speakeasy-name-override: Create
  /api/v1/policies/{id}:
    delete:
      description: Delete a policy by ID.
      operationId: c1.api.policy.v1.Policies.Delete
      parameters:
      - in: path
        name: id
        required: true
        schema:
          description: The Id of the policy to delete.
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/c1.api.policy.v1.DeletePolicyRequestInput'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.policy.v1.DeletePolicyResponse'
          description: Empty response with a status code indicating success.
      summary: Delete
      tags:
      - Policy
      x-speakeasy-entity-operation: Policy#delete
      x-speakeasy-group: Policies
      x-speakeasy-name-override: Delete
    get:
      description: Get a policy by ID.
      operationId: c1.api.policy.v1.Policies.Get
      parameters:
      - in: path
        name: id
        required: true
        schema:
          description: The id field.
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.policy.v1.GetPolicyResponse'
          description: The GetPolicyResponse message contains the policy object.
      summary: Get
      tags:
      - Policy
      x-speakeasy-entity-operation: Policy#read
      x-speakeasy-group: Policies
      x-speakeasy-name-override: Get
    post:
      description: Update a policy by providing a policy object and an update mask.
      operationId: c1.api.policy.v1.Policies.Update
      parameters:
      - in: path
        name: id
        required: true
        schema:
          description: The ID of the Policy.
          readOnly: true
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/c1.api.policy.v1.UpdatePolicyRequestInput'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.policy.v1.UpdatePolicyResponse'
          description: The UpdatePolicyResponse message contains the updated policy
            object.
      summary: Update
      tags:
      - Policy
      x-speakeasy-entity-operation: Policy#update
      x-speakeasy-group: Policies
      x-speakeasy-name-override: Update
  /api/v1/policies/validate/cel:
    post:
      description: Validate policies
      operationId: c1.api.policy.v1.PolicyValidate.ValidateCEL
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/c1.api.policy.v1.ValidatePolicyCELRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.policy.v1.ValidatePolicyCELResponse'
          description: Successful response
      summary: Validate Cel
      tags:
      - Policy
      x-speakeasy-group: PolicyValidate
      x-speakeasy-name-override: ValidateCEL
  /api/v1/search/app_resource_types:
    post:
      description: Search app resources based on filters specified in the request
        body.
      operationId: c1.api.app.v1.AppResourceSearch.SearchAppResourceTypes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/c1.api.app.v1.SearchAppResourceTypesRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.app.v1.SearchAppResourceTypesResponse'
          description: The SearchAppResourceTypesResponse message contains a list
            of results and a nextPageToken if applicable.
      summary: Search App Resource Types
      tags:
      - App Resource
      x-speakeasy-group: AppResourceSearch
      x-speakeasy-name-override: SearchAppResourceTypes
  /api/v1/search/apps:
    post:
      description: Search apps based on filters specified in the request body.
      operationId: c1.api.app.v1.AppSearch.Search
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/c1.api.app.v1.SearchAppsRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.app.v1.SearchAppsResponse'
          description: The SearchAppsResponse message contains a list of results and
            a nextPageToken if applicable.
      summary: Search
      tags:
      - App
      x-speakeasy-group: AppSearch
      x-speakeasy-name-override: Search
  /api/v1/search/attributes:
    post:
      description: Search attributes based on filters specified in the request body.
      operationId: c1.api.attribute.v1.AttributeSearch.SearchAttributeValues
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/c1.api.attribute.v1.SearchAttributeValuesRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.attribute.v1.SearchAttributeValuesResponse'
          description: SearchAttributeValuesResponse is the response for searching
            AttributeValues.
      summary: Search Attribute Values
      tags:
      - Attribute
      x-speakeasy-group: AttributeSearch
      x-speakeasy-name-override: SearchAttributeValues
  /api/v1/search/entitlements:
    post:
      description: Search app entitlements based on filters specified in the request
        body.
      operationId: c1.api.app.v1.AppEntitlementSearchService.Search
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/c1.api.app.v1.AppEntitlementSearchServiceSearchRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.app.v1.AppEntitlementSearchServiceSearchResponse'
          description: Successful response
      summary: Search
      tags:
      - App Entitlement
      x-speakeasy-group: AppEntitlementSearch
      x-speakeasy-name-override: Search
  /api/v1/search/policies:
    post:
      description: Search policies based on filters specified in the request body.
      operationId: c1.api.policy.v1.PolicySearch.Search
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/c1.api.policy.v1.SearchPoliciesRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.policy.v1.ListPolicyResponse'
          description: Successful response
      summary: Search
      tags:
      - Policy
      x-speakeasy-group: PolicySearch
      x-speakeasy-name-override: Search
  /api/v1/search/request_catalog/entitlements:
    post:
      description: Search request catalogs based on filters specified in the request
        body.
      operationId: c1.api.requestcatalog.v1.RequestCatalogSearchService.SearchEntitlements
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/c1.api.requestcatalog.v1.RequestCatalogSearchServiceSearchEntitlementsRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.requestcatalog.v1.RequestCatalogSearchServiceSearchEntitlementsResponse'
          description: The RequestCatalogSearchServiceSearchEntitlementsResponse message
            contains a list of results and a nextPageToken if applicable.
      summary: Search Entitlements
      tags:
      - Request Catalog
      x-speakeasy-group: RequestCatalogSearch
      x-speakeasy-name-override: SearchEntitlements
  /api/v1/search/tasks:
    post:
      description: Search tasks based on filters specified in the request body.
      operationId: c1.api.task.v1.TaskSearchService.Search
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/c1.api.task.v1.TaskSearchRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.task.v1.TaskSearchResponse'
          description: The TaskSearchResponse message contains a list of results and
            a nextPageToken if applicable.
      summary: Search
      tags:
      - Task
      x-speakeasy-group: TaskSearch
      x-speakeasy-name-override: Search
  /api/v1/search/users:
    post:
      description: Search users based on filters specified in the request body.
      operationId: c1.api.user.v1.UserSearch.Search
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/c1.api.user.v1.SearchUsersRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.user.v1.SearchUsersResponse'
          description: Successful response
      summary: Search
      tags:
      - User
      x-speakeasy-group: UserSearch
      x-speakeasy-name-override: Search
  /api/v1/task/grant:
    post:
      description: Create a grant task
      operationId: c1.api.task.v1.TaskService.CreateGrantTask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/c1.api.task.v1.TaskServiceCreateGrantRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.task.v1.TaskServiceCreateGrantResponse'
          description: The TaskServiceCreateGrantResponse returns a task view which
            has a task including JSONPATHs to the expanded items in the expanded array.
      summary: Create Grant Task
      tags:
      - Task
      x-speakeasy-group: Task
      x-speakeasy-name-override: CreateGrantTask
  /api/v1/task/revoke:
    post:
      description: Create a revoke task
      operationId: c1.api.task.v1.TaskService.CreateRevokeTask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/c1.api.task.v1.TaskServiceCreateRevokeRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.task.v1.TaskServiceCreateRevokeResponse'
          description: The TaskServiceCreateRevokeResponse returns a task view which
            has a task including JSONPATHs to the expanded items in the expanded array.
      summary: Create Revoke Task
      tags:
      - Task
      x-speakeasy-group: Task
      x-speakeasy-name-override: CreateRevokeTask
  /api/v1/tasks/{id}:
    get:
      description: Get a task by ID
      operationId: c1.api.task.v1.TaskService.Get
      parameters:
      - in: path
        name: id
        required: true
        schema:
          description: The id field.
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.task.v1.TaskServiceGetResponse'
          description: The TaskServiceGetResponse returns a task view which has a
            task including JSONPATHs to the expanded items in the expanded array.
      summary: Get
      tags:
      - Task
      x-speakeasy-group: Task
      x-speakeasy-name-override: Get
  /api/v1/tasks/{task_id}/action/approve:
    post:
      description: Invokes the c1.api.task.v1.TaskActionsService.Approve method.
      operationId: c1.api.task.v1.TaskActionsService.Approve
      parameters:
      - in: path
        name: task_id
        required: true
        schema:
          description: The ID of the task to approve.
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/c1.api.task.v1.TaskActionsServiceApproveRequestInput'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.task.v1.TaskActionsServiceApproveResponse'
          description: The TaskActionsServiceApproveResponse returns a task view with
            paths indicating the location of expanded items in the array.
      summary: Approve
      tags:
      - Task
      x-speakeasy-group: TaskActions
      x-speakeasy-name-override: Approve
  /api/v1/tasks/{task_id}/action/comment:
    post:
      description: Invokes the c1.api.task.v1.TaskActionsService.Comment method.
      operationId: c1.api.task.v1.TaskActionsService.Comment
      parameters:
      - in: path
        name: task_id
        required: true
        schema:
          description: The ID of the task to be commented on
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/c1.api.task.v1.TaskActionsServiceCommentRequestInput'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.task.v1.TaskActionsServiceCommentResponse'
          description: Task actions service comment response returns the task view
            inluding the expanded array of items that are indicated by the expand
            mask on the request.
      summary: Comment
      tags:
      - Task
      x-speakeasy-group: TaskActions
      x-speakeasy-name-override: Comment
  /api/v1/tasks/{task_id}/action/deny:
    post:
      description: Invokes the c1.api.task.v1.TaskActionsService.Deny method.
      operationId: c1.api.task.v1.TaskActionsService.Deny
      parameters:
      - in: path
        name: task_id
        required: true
        schema:
          description: The ID of the task to be denied.
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/c1.api.task.v1.TaskActionsServiceDenyRequestInput'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.task.v1.TaskActionsServiceDenyResponse'
          description: The TaskActionsServiceDenyResponse returns a task view with
            paths indicating the location of expanded items in the array.
      summary: Deny
      tags:
      - Task
      x-speakeasy-group: TaskActions
      x-speakeasy-name-override: Deny
  /api/v1/tasks/{task_id}/action/escalate:
    post:
      description: Invokes the c1.api.task.v1.TaskActionsService.EscalateToEmergencyAccess
        method.
      operationId: c1.api.task.v1.TaskActionsService.EscalateToEmergencyAccess
      parameters:
      - in: path
        name: task_id
        required: true
        schema:
          description: The taskId field.
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/c1.api.task.v1.TaskActionsServiceEscalateToEmergencyAccessRequestInput'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.task.v1.TaskServiceActionResponse'
          description: Successful response
      summary: Escalate To Emergency Access
      tags:
      - Task
      x-speakeasy-group: TaskActions
      x-speakeasy-name-override: EscalateToEmergencyAccess
  /api/v1/tasks/{task_id}/action/restart:
    post:
      description: Invokes the c1.api.task.v1.TaskActionsService.Restart method.
      operationId: c1.api.task.v1.TaskActionsService.Restart
      parameters:
      - in: path
        name: task_id
        required: true
        schema:
          description: The ID of the task to restart.
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/c1.api.task.v1.TaskActionsServiceRestartRequestInput'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.task.v1.TaskActionsServiceRestartResponse'
          description: Successful response
      summary: Restart
      tags:
      - Task
      x-speakeasy-group: TaskActions
      x-speakeasy-name-override: Restart
  /api/v1/users:
    get:
      description: List users.
      operationId: c1.api.user.v1.UserService.List
      parameters:
      - in: query
        name: page_size
        schema:
          description: The pageSize field.
          format: int32
          type: number
      - in: query
        name: page_token
        schema:
          description: The pageToken field.
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.user.v1.UserServiceListResponse'
          description: The UserServiceListResponse message contains a list of results
            and a nextPageToken if applicable.
      summary: List
      tags:
      - User
      x-speakeasy-group: User
      x-speakeasy-name-override: List
  /api/v1/users/{id}:
    get:
      description: Get a user by ID.
      operationId: c1.api.user.v1.UserService.Get
      parameters:
      - in: path
        name: id
        required: true
        schema:
          description: The id field.
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/c1.api.user.v1.UserServiceGetResponse'
          description: The UserServiceGetResponse returns a user view which has a
            user including JSONPATHs to the expanded items in the expanded array.
      summary: Get
      tags:
      - User
      x-speakeasy-group: User
      x-speakeasy-name-override: Get
security:
- bearerAuth: []
  oauth: []
servers:
- description: The ConductorOne API server for the current tenant.
  url: https://{tenantDomain}.conductor.one
  variables:
    tenantDomain:
      default: example
      description: The domain of the tenant to use for this request.
