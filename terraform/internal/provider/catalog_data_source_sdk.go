// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package provider

import (
	"conductorone/internal/sdk/pkg/models/shared"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"time"
)

func (r *CatalogDataSourceModel) RefreshFromGetResponse(resp *shared.RequestCatalog) {
	r.AccessEntitlements = nil
	for _, accessEntitlementsItem := range resp.AccessEntitlements {
		var accessEntitlements1 AppEntitlement
		if accessEntitlementsItem.Alias != nil {
			accessEntitlements1.Alias = types.StringValue(*accessEntitlementsItem.Alias)
		} else {
			accessEntitlements1.Alias = types.StringNull()
		}
		if accessEntitlementsItem.AppID != nil {
			accessEntitlements1.AppID = types.StringValue(*accessEntitlementsItem.AppID)
		} else {
			accessEntitlements1.AppID = types.StringNull()
		}
		if accessEntitlementsItem.AppResourceID != nil {
			accessEntitlements1.AppResourceID = types.StringValue(*accessEntitlementsItem.AppResourceID)
		} else {
			accessEntitlements1.AppResourceID = types.StringNull()
		}
		if accessEntitlementsItem.AppResourceTypeID != nil {
			accessEntitlements1.AppResourceTypeID = types.StringValue(*accessEntitlementsItem.AppResourceTypeID)
		} else {
			accessEntitlements1.AppResourceTypeID = types.StringNull()
		}
		if accessEntitlementsItem.CertifyPolicyID != nil {
			accessEntitlements1.CertifyPolicyID = types.StringValue(*accessEntitlementsItem.CertifyPolicyID)
		} else {
			accessEntitlements1.CertifyPolicyID = types.StringNull()
		}
		accessEntitlements1.ComplianceFrameworkValueIds = nil
		for _, v := range accessEntitlementsItem.ComplianceFrameworkValueIds {
			accessEntitlements1.ComplianceFrameworkValueIds = append(accessEntitlements1.ComplianceFrameworkValueIds, types.StringValue(v))
		}
		if accessEntitlementsItem.CreatedAt != nil {
			accessEntitlements1.CreatedAt = types.StringValue(accessEntitlementsItem.CreatedAt.Format(time.RFC3339Nano))
		} else {
			accessEntitlements1.CreatedAt = types.StringNull()
		}
		if accessEntitlementsItem.DeletedAt != nil {
			accessEntitlements1.DeletedAt = types.StringValue(accessEntitlementsItem.DeletedAt.Format(time.RFC3339Nano))
		} else {
			accessEntitlements1.DeletedAt = types.StringNull()
		}
		if accessEntitlementsItem.Description != nil {
			accessEntitlements1.Description = types.StringValue(*accessEntitlementsItem.Description)
		} else {
			accessEntitlements1.Description = types.StringNull()
		}
		if accessEntitlementsItem.DisplayName != nil {
			accessEntitlements1.DisplayName = types.StringValue(*accessEntitlementsItem.DisplayName)
		} else {
			accessEntitlements1.DisplayName = types.StringNull()
		}
		if accessEntitlementsItem.DurationGrant != nil {
			accessEntitlements1.DurationGrant = types.StringValue(*accessEntitlementsItem.DurationGrant)
		} else {
			accessEntitlements1.DurationGrant = types.StringNull()
		}
		if accessEntitlementsItem.DurationUnset == nil {
			accessEntitlements1.DurationUnset = nil
		} else {
			accessEntitlements1.DurationUnset = &DurationUnset{}
		}
		if accessEntitlementsItem.EmergencyGrantEnabled != nil {
			accessEntitlements1.EmergencyGrantEnabled = types.BoolValue(*accessEntitlementsItem.EmergencyGrantEnabled)
		} else {
			accessEntitlements1.EmergencyGrantEnabled = types.BoolNull()
		}
		if accessEntitlementsItem.EmergencyGrantPolicyID != nil {
			accessEntitlements1.EmergencyGrantPolicyID = types.StringValue(*accessEntitlementsItem.EmergencyGrantPolicyID)
		} else {
			accessEntitlements1.EmergencyGrantPolicyID = types.StringNull()
		}
		if accessEntitlementsItem.GrantCount != nil {
			accessEntitlements1.GrantCount = types.StringValue(*accessEntitlementsItem.GrantCount)
		} else {
			accessEntitlements1.GrantCount = types.StringNull()
		}
		if accessEntitlementsItem.GrantPolicyID != nil {
			accessEntitlements1.GrantPolicyID = types.StringValue(*accessEntitlementsItem.GrantPolicyID)
		} else {
			accessEntitlements1.GrantPolicyID = types.StringNull()
		}
		if accessEntitlementsItem.ID != nil {
			accessEntitlements1.ID = types.StringValue(*accessEntitlementsItem.ID)
		} else {
			accessEntitlements1.ID = types.StringNull()
		}
		if accessEntitlementsItem.ProvisionPolicy == nil {
			accessEntitlements1.ProvisionPolicy = nil
		} else {
			accessEntitlements1.ProvisionPolicy = &ProvisionPolicy{}
			if accessEntitlementsItem.ProvisionPolicy.ConnectorProvision == nil {
				accessEntitlements1.ProvisionPolicy.ConnectorProvision = nil
			} else {
				accessEntitlements1.ProvisionPolicy.ConnectorProvision = &DurationUnset{}
			}
			if accessEntitlementsItem.ProvisionPolicy.DelegatedProvision == nil {
				accessEntitlements1.ProvisionPolicy.DelegatedProvision = nil
			} else {
				accessEntitlements1.ProvisionPolicy.DelegatedProvision = &DelegatedProvision{}
				if accessEntitlementsItem.ProvisionPolicy.DelegatedProvision.AppID != nil {
					accessEntitlements1.ProvisionPolicy.DelegatedProvision.AppID = types.StringValue(*accessEntitlementsItem.ProvisionPolicy.DelegatedProvision.AppID)
				} else {
					accessEntitlements1.ProvisionPolicy.DelegatedProvision.AppID = types.StringNull()
				}
				if accessEntitlementsItem.ProvisionPolicy.DelegatedProvision.EntitlementID != nil {
					accessEntitlements1.ProvisionPolicy.DelegatedProvision.EntitlementID = types.StringValue(*accessEntitlementsItem.ProvisionPolicy.DelegatedProvision.EntitlementID)
				} else {
					accessEntitlements1.ProvisionPolicy.DelegatedProvision.EntitlementID = types.StringNull()
				}
				if accessEntitlementsItem.ProvisionPolicy.DelegatedProvision.Implicit != nil {
					accessEntitlements1.ProvisionPolicy.DelegatedProvision.Implicit = types.BoolValue(*accessEntitlementsItem.ProvisionPolicy.DelegatedProvision.Implicit)
				} else {
					accessEntitlements1.ProvisionPolicy.DelegatedProvision.Implicit = types.BoolNull()
				}
			}
			if accessEntitlementsItem.ProvisionPolicy.ManualProvision == nil {
				accessEntitlements1.ProvisionPolicy.ManualProvision = nil
			} else {
				accessEntitlements1.ProvisionPolicy.ManualProvision = &ManualProvision{}
				if accessEntitlementsItem.ProvisionPolicy.ManualProvision.Instructions != nil {
					accessEntitlements1.ProvisionPolicy.ManualProvision.Instructions = types.StringValue(*accessEntitlementsItem.ProvisionPolicy.ManualProvision.Instructions)
				} else {
					accessEntitlements1.ProvisionPolicy.ManualProvision.Instructions = types.StringNull()
				}
				accessEntitlements1.ProvisionPolicy.ManualProvision.UserIds = nil
				for _, v := range accessEntitlementsItem.ProvisionPolicy.ManualProvision.UserIds {
					accessEntitlements1.ProvisionPolicy.ManualProvision.UserIds = append(accessEntitlements1.ProvisionPolicy.ManualProvision.UserIds, types.StringValue(v))
				}
			}
		}
		if accessEntitlementsItem.RevokePolicyID != nil {
			accessEntitlements1.RevokePolicyID = types.StringValue(*accessEntitlementsItem.RevokePolicyID)
		} else {
			accessEntitlements1.RevokePolicyID = types.StringNull()
		}
		if accessEntitlementsItem.RiskLevelValueID != nil {
			accessEntitlements1.RiskLevelValueID = types.StringValue(*accessEntitlementsItem.RiskLevelValueID)
		} else {
			accessEntitlements1.RiskLevelValueID = types.StringNull()
		}
		if accessEntitlementsItem.Slug != nil {
			accessEntitlements1.Slug = types.StringValue(*accessEntitlementsItem.Slug)
		} else {
			accessEntitlements1.Slug = types.StringNull()
		}
		if accessEntitlementsItem.SystemBuiltin != nil {
			accessEntitlements1.SystemBuiltin = types.BoolValue(*accessEntitlementsItem.SystemBuiltin)
		} else {
			accessEntitlements1.SystemBuiltin = types.BoolNull()
		}
		if accessEntitlementsItem.UpdatedAt != nil {
			accessEntitlements1.UpdatedAt = types.StringValue(accessEntitlementsItem.UpdatedAt.Format(time.RFC3339Nano))
		} else {
			accessEntitlements1.UpdatedAt = types.StringNull()
		}
		r.AccessEntitlements = append(r.AccessEntitlements, accessEntitlements1)
	}
	r.AppIds = nil
	for _, v := range resp.AppIds {
		r.AppIds = append(r.AppIds, types.StringValue(v))
	}
	if resp.CreatedAt != nil {
		r.CreatedAt = types.StringValue(resp.CreatedAt.Format(time.RFC3339Nano))
	} else {
		r.CreatedAt = types.StringNull()
	}
	if resp.CreatedByUserID != nil {
		r.CreatedByUserID = types.StringValue(*resp.CreatedByUserID)
	} else {
		r.CreatedByUserID = types.StringNull()
	}
	if resp.DeletedAt != nil {
		r.DeletedAt = types.StringValue(resp.DeletedAt.Format(time.RFC3339Nano))
	} else {
		r.DeletedAt = types.StringNull()
	}
	if resp.Description != nil {
		r.Description = types.StringValue(*resp.Description)
	} else {
		r.Description = types.StringNull()
	}
	if resp.DisplayName != nil {
		r.DisplayName = types.StringValue(*resp.DisplayName)
	} else {
		r.DisplayName = types.StringNull()
	}
	if resp.ID != nil {
		r.ID = types.StringValue(*resp.ID)
	} else {
		r.ID = types.StringNull()
	}
	if resp.Published != nil {
		r.Published = types.BoolValue(*resp.Published)
	} else {
		r.Published = types.BoolNull()
	}
	if resp.UpdatedAt != nil {
		r.UpdatedAt = types.StringValue(resp.UpdatedAt.Format(time.RFC3339Nano))
	} else {
		r.UpdatedAt = types.StringNull()
	}
	if resp.VisibleToEveryone != nil {
		r.VisibleToEveryone = types.BoolValue(*resp.VisibleToEveryone)
	} else {
		r.VisibleToEveryone = types.BoolNull()
	}
}
