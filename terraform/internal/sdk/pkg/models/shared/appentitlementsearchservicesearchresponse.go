// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"conductorone/internal/sdk/pkg/utils"
)

// Expanded - Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
type Expanded struct {
	// The type of the serialized message.
	AtType               *string     `json:"@type,omitempty"`
	AdditionalProperties interface{} `additionalProperties:"true" json:"-"`
}

func (e Expanded) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(e, "", false)
}

func (e *Expanded) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &e, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *Expanded) GetAtType() *string {
	if o == nil {
		return nil
	}
	return o.AtType
}

func (o *Expanded) GetAdditionalProperties() interface{} {
	if o == nil {
		return nil
	}
	return o.AdditionalProperties
}

// The AppEntitlementSearchServiceSearchResponse message.
type AppEntitlementSearchServiceSearchResponse struct {
	// Indicates one value of a facet.
	Facets *Facets `json:"facets,omitempty"`
	// List of related objects.
	Expanded []Expanded `json:"expanded,omitempty"`
	// List of app entitlement view objects.
	List []AppEntitlementView `json:"list,omitempty"`
	// The nextPageToken is shown for the next page if the number of results is larger than the max page size. The server returns one page of results and the nextPageToken until all results are retreived. To retrieve the next page, use the same request and append a pageToken field with the value of nextPageToken shown on the previous page.
	NextPageToken *string `json:"nextPageToken,omitempty"`
}

func (o *AppEntitlementSearchServiceSearchResponse) GetFacets() *Facets {
	if o == nil {
		return nil
	}
	return o.Facets
}

func (o *AppEntitlementSearchServiceSearchResponse) GetExpanded() []Expanded {
	if o == nil {
		return nil
	}
	return o.Expanded
}

func (o *AppEntitlementSearchServiceSearchResponse) GetList() []AppEntitlementView {
	if o == nil {
		return nil
	}
	return o.List
}

func (o *AppEntitlementSearchServiceSearchResponse) GetNextPageToken() *string {
	if o == nil {
		return nil
	}
	return o.NextPageToken
}
