// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"conductorone/internal/sdk/pkg/utils"
)

// UserServiceGetResponseExpanded - Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
type UserServiceGetResponseExpanded struct {
	// The type of the serialized message.
	AtType               *string     `json:"@type,omitempty"`
	AdditionalProperties interface{} `additionalProperties:"true" json:"-"`
}

func (u UserServiceGetResponseExpanded) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(u, "", false)
}

func (u *UserServiceGetResponseExpanded) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &u, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *UserServiceGetResponseExpanded) GetAtType() *string {
	if o == nil {
		return nil
	}
	return o.AtType
}

func (o *UserServiceGetResponseExpanded) GetAdditionalProperties() interface{} {
	if o == nil {
		return nil
	}
	return o.AdditionalProperties
}

// The UserServiceGetResponse returns a user view which has a user including JSONPATHs to the expanded items in the expanded array.
type UserServiceGetResponse struct {
	// The UserView object provides a user response object, as well as JSONPATHs to related objects provided by expanders.
	UserView *UserView `json:"userView,omitempty"`
	// List of serialized related objects.
	Expanded []UserServiceGetResponseExpanded `json:"expanded,omitempty"`
}

func (o *UserServiceGetResponse) GetUserView() *UserView {
	if o == nil {
		return nil
	}
	return o.UserView
}

func (o *UserServiceGetResponse) GetExpanded() []UserServiceGetResponseExpanded {
	if o == nil {
		return nil
	}
	return o.Expanded
}
