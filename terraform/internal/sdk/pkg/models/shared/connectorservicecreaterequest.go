// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"conductorone/internal/sdk/pkg/utils"
)

// ConnectorServiceCreateRequestConfig - Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
type ConnectorServiceCreateRequestConfig struct {
	// The type of the serialized message.
	AtType               *string     `json:"@type,omitempty"`
	AdditionalProperties interface{} `additionalProperties:"true" json:"-"`
}

func (c ConnectorServiceCreateRequestConfig) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *ConnectorServiceCreateRequestConfig) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ConnectorServiceCreateRequestConfig) GetAtType() *string {
	if o == nil {
		return nil
	}
	return o.AtType
}

func (o *ConnectorServiceCreateRequestConfig) GetAdditionalProperties() interface{} {
	if o == nil {
		return nil
	}
	return o.AdditionalProperties
}

// The ConnectorServiceCreateRequest message.
type ConnectorServiceCreateRequest struct {
	// The ConnectorExpandMask is used to expand related objects on a connector.
	ConnectorExpandMask *ConnectorExpandMask `json:"expandMask,omitempty"`
	// The catalogId field.
	CatalogID *string `json:"catalogId,omitempty"`
	// Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
	Config *ConnectorServiceCreateRequestConfig `json:"config,omitempty"`
	// The description field.
	Description *string `json:"description,omitempty"`
	// The userIds field.
	UserIds []string `json:"userIds,omitempty"`
}

func (o *ConnectorServiceCreateRequest) GetConnectorExpandMask() *ConnectorExpandMask {
	if o == nil {
		return nil
	}
	return o.ConnectorExpandMask
}

func (o *ConnectorServiceCreateRequest) GetCatalogID() *string {
	if o == nil {
		return nil
	}
	return o.CatalogID
}

func (o *ConnectorServiceCreateRequest) GetConfig() *ConnectorServiceCreateRequestConfig {
	if o == nil {
		return nil
	}
	return o.Config
}

func (o *ConnectorServiceCreateRequest) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *ConnectorServiceCreateRequest) GetUserIds() []string {
	if o == nil {
		return nil
	}
	return o.UserIds
}
