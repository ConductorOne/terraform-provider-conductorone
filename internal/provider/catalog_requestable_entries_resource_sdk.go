// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package provider

import (
	"github.com/speakeasy/terraform-provider-terraform/internal/sdk/models/shared"
)

func (r *CatalogRequestableEntriesResourceModel) ToSharedRequestCatalogManagementServiceAddAppEntitlementsRequest() *shared.RequestCatalogManagementServiceAddAppEntitlementsRequest {
	var appEntitlements []shared.AppEntitlementRef = nil
	for _, appEntitlementsItem := range r.AppEntitlements {
		appID := new(string)
		if !appEntitlementsItem.AppID.IsUnknown() && !appEntitlementsItem.AppID.IsNull() {
			*appID = appEntitlementsItem.AppID.ValueString()
		} else {
			appID = nil
		}
		id := new(string)
		if !appEntitlementsItem.ID.IsUnknown() && !appEntitlementsItem.ID.IsNull() {
			*id = appEntitlementsItem.ID.ValueString()
		} else {
			id = nil
		}
		appEntitlements = append(appEntitlements, shared.AppEntitlementRef{
			AppID: appID,
			ID:    id,
		})
	}
	out := shared.RequestCatalogManagementServiceAddAppEntitlementsRequest{
		AppEntitlements: appEntitlements,
	}
	return &out
}

func (r *CatalogRequestableEntriesResourceModel) RefreshFromSharedRequestCatalogManagementServiceAddAppEntitlementsResponse(resp *shared.RequestCatalogManagementServiceAddAppEntitlementsResponse) {
	if resp != nil {
	}
}

func (r *CatalogRequestableEntriesResourceModel) ToSharedRequestCatalogManagementServiceRemoveAppEntitlementsRequest() *shared.RequestCatalogManagementServiceRemoveAppEntitlementsRequest {
	var appEntitlements []shared.AppEntitlementRef = nil
	for _, appEntitlementsItem := range r.AppEntitlements {
		appID := new(string)
		if !appEntitlementsItem.AppID.IsUnknown() && !appEntitlementsItem.AppID.IsNull() {
			*appID = appEntitlementsItem.AppID.ValueString()
		} else {
			appID = nil
		}
		id := new(string)
		if !appEntitlementsItem.ID.IsUnknown() && !appEntitlementsItem.ID.IsNull() {
			*id = appEntitlementsItem.ID.ValueString()
		} else {
			id = nil
		}
		appEntitlements = append(appEntitlements, shared.AppEntitlementRef{
			AppID: appID,
			ID:    id,
		})
	}
	out := shared.RequestCatalogManagementServiceRemoveAppEntitlementsRequest{
		AppEntitlements: appEntitlements,
	}
	return &out
}
