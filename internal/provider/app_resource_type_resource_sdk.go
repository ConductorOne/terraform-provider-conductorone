// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package provider

import (
	"github.com/conductorone/terraform-provider-conductorone/internal/sdk/models/shared"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"time"
)

func (r *AppResourceTypeResourceModel) ToSharedCreateManuallyManagedResourceTypeRequest() *shared.CreateManuallyManagedResourceTypeRequest {
	var displayName string
	displayName = r.DisplayName.ValueString()

	resourceType := shared.ResourceType(r.ResourceType.ValueString())
	out := shared.CreateManuallyManagedResourceTypeRequest{
		DisplayName:  displayName,
		ResourceType: resourceType,
	}
	return &out
}

func (r *AppResourceTypeResourceModel) RefreshFromSharedAppResourceType(resp *shared.AppResourceType) {
	if resp != nil {
		r.AppID = types.StringPointerValue(resp.AppID)
		if resp.CreatedAt != nil {
			r.CreatedAt = types.StringValue(resp.CreatedAt.Format(time.RFC3339Nano))
		} else {
			r.CreatedAt = types.StringNull()
		}
		if resp.DeletedAt != nil {
			r.DeletedAt = types.StringValue(resp.DeletedAt.Format(time.RFC3339Nano))
		} else {
			r.DeletedAt = types.StringNull()
		}
		r.DisplayName = types.StringPointerValue(resp.DisplayName)
		r.ID = types.StringPointerValue(resp.ID)
		if resp.TraitIds != nil {
			r.TraitIds = make([]types.String, 0, len(resp.TraitIds))
			for _, v := range resp.TraitIds {
				r.TraitIds = append(r.TraitIds, types.StringValue(v))
			}
		}
		if resp.UpdatedAt != nil {
			r.UpdatedAt = types.StringValue(resp.UpdatedAt.Format(time.RFC3339Nano))
		} else {
			r.UpdatedAt = types.StringNull()
		}
	}
}

func (r *AppResourceTypeResourceModel) ToSharedAppResourceTypeInput() *shared.AppResourceTypeInput {
	displayName := new(string)
	if !r.DisplayName.IsUnknown() && !r.DisplayName.IsNull() {
		*displayName = r.DisplayName.ValueString()
	} else {
		displayName = nil
	}
	var traitIds []string = []string{}
	for _, traitIdsItem := range r.TraitIds {
		traitIds = append(traitIds, traitIdsItem.ValueString())
	}
	out := shared.AppResourceTypeInput{
		DisplayName: displayName,
		TraitIds:    traitIds,
	}
	return &out
}
