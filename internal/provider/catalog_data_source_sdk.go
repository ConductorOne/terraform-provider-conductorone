// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package provider

import (
	"github.com/hashicorp/terraform-plugin-framework/types"
	tfTypes "github.com/speakeasy/terraform-provider-terraform/internal/provider/types"
	"github.com/speakeasy/terraform-provider-terraform/internal/sdk/models/shared"
	"time"
)

func (r *CatalogDataSourceModel) RefreshFromSharedRequestCatalog(resp *shared.RequestCatalog) {
	if resp != nil {
		if len(r.AccessEntitlements) > len(resp.AccessEntitlements) {
			r.AccessEntitlements = r.AccessEntitlements[:len(resp.AccessEntitlements)]
		}
		for accessEntitlementsCount, accessEntitlementsItem := range resp.AccessEntitlements {
			var accessEntitlements1 tfTypes.AppEntitlement
			accessEntitlements1.Alias = types.StringPointerValue(accessEntitlementsItem.Alias)
			accessEntitlements1.AppID = types.StringPointerValue(accessEntitlementsItem.AppID)
			accessEntitlements1.AppResourceID = types.StringPointerValue(accessEntitlementsItem.AppResourceID)
			accessEntitlements1.AppResourceTypeID = types.StringPointerValue(accessEntitlementsItem.AppResourceTypeID)
			accessEntitlements1.CertifyPolicyID = types.StringPointerValue(accessEntitlementsItem.CertifyPolicyID)
			accessEntitlements1.ComplianceFrameworkValueIds = []types.String{}
			for _, v := range accessEntitlementsItem.ComplianceFrameworkValueIds {
				accessEntitlements1.ComplianceFrameworkValueIds = append(accessEntitlements1.ComplianceFrameworkValueIds, types.StringValue(v))
			}
			if accessEntitlementsItem.CreatedAt != nil {
				accessEntitlements1.CreatedAt = types.StringValue(accessEntitlementsItem.CreatedAt.Format(time.RFC3339Nano))
			} else {
				accessEntitlements1.CreatedAt = types.StringNull()
			}
			if accessEntitlementsItem.DeletedAt != nil {
				accessEntitlements1.DeletedAt = types.StringValue(accessEntitlementsItem.DeletedAt.Format(time.RFC3339Nano))
			} else {
				accessEntitlements1.DeletedAt = types.StringNull()
			}
			accessEntitlements1.Description = types.StringPointerValue(accessEntitlementsItem.Description)
			accessEntitlements1.DisplayName = types.StringPointerValue(accessEntitlementsItem.DisplayName)
			accessEntitlements1.DurationGrant = types.StringPointerValue(accessEntitlementsItem.DurationGrant)
			if accessEntitlementsItem.DurationUnset == nil {
				accessEntitlements1.DurationUnset = nil
			} else {
				accessEntitlements1.DurationUnset = &tfTypes.Three{}
			}
			accessEntitlements1.EmergencyGrantEnabled = types.BoolPointerValue(accessEntitlementsItem.EmergencyGrantEnabled)
			accessEntitlements1.EmergencyGrantPolicyID = types.StringPointerValue(accessEntitlementsItem.EmergencyGrantPolicyID)
			accessEntitlements1.GrantCount = types.StringPointerValue(accessEntitlementsItem.GrantCount)
			accessEntitlements1.GrantPolicyID = types.StringPointerValue(accessEntitlementsItem.GrantPolicyID)
			accessEntitlements1.ID = types.StringPointerValue(accessEntitlementsItem.ID)
			accessEntitlements1.IsManuallyManaged = types.BoolPointerValue(accessEntitlementsItem.IsManuallyManaged)
			if accessEntitlementsItem.ProvisionPolicy == nil {
				accessEntitlements1.ProvisionPolicy = nil
			} else {
				accessEntitlements1.ProvisionPolicy = &tfTypes.ProvisionPolicy{}
				if accessEntitlementsItem.ProvisionPolicy.ConnectorProvision == nil {
					accessEntitlements1.ProvisionPolicy.ConnectorProvision = nil
				} else {
					accessEntitlements1.ProvisionPolicy.ConnectorProvision = &tfTypes.Three{}
				}
				if accessEntitlementsItem.ProvisionPolicy.DelegatedProvision == nil {
					accessEntitlements1.ProvisionPolicy.DelegatedProvision = nil
				} else {
					accessEntitlements1.ProvisionPolicy.DelegatedProvision = &tfTypes.DelegatedProvision{}
					accessEntitlements1.ProvisionPolicy.DelegatedProvision.AppID = types.StringPointerValue(accessEntitlementsItem.ProvisionPolicy.DelegatedProvision.AppID)
					accessEntitlements1.ProvisionPolicy.DelegatedProvision.EntitlementID = types.StringPointerValue(accessEntitlementsItem.ProvisionPolicy.DelegatedProvision.EntitlementID)
					accessEntitlements1.ProvisionPolicy.DelegatedProvision.Implicit = types.BoolPointerValue(accessEntitlementsItem.ProvisionPolicy.DelegatedProvision.Implicit)
				}
				if accessEntitlementsItem.ProvisionPolicy.ManualProvision == nil {
					accessEntitlements1.ProvisionPolicy.ManualProvision = nil
				} else {
					accessEntitlements1.ProvisionPolicy.ManualProvision = &tfTypes.ManualProvision{}
					accessEntitlements1.ProvisionPolicy.ManualProvision.Instructions = types.StringPointerValue(accessEntitlementsItem.ProvisionPolicy.ManualProvision.Instructions)
					accessEntitlements1.ProvisionPolicy.ManualProvision.UserIds = []types.String{}
					for _, v := range accessEntitlementsItem.ProvisionPolicy.ManualProvision.UserIds {
						accessEntitlements1.ProvisionPolicy.ManualProvision.UserIds = append(accessEntitlements1.ProvisionPolicy.ManualProvision.UserIds, types.StringValue(v))
					}
				}
				if accessEntitlementsItem.ProvisionPolicy.WebhookProvision == nil {
					accessEntitlements1.ProvisionPolicy.WebhookProvision = nil
				} else {
					accessEntitlements1.ProvisionPolicy.WebhookProvision = &tfTypes.WebhookProvision{}
					accessEntitlements1.ProvisionPolicy.WebhookProvision.WebhookID = types.StringPointerValue(accessEntitlementsItem.ProvisionPolicy.WebhookProvision.WebhookID)
				}
			}
			accessEntitlements1.RevokePolicyID = types.StringPointerValue(accessEntitlementsItem.RevokePolicyID)
			accessEntitlements1.RiskLevelValueID = types.StringPointerValue(accessEntitlementsItem.RiskLevelValueID)
			accessEntitlements1.Slug = types.StringPointerValue(accessEntitlementsItem.Slug)
			if len(accessEntitlementsItem.SourceConnectorIds) > 0 {
				accessEntitlements1.SourceConnectorIds = make(map[string]types.String)
				for key, value := range accessEntitlementsItem.SourceConnectorIds {
					accessEntitlements1.SourceConnectorIds[key] = types.StringValue(value)
				}
			}
			accessEntitlements1.SystemBuiltin = types.BoolPointerValue(accessEntitlementsItem.SystemBuiltin)
			if accessEntitlementsItem.UpdatedAt != nil {
				accessEntitlements1.UpdatedAt = types.StringValue(accessEntitlementsItem.UpdatedAt.Format(time.RFC3339Nano))
			} else {
				accessEntitlements1.UpdatedAt = types.StringNull()
			}
			accessEntitlements1.UserEditedMask = types.StringPointerValue(accessEntitlementsItem.UserEditedMask)
			if accessEntitlementsCount+1 > len(r.AccessEntitlements) {
				r.AccessEntitlements = append(r.AccessEntitlements, accessEntitlements1)
			} else {
				r.AccessEntitlements[accessEntitlementsCount].Alias = accessEntitlements1.Alias
				r.AccessEntitlements[accessEntitlementsCount].AppID = accessEntitlements1.AppID
				r.AccessEntitlements[accessEntitlementsCount].AppResourceID = accessEntitlements1.AppResourceID
				r.AccessEntitlements[accessEntitlementsCount].AppResourceTypeID = accessEntitlements1.AppResourceTypeID
				r.AccessEntitlements[accessEntitlementsCount].CertifyPolicyID = accessEntitlements1.CertifyPolicyID
				r.AccessEntitlements[accessEntitlementsCount].ComplianceFrameworkValueIds = accessEntitlements1.ComplianceFrameworkValueIds
				r.AccessEntitlements[accessEntitlementsCount].CreatedAt = accessEntitlements1.CreatedAt
				r.AccessEntitlements[accessEntitlementsCount].DeletedAt = accessEntitlements1.DeletedAt
				r.AccessEntitlements[accessEntitlementsCount].Description = accessEntitlements1.Description
				r.AccessEntitlements[accessEntitlementsCount].DisplayName = accessEntitlements1.DisplayName
				r.AccessEntitlements[accessEntitlementsCount].DurationGrant = accessEntitlements1.DurationGrant
				r.AccessEntitlements[accessEntitlementsCount].DurationUnset = accessEntitlements1.DurationUnset
				r.AccessEntitlements[accessEntitlementsCount].EmergencyGrantEnabled = accessEntitlements1.EmergencyGrantEnabled
				r.AccessEntitlements[accessEntitlementsCount].EmergencyGrantPolicyID = accessEntitlements1.EmergencyGrantPolicyID
				r.AccessEntitlements[accessEntitlementsCount].GrantCount = accessEntitlements1.GrantCount
				r.AccessEntitlements[accessEntitlementsCount].GrantPolicyID = accessEntitlements1.GrantPolicyID
				r.AccessEntitlements[accessEntitlementsCount].ID = accessEntitlements1.ID
				r.AccessEntitlements[accessEntitlementsCount].IsManuallyManaged = accessEntitlements1.IsManuallyManaged
				r.AccessEntitlements[accessEntitlementsCount].ProvisionPolicy = accessEntitlements1.ProvisionPolicy
				r.AccessEntitlements[accessEntitlementsCount].RevokePolicyID = accessEntitlements1.RevokePolicyID
				r.AccessEntitlements[accessEntitlementsCount].RiskLevelValueID = accessEntitlements1.RiskLevelValueID
				r.AccessEntitlements[accessEntitlementsCount].Slug = accessEntitlements1.Slug
				r.AccessEntitlements[accessEntitlementsCount].SourceConnectorIds = accessEntitlements1.SourceConnectorIds
				r.AccessEntitlements[accessEntitlementsCount].SystemBuiltin = accessEntitlements1.SystemBuiltin
				r.AccessEntitlements[accessEntitlementsCount].UpdatedAt = accessEntitlements1.UpdatedAt
				r.AccessEntitlements[accessEntitlementsCount].UserEditedMask = accessEntitlements1.UserEditedMask
			}
		}
		r.AppIds = []types.String{}
		for _, v := range resp.AppIds {
			r.AppIds = append(r.AppIds, types.StringValue(v))
		}
		if resp.CreatedAt != nil {
			r.CreatedAt = types.StringValue(resp.CreatedAt.Format(time.RFC3339Nano))
		} else {
			r.CreatedAt = types.StringNull()
		}
		r.CreatedByUserID = types.StringPointerValue(resp.CreatedByUserID)
		if resp.DeletedAt != nil {
			r.DeletedAt = types.StringValue(resp.DeletedAt.Format(time.RFC3339Nano))
		} else {
			r.DeletedAt = types.StringNull()
		}
		r.Description = types.StringPointerValue(resp.Description)
		r.DisplayName = types.StringPointerValue(resp.DisplayName)
		r.ID = types.StringPointerValue(resp.ID)
		r.Published = types.BoolPointerValue(resp.Published)
		r.RequestBundle = types.BoolPointerValue(resp.RequestBundle)
		if resp.UpdatedAt != nil {
			r.UpdatedAt = types.StringValue(resp.UpdatedAt.Format(time.RFC3339Nano))
		} else {
			r.UpdatedAt = types.StringNull()
		}
		r.VisibleToEveryone = types.BoolPointerValue(resp.VisibleToEveryone)
	}
}
