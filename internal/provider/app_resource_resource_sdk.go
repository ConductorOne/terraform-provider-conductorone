// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package provider

import (
	"github.com/conductorone/terraform-provider-conductorone/internal/sdk/models/shared"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"time"
)

func (r *AppResourceResourceModel) ToSharedCreateManuallyManagedAppResourceRequest() *shared.CreateManuallyManagedAppResourceRequest {
	description := new(string)
	if !r.Description.IsUnknown() && !r.Description.IsNull() {
		*description = r.Description.ValueString()
	} else {
		description = nil
	}
	var displayName string
	displayName = r.DisplayName.ValueString()

	out := shared.CreateManuallyManagedAppResourceRequest{
		Description: description,
		DisplayName: displayName,
	}
	return &out
}

func (r *AppResourceResourceModel) RefreshFromSharedAppResource(resp *shared.AppResource) {
	if resp != nil {
		r.AppID = types.StringPointerValue(resp.AppID)
		r.AppResourceTypeID = types.StringPointerValue(resp.AppResourceTypeID)
		if resp.CreatedAt != nil {
			r.CreatedAt = types.StringValue(resp.CreatedAt.Format(time.RFC3339Nano))
		} else {
			r.CreatedAt = types.StringNull()
		}
		if resp.DeletedAt != nil {
			r.DeletedAt = types.StringValue(resp.DeletedAt.Format(time.RFC3339Nano))
		} else {
			r.DeletedAt = types.StringNull()
		}
		r.Description = types.StringPointerValue(resp.Description)
		r.DisplayName = types.StringPointerValue(resp.DisplayName)
		r.GrantCount = types.StringPointerValue(resp.GrantCount)
		r.ID = types.StringPointerValue(resp.ID)
		r.ParentAppResourceID = types.StringPointerValue(resp.ParentAppResourceID)
		r.ParentAppResourceTypeID = types.StringPointerValue(resp.ParentAppResourceTypeID)
		if resp.UpdatedAt != nil {
			r.UpdatedAt = types.StringValue(resp.UpdatedAt.Format(time.RFC3339Nano))
		} else {
			r.UpdatedAt = types.StringNull()
		}
	}
}

func (r *AppResourceResourceModel) ToSharedAppResourceInput() *shared.AppResourceInput {
	appID := new(string)
	if !r.AppID.IsUnknown() && !r.AppID.IsNull() {
		*appID = r.AppID.ValueString()
	} else {
		appID = nil
	}
	appResourceTypeID := new(string)
	if !r.AppResourceTypeID.IsUnknown() && !r.AppResourceTypeID.IsNull() {
		*appResourceTypeID = r.AppResourceTypeID.ValueString()
	} else {
		appResourceTypeID = nil
	}
	description := new(string)
	if !r.Description.IsUnknown() && !r.Description.IsNull() {
		*description = r.Description.ValueString()
	} else {
		description = nil
	}
	displayName := new(string)
	if !r.DisplayName.IsUnknown() && !r.DisplayName.IsNull() {
		*displayName = r.DisplayName.ValueString()
	} else {
		displayName = nil
	}
	grantCount := new(string)
	if !r.GrantCount.IsUnknown() && !r.GrantCount.IsNull() {
		*grantCount = r.GrantCount.ValueString()
	} else {
		grantCount = nil
	}
	id := new(string)
	if !r.ID.IsUnknown() && !r.ID.IsNull() {
		*id = r.ID.ValueString()
	} else {
		id = nil
	}
	parentAppResourceID := new(string)
	if !r.ParentAppResourceID.IsUnknown() && !r.ParentAppResourceID.IsNull() {
		*parentAppResourceID = r.ParentAppResourceID.ValueString()
	} else {
		parentAppResourceID = nil
	}
	parentAppResourceTypeID := new(string)
	if !r.ParentAppResourceTypeID.IsUnknown() && !r.ParentAppResourceTypeID.IsNull() {
		*parentAppResourceTypeID = r.ParentAppResourceTypeID.ValueString()
	} else {
		parentAppResourceTypeID = nil
	}
	out := shared.AppResourceInput{
		AppID:                   appID,
		AppResourceTypeID:       appResourceTypeID,
		Description:             description,
		DisplayName:             displayName,
		GrantCount:              grantCount,
		ID:                      id,
		ParentAppResourceID:     parentAppResourceID,
		ParentAppResourceTypeID: parentAppResourceTypeID,
	}
	return &out
}
