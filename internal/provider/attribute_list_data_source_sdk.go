// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package provider

import (
	"context"
	"github.com/conductorone/terraform-provider-conductorone/internal/sdk/models/operations"
	"github.com/conductorone/terraform-provider-conductorone/internal/sdk/models/shared"
	"github.com/hashicorp/terraform-plugin-framework/diag"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-plugin-framework/attr"
)

func (d *AttributeListDataSourceModel) ToOperationsC1APIAttributeV1AttributesListAttributeValuesRequest(ctx context.Context) (*operations.C1APIAttributeV1AttributesListAttributeValuesRequest, diag.Diagnostics) {
	var diags diag.Diagnostics

	var attributeTypeID string
	attributeTypeID = d.AttributeTypeID.ValueString()

	out := operations.C1APIAttributeV1AttributesListAttributeValuesRequest{
		AttributeTypeID: attributeTypeID,
	}

	return &out, diags
}

func (d *AttributeListDataSourceModel) RefreshFromSharedListAttributeValuesResponse(ctx context.Context, resp *shared.ListAttributeValuesResponse) diag.Diagnostics {
	var diags diag.Diagnostics

	if resp != nil {
		// Extract values from the response
		var values []types.String
		if resp.List != nil {
			for _, attrValue := range resp.List {
				if attrValue.Value != nil {
					values = append(values, types.StringValue(*attrValue.Value))
				}
			}
		}
		
		// Convert to attr.Value slice
		var attrValues []attr.Value
		for _, v := range values {
			attrValues = append(attrValues, v)
		}
		
		d.Values = types.ListValueMust(types.StringType, attrValues)
		d.ID = d.AttributeTypeID // Use the attribute type ID as the ID
	}

	return diags
} 