// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package provider

import (
	"context"
	"github.com/conductorone/terraform-provider-conductorone/internal/sdk/models/shared"
	"github.com/hashicorp/terraform-plugin-framework/diag"
)

func (r *AccessProfileRequestableEntriesResourceModel) ToSharedRequestCatalogManagementServiceAddAppEntitlementsRequest() *shared.RequestCatalogManagementServiceAddAppEntitlementsRequest {
	var appEntitlements []shared.AppEntitlementRef = []shared.AppEntitlementRef{}
	for _, appEntitlementsItem := range r.AppEntitlements {
		appID := new(string)
		if !appEntitlementsItem.AppID.IsUnknown() && !appEntitlementsItem.AppID.IsNull() {
			*appID = appEntitlementsItem.AppID.ValueString()
		} else {
			appID = nil
		}
		id := new(string)
		if !appEntitlementsItem.ID.IsUnknown() && !appEntitlementsItem.ID.IsNull() {
			*id = appEntitlementsItem.ID.ValueString()
		} else {
			id = nil
		}
		appEntitlements = append(appEntitlements, shared.AppEntitlementRef{
			AppID: appID,
			ID:    id,
		})
	}
	createRequests := new(bool)
	if !r.CreateRequests.IsUnknown() && !r.CreateRequests.IsNull() {
		*createRequests = r.CreateRequests.ValueBool()
	} else {
		createRequests = nil
	}
	out := shared.RequestCatalogManagementServiceAddAppEntitlementsRequest{
		AppEntitlements: appEntitlements,
		CreateRequests:  createRequests,
	}
	return &out
}

func (r *AccessProfileRequestableEntriesResourceModel) RefreshFromSharedRequestCatalogManagementServiceAddAppEntitlementsResponse(ctx context.Context, resp *shared.RequestCatalogManagementServiceAddAppEntitlementsResponse) diag.Diagnostics {
	var diags diag.Diagnostics

	if resp != nil {
	}

	return diags
}

func (r *AccessProfileRequestableEntriesResourceModel) ToSharedRequestCatalogManagementServiceRemoveAppEntitlementsRequest() *shared.RequestCatalogManagementServiceRemoveAppEntitlementsRequest {
	var appEntitlements []shared.AppEntitlementRef = []shared.AppEntitlementRef{}
	for _, appEntitlementsItem := range r.AppEntitlements {
		appID := new(string)
		if !appEntitlementsItem.AppID.IsUnknown() && !appEntitlementsItem.AppID.IsNull() {
			*appID = appEntitlementsItem.AppID.ValueString()
		} else {
			appID = nil
		}
		id := new(string)
		if !appEntitlementsItem.ID.IsUnknown() && !appEntitlementsItem.ID.IsNull() {
			*id = appEntitlementsItem.ID.ValueString()
		} else {
			id = nil
		}
		appEntitlements = append(appEntitlements, shared.AppEntitlementRef{
			AppID: appID,
			ID:    id,
		})
	}
	out := shared.RequestCatalogManagementServiceRemoveAppEntitlementsRequest{
		AppEntitlements: appEntitlements,
	}
	return &out
}
