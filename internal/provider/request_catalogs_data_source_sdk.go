// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package provider

import (
	"context"
	"github.com/conductorone/terraform-provider-conductorone/internal/provider/typeconvert"
	tfTypes "github.com/conductorone/terraform-provider-conductorone/internal/provider/types"
	"github.com/conductorone/terraform-provider-conductorone/internal/sdk/models/operations"
	"github.com/conductorone/terraform-provider-conductorone/internal/sdk/models/shared"
	"github.com/hashicorp/terraform-plugin-framework/diag"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

func (r *RequestCatalogsDataSourceModel) RefreshFromSharedRequestCatalogManagementServiceListResponse(ctx context.Context, resp *shared.RequestCatalogManagementServiceListResponse) diag.Diagnostics {
	var diags diag.Diagnostics

	if resp != nil {
		if resp.Expanded != nil {
		}
		if resp.List != nil {
			r.List = []tfTypes.RequestCatalogView{}

			for _, listItem := range resp.List {
				var list tfTypes.RequestCatalogView

				if listItem.RequestCatalog == nil {
					list.RequestCatalog = nil
				} else {
					list.RequestCatalog = &tfTypes.RequestCatalog{}
					list.RequestCatalog.CreatedAt = types.StringPointerValue(typeconvert.TimePointerToStringPointer(listItem.RequestCatalog.CreatedAt))
					list.RequestCatalog.CreatedByUserID = types.StringPointerValue(listItem.RequestCatalog.CreatedByUserID)
					list.RequestCatalog.DeletedAt = types.StringPointerValue(typeconvert.TimePointerToStringPointer(listItem.RequestCatalog.DeletedAt))
					list.RequestCatalog.Description = types.StringPointerValue(listItem.RequestCatalog.Description)
					list.RequestCatalog.DisplayName = types.StringPointerValue(listItem.RequestCatalog.DisplayName)
					if listItem.RequestCatalog.EnrollmentBehavior != nil {
						list.RequestCatalog.EnrollmentBehavior = types.StringValue(string(*listItem.RequestCatalog.EnrollmentBehavior))
					} else {
						list.RequestCatalog.EnrollmentBehavior = types.StringNull()
					}
					list.RequestCatalog.ID = types.StringPointerValue(listItem.RequestCatalog.ID)
					list.RequestCatalog.Published = types.BoolPointerValue(listItem.RequestCatalog.Published)
					list.RequestCatalog.RequestBundle = types.BoolPointerValue(listItem.RequestCatalog.RequestBundle)
					if listItem.RequestCatalog.UnenrollmentBehavior != nil {
						list.RequestCatalog.UnenrollmentBehavior = types.StringValue(string(*listItem.RequestCatalog.UnenrollmentBehavior))
					} else {
						list.RequestCatalog.UnenrollmentBehavior = types.StringNull()
					}
					if listItem.RequestCatalog.UnenrollmentEntitlementBehavior != nil {
						list.RequestCatalog.UnenrollmentEntitlementBehavior = types.StringValue(string(*listItem.RequestCatalog.UnenrollmentEntitlementBehavior))
					} else {
						list.RequestCatalog.UnenrollmentEntitlementBehavior = types.StringNull()
					}
					list.RequestCatalog.UpdatedAt = types.StringPointerValue(typeconvert.TimePointerToStringPointer(listItem.RequestCatalog.UpdatedAt))
					list.RequestCatalog.VisibleToEveryone = types.BoolPointerValue(listItem.RequestCatalog.VisibleToEveryone)
				}

				r.List = append(r.List, list)
			}
		}
		r.NextPageToken = types.StringPointerValue(resp.NextPageToken)
	}

	return diags
}

func (r *RequestCatalogsDataSourceModel) ToOperationsC1APIRequestcatalogV1RequestCatalogManagementServiceListRequest(ctx context.Context) (*operations.C1APIRequestcatalogV1RequestCatalogManagementServiceListRequest, diag.Diagnostics) {
	var diags diag.Diagnostics

	pageSize := new(int)
	if !r.PageSize.IsUnknown() && !r.PageSize.IsNull() {
		*pageSize = int(r.PageSize.ValueInt32())
	} else {
		pageSize = nil
	}
	pageToken := new(string)
	if !r.PageToken.IsUnknown() && !r.PageToken.IsNull() {
		*pageToken = r.PageToken.ValueString()
	} else {
		pageToken = nil
	}
	out := operations.C1APIRequestcatalogV1RequestCatalogManagementServiceListRequest{
		PageSize:  pageSize,
		PageToken: pageToken,
	}

	return &out, diags
}
