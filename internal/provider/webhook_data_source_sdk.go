// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package provider

import (
	"context"
	"github.com/conductorone/terraform-provider-conductorone/internal/provider/typeconvert"
	"github.com/conductorone/terraform-provider-conductorone/internal/sdk/models/shared"
	"github.com/hashicorp/terraform-plugin-framework/diag"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

func (r *WebhookDataSourceModel) ToSharedWebhooksSearchRequest() *shared.WebhooksSearchRequest {
	query := new(string)
	if !r.Query.IsUnknown() && !r.Query.IsNull() {
		*query = r.Query.ValueString()
	} else {
		query = nil
	}
	var refs []shared.WebhookRef = []shared.WebhookRef{}
	for _, refsItem := range r.Refs {
		id := new(string)
		if !refsItem.ID.IsUnknown() && !refsItem.ID.IsNull() {
			*id = refsItem.ID.ValueString()
		} else {
			id = nil
		}
		refs = append(refs, shared.WebhookRef{
			ID: id,
		})
	}
	out := shared.WebhooksSearchRequest{
		Query: query,
		Refs:  refs,
	}
	return &out
}

func (r *WebhookDataSourceModel) RefreshFromSharedWebhook1(ctx context.Context, resp *shared.Webhook1) diag.Diagnostics {
	var diags diag.Diagnostics

	r.CreatedAt = types.StringPointerValue(typeconvert.TimePointerToStringPointer(resp.CreatedAt))
	r.DeletedAt = types.StringPointerValue(typeconvert.TimePointerToStringPointer(resp.DeletedAt))
	r.Description = types.StringPointerValue(resp.Description)
	r.DisplayName = types.StringPointerValue(resp.DisplayName)
	r.ID = types.StringPointerValue(resp.ID)
	r.UpdatedAt = types.StringPointerValue(typeconvert.TimePointerToStringPointer(resp.UpdatedAt))
	r.URL = types.StringPointerValue(resp.URL)

	return diags
}
