// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package provider

import (
	"context"
	tfTypes "github.com/conductorone/terraform-provider-conductorone/internal/provider/types"
	"github.com/conductorone/terraform-provider-conductorone/internal/sdk/models/shared"
	"github.com/hashicorp/terraform-plugin-framework/diag"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

func (r *RequestSchemaEntitlementBindingResourceModel) RefreshFromSharedRequestSchemaServiceCreateEntitlementBindingResponse(ctx context.Context, resp *shared.RequestSchemaServiceCreateEntitlementBindingResponse) diag.Diagnostics {
	var diags diag.Diagnostics

	if resp != nil {
		if resp.AppEntitlementRef == nil {
			r.AppEntitlementRef = nil
		} else {
			r.AppEntitlementRef = &tfTypes.AppEntitlementRef{}
			r.AppEntitlementRef.AppID = types.StringPointerValue(resp.AppEntitlementRef.AppID)
			r.AppEntitlementRef.ID = types.StringPointerValue(resp.AppEntitlementRef.ID)
		}
		r.RequestSchemaID = types.StringPointerValue(resp.RequestSchemaID)
	}

	return diags
}

func (r *RequestSchemaEntitlementBindingResourceModel) RefreshFromSharedRequestSchemaServiceFindBindingForAppEntitlementResponse(ctx context.Context, resp *shared.RequestSchemaServiceFindBindingForAppEntitlementResponse) diag.Diagnostics {
	var diags diag.Diagnostics

	if resp != nil {
		if resp.AppEntitlementRef == nil {
			r.AppEntitlementRef = nil
		} else {
			r.AppEntitlementRef = &tfTypes.AppEntitlementRef{}
			r.AppEntitlementRef.AppID = types.StringPointerValue(resp.AppEntitlementRef.AppID)
			r.AppEntitlementRef.ID = types.StringPointerValue(resp.AppEntitlementRef.ID)
		}
		r.RequestSchemaID = types.StringPointerValue(resp.RequestSchemaID)
	}

	return diags
}

func (r *RequestSchemaEntitlementBindingResourceModel) ToSharedRequestSchemaServiceCreateEntitlementBindingRequest(ctx context.Context) (*shared.RequestSchemaServiceCreateEntitlementBindingRequest, diag.Diagnostics) {
	var diags diag.Diagnostics

	var appEntitlementRef *shared.AppEntitlementRef
	if r.AppEntitlementRef != nil {
		appID := new(string)
		if !r.AppEntitlementRef.AppID.IsUnknown() && !r.AppEntitlementRef.AppID.IsNull() {
			*appID = r.AppEntitlementRef.AppID.ValueString()
		} else {
			appID = nil
		}
		id := new(string)
		if !r.AppEntitlementRef.ID.IsUnknown() && !r.AppEntitlementRef.ID.IsNull() {
			*id = r.AppEntitlementRef.ID.ValueString()
		} else {
			id = nil
		}
		appEntitlementRef = &shared.AppEntitlementRef{
			AppID: appID,
			ID:    id,
		}
	}
	requestSchemaID := new(string)
	if !r.RequestSchemaID.IsUnknown() && !r.RequestSchemaID.IsNull() {
		*requestSchemaID = r.RequestSchemaID.ValueString()
	} else {
		requestSchemaID = nil
	}
	out := shared.RequestSchemaServiceCreateEntitlementBindingRequest{
		AppEntitlementRef: appEntitlementRef,
		RequestSchemaID:   requestSchemaID,
	}

	return &out, diags
}

func (r *RequestSchemaEntitlementBindingResourceModel) ToSharedRequestSchemaServiceFindBindingForAppEntitlementRequest(ctx context.Context) (*shared.RequestSchemaServiceFindBindingForAppEntitlementRequest, diag.Diagnostics) {
	var diags diag.Diagnostics

	var appEntitlementRef *shared.AppEntitlementRef
	if r.AppEntitlementRef != nil {
		appID := new(string)
		if !r.AppEntitlementRef.AppID.IsUnknown() && !r.AppEntitlementRef.AppID.IsNull() {
			*appID = r.AppEntitlementRef.AppID.ValueString()
		} else {
			appID = nil
		}
		id := new(string)
		if !r.AppEntitlementRef.ID.IsUnknown() && !r.AppEntitlementRef.ID.IsNull() {
			*id = r.AppEntitlementRef.ID.ValueString()
		} else {
			id = nil
		}
		appEntitlementRef = &shared.AppEntitlementRef{
			AppID: appID,
			ID:    id,
		}
	}
	out := shared.RequestSchemaServiceFindBindingForAppEntitlementRequest{
		AppEntitlementRef: appEntitlementRef,
	}

	return &out, diags
}

func (r *RequestSchemaEntitlementBindingResourceModel) ToSharedRequestSchemaServiceRemoveEntitlementBindingRequest(ctx context.Context) (*shared.RequestSchemaServiceRemoveEntitlementBindingRequest, diag.Diagnostics) {
	var diags diag.Diagnostics

	var appEntitlementRef *shared.AppEntitlementRef
	if r.AppEntitlementRef != nil {
		appID := new(string)
		if !r.AppEntitlementRef.AppID.IsUnknown() && !r.AppEntitlementRef.AppID.IsNull() {
			*appID = r.AppEntitlementRef.AppID.ValueString()
		} else {
			appID = nil
		}
		id := new(string)
		if !r.AppEntitlementRef.ID.IsUnknown() && !r.AppEntitlementRef.ID.IsNull() {
			*id = r.AppEntitlementRef.ID.ValueString()
		} else {
			id = nil
		}
		appEntitlementRef = &shared.AppEntitlementRef{
			AppID: appID,
			ID:    id,
		}
	}
	requestSchemaID := new(string)
	if !r.RequestSchemaID.IsUnknown() && !r.RequestSchemaID.IsNull() {
		*requestSchemaID = r.RequestSchemaID.ValueString()
	} else {
		requestSchemaID = nil
	}
	out := shared.RequestSchemaServiceRemoveEntitlementBindingRequest{
		AppEntitlementRef: appEntitlementRef,
		RequestSchemaID:   requestSchemaID,
	}

	return &out, diags
}
