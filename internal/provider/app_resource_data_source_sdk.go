// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package provider

import (
	tfTypes "github.com/conductorone/terraform-provider-conductorone/internal/provider/types"
	"github.com/conductorone/terraform-provider-conductorone/internal/sdk/models/shared"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"time"
)

func (r *AppResourceDataSourceModel) RefreshFromSharedAppResource(resp *shared.AppResource) {
	if resp != nil {
		r.AppID = types.StringPointerValue(resp.AppID)
		r.AppResourceTypeID = types.StringPointerValue(resp.AppResourceTypeID)
		if resp.CreatedAt != nil {
			r.CreatedAt = types.StringValue(resp.CreatedAt.Format(time.RFC3339Nano))
		} else {
			r.CreatedAt = types.StringNull()
		}
		if resp.DeletedAt != nil {
			r.DeletedAt = types.StringValue(resp.DeletedAt.Format(time.RFC3339Nano))
		} else {
			r.DeletedAt = types.StringNull()
		}
		r.Description = types.StringPointerValue(resp.Description)
		r.DisplayName = types.StringPointerValue(resp.DisplayName)
		r.GrantCount = types.StringPointerValue(resp.GrantCount)
		r.ID = types.StringPointerValue(resp.ID)
		r.MatchBatonID = types.StringPointerValue(resp.MatchBatonID)
		r.ParentAppResourceID = types.StringPointerValue(resp.ParentAppResourceID)
		r.ParentAppResourceTypeID = types.StringPointerValue(resp.ParentAppResourceTypeID)
		if resp.SecretTrait == nil {
			r.SecretTrait = nil
		} else {
			r.SecretTrait = &tfTypes.SecretTrait{}
			r.SecretTrait.IdentityAppUserID = types.StringPointerValue(resp.SecretTrait.IdentityAppUserID)
			if resp.SecretTrait.LastUsedAt != nil {
				r.SecretTrait.LastUsedAt = types.StringValue(resp.SecretTrait.LastUsedAt.Format(time.RFC3339Nano))
			} else {
				r.SecretTrait.LastUsedAt = types.StringNull()
			}
			if resp.SecretTrait.SecretCreatedAt != nil {
				r.SecretTrait.SecretCreatedAt = types.StringValue(resp.SecretTrait.SecretCreatedAt.Format(time.RFC3339Nano))
			} else {
				r.SecretTrait.SecretCreatedAt = types.StringNull()
			}
			if resp.SecretTrait.SecretExpiresAt != nil {
				r.SecretTrait.SecretExpiresAt = types.StringValue(resp.SecretTrait.SecretExpiresAt.Format(time.RFC3339Nano))
			} else {
				r.SecretTrait.SecretExpiresAt = types.StringNull()
			}
		}
		if resp.UpdatedAt != nil {
			r.UpdatedAt = types.StringValue(resp.UpdatedAt.Format(time.RFC3339Nano))
		} else {
			r.UpdatedAt = types.StringNull()
		}
	}
}
