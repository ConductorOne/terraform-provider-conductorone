// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package provider

import (
	"context"
	"github.com/conductorone/terraform-provider-conductorone/internal/provider/typeconvert"
	tfTypes "github.com/conductorone/terraform-provider-conductorone/internal/provider/types"
	"github.com/conductorone/terraform-provider-conductorone/internal/sdk/models/shared"
	"github.com/hashicorp/terraform-plugin-framework/diag"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

func (r *AppResourceDataSourceModel) RefreshFromSharedAppResource(ctx context.Context, resp *shared.AppResource) diag.Diagnostics {
	var diags diag.Diagnostics

	if resp != nil {
		r.AppID = types.StringPointerValue(resp.AppID)
		r.AppResourceTypeID = types.StringPointerValue(resp.AppResourceTypeID)
		r.CreatedAt = types.StringPointerValue(typeconvert.TimePointerToStringPointer(resp.CreatedAt))
		r.DeletedAt = types.StringPointerValue(typeconvert.TimePointerToStringPointer(resp.DeletedAt))
		r.Description = types.StringPointerValue(resp.Description)
		r.DisplayName = types.StringPointerValue(resp.DisplayName)
		r.GrantCount = types.StringPointerValue(resp.GrantCount)
		r.ID = types.StringPointerValue(resp.ID)
		r.ParentAppResourceID = types.StringPointerValue(resp.ParentAppResourceID)
		r.ParentAppResourceTypeID = types.StringPointerValue(resp.ParentAppResourceTypeID)
		if resp.SecretTrait == nil {
			r.SecretTrait = nil
		} else {
			r.SecretTrait = &tfTypes.SecretTrait{}
			r.SecretTrait.IdentityAppUserID = types.StringPointerValue(resp.SecretTrait.IdentityAppUserID)
			r.SecretTrait.LastUsedAt = types.StringPointerValue(typeconvert.TimePointerToStringPointer(resp.SecretTrait.LastUsedAt))
			r.SecretTrait.SecretCreatedAt = types.StringPointerValue(typeconvert.TimePointerToStringPointer(resp.SecretTrait.SecretCreatedAt))
			r.SecretTrait.SecretExpiresAt = types.StringPointerValue(typeconvert.TimePointerToStringPointer(resp.SecretTrait.SecretExpiresAt))
		}
		r.UpdatedAt = types.StringPointerValue(typeconvert.TimePointerToStringPointer(resp.UpdatedAt))
	}

	return diags
}
