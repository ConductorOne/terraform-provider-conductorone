// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/ConductorOne/terraform-provider-conductorone/internal/sdk/pkg/models/shared"
	"net/http"
)

type C1APIAppV1AppEntitlementOwnersAddRequest struct {
	AddAppEntitlementOwnerRequest *shared.AddAppEntitlementOwnerRequest `request:"mediaType=application/json"`
	AppID                         string                                `pathParam:"style=simple,explode=false,name=app_id"`
	EntitlementID                 string                                `pathParam:"style=simple,explode=false,name=entitlement_id"`
}

func (o *C1APIAppV1AppEntitlementOwnersAddRequest) GetAddAppEntitlementOwnerRequest() *shared.AddAppEntitlementOwnerRequest {
	if o == nil {
		return nil
	}
	return o.AddAppEntitlementOwnerRequest
}

func (o *C1APIAppV1AppEntitlementOwnersAddRequest) GetAppID() string {
	if o == nil {
		return ""
	}
	return o.AppID
}

func (o *C1APIAppV1AppEntitlementOwnersAddRequest) GetEntitlementID() string {
	if o == nil {
		return ""
	}
	return o.EntitlementID
}

type C1APIAppV1AppEntitlementOwnersAddResponse struct {
	// The empty response message for adding an app entitlement owner.
	AddAppEntitlementOwnerResponse *shared.AddAppEntitlementOwnerResponse
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *C1APIAppV1AppEntitlementOwnersAddResponse) GetAddAppEntitlementOwnerResponse() *shared.AddAppEntitlementOwnerResponse {
	if o == nil {
		return nil
	}
	return o.AddAppEntitlementOwnerResponse
}

func (o *C1APIAppV1AppEntitlementOwnersAddResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *C1APIAppV1AppEntitlementOwnersAddResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *C1APIAppV1AppEntitlementOwnersAddResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
