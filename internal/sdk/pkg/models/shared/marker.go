// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// MarkerSeverity - The severity field.
type MarkerSeverity string

const (
	MarkerSeverityUnknown MarkerSeverity = "UNKNOWN"
	MarkerSeverityHint    MarkerSeverity = "HINT"
	MarkerSeverityInfo    MarkerSeverity = "INFO"
	MarkerSeverityWarning MarkerSeverity = "WARNING"
	MarkerSeverityError   MarkerSeverity = "ERROR"
)

func (e MarkerSeverity) ToPointer() *MarkerSeverity {
	return &e
}

func (e *MarkerSeverity) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "UNKNOWN":
		fallthrough
	case "HINT":
		fallthrough
	case "INFO":
		fallthrough
	case "WARNING":
		fallthrough
	case "ERROR":
		*e = MarkerSeverity(v)
		return nil
	default:
		return fmt.Errorf("invalid value for MarkerSeverity: %v", v)
	}
}

// Marker - The Marker message.
type Marker struct {
	// The endColumn field.
	EndColumn *int `json:"endColumn,omitempty"`
	// The endLineNumber field.
	EndLineNumber *int `json:"endLineNumber,omitempty"`
	// The message field.
	Message *string `json:"message,omitempty"`
	// The severity field.
	Severity *MarkerSeverity `json:"severity,omitempty"`
	// The startColumn field.
	StartColumn *int `json:"startColumn,omitempty"`
	// The startLineNumber field.
	StartLineNumber *int `json:"startLineNumber,omitempty"`
}

func (o *Marker) GetEndColumn() *int {
	if o == nil {
		return nil
	}
	return o.EndColumn
}

func (o *Marker) GetEndLineNumber() *int {
	if o == nil {
		return nil
	}
	return o.EndLineNumber
}

func (o *Marker) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *Marker) GetSeverity() *MarkerSeverity {
	if o == nil {
		return nil
	}
	return o.Severity
}

func (o *Marker) GetStartColumn() *int {
	if o == nil {
		return nil
	}
	return o.StartColumn
}

func (o *Marker) GetStartLineNumber() *int {
	if o == nil {
		return nil
	}
	return o.StartLineNumber
}
