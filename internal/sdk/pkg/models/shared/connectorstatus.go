// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// ConnectorStatusStatus - The status field.
type ConnectorStatusStatus string

const (
	ConnectorStatusStatusSyncStatusUnspecified ConnectorStatusStatus = "SYNC_STATUS_UNSPECIFIED"
	ConnectorStatusStatusSyncStatusRunning     ConnectorStatusStatus = "SYNC_STATUS_RUNNING"
	ConnectorStatusStatusSyncStatusDone        ConnectorStatusStatus = "SYNC_STATUS_DONE"
	ConnectorStatusStatusSyncStatusError       ConnectorStatusStatus = "SYNC_STATUS_ERROR"
)

func (e ConnectorStatusStatus) ToPointer() *ConnectorStatusStatus {
	return &e
}

func (e *ConnectorStatusStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SYNC_STATUS_UNSPECIFIED":
		fallthrough
	case "SYNC_STATUS_RUNNING":
		fallthrough
	case "SYNC_STATUS_DONE":
		fallthrough
	case "SYNC_STATUS_ERROR":
		*e = ConnectorStatusStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ConnectorStatusStatus: %v", v)
	}
}

// ConnectorStatus - The ConnectorStatus message.
type ConnectorStatus struct {
	CompletedAt *time.Time `json:"completedAt,omitempty"`
	// The lastError field.
	LastError *string    `json:"lastError,omitempty"`
	StartedAt *time.Time `json:"startedAt,omitempty"`
	// The status field.
	Status    *ConnectorStatusStatus `json:"status,omitempty"`
	UpdatedAt *time.Time             `json:"updatedAt,omitempty"`
}
