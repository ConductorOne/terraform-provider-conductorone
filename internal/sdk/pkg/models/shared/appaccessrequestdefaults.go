// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type AppAccessRequestDefaultsDurationUnset struct {
}

// AppAccessRequestDefaultsState - The last applied state of the app access request defaults.
type AppAccessRequestDefaultsState string

const (
	AppAccessRequestDefaultsStateAppAccessRequestDefaultsLastApplyStateUnspecified   AppAccessRequestDefaultsState = "APP_ACCESS_REQUEST_DEFAULTS_LAST_APPLY_STATE_UNSPECIFIED"
	AppAccessRequestDefaultsStateAppAccessRequestDefaultsLastApplyStateRunning       AppAccessRequestDefaultsState = "APP_ACCESS_REQUEST_DEFAULTS_LAST_APPLY_STATE_RUNNING"
	AppAccessRequestDefaultsStateAppAccessRequestDefaultsLastApplyStateSuccess       AppAccessRequestDefaultsState = "APP_ACCESS_REQUEST_DEFAULTS_LAST_APPLY_STATE_SUCCESS"
	AppAccessRequestDefaultsStateAppAccessRequestDefaultsLastApplyStateFailed        AppAccessRequestDefaultsState = "APP_ACCESS_REQUEST_DEFAULTS_LAST_APPLY_STATE_FAILED"
	AppAccessRequestDefaultsStateAppAccessRequestDefaultsLastApplyStateCanceling     AppAccessRequestDefaultsState = "APP_ACCESS_REQUEST_DEFAULTS_LAST_APPLY_STATE_CANCELING"
	AppAccessRequestDefaultsStateAppAccessRequestDefaultsLastApplyStateCancelSuccess AppAccessRequestDefaultsState = "APP_ACCESS_REQUEST_DEFAULTS_LAST_APPLY_STATE_CANCEL_SUCCESS"
	AppAccessRequestDefaultsStateAppAccessRequestDefaultsLastApplyStateCancelError   AppAccessRequestDefaultsState = "APP_ACCESS_REQUEST_DEFAULTS_LAST_APPLY_STATE_CANCEL_ERROR"
)

func (e AppAccessRequestDefaultsState) ToPointer() *AppAccessRequestDefaultsState {
	return &e
}

func (e *AppAccessRequestDefaultsState) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "APP_ACCESS_REQUEST_DEFAULTS_LAST_APPLY_STATE_UNSPECIFIED":
		fallthrough
	case "APP_ACCESS_REQUEST_DEFAULTS_LAST_APPLY_STATE_RUNNING":
		fallthrough
	case "APP_ACCESS_REQUEST_DEFAULTS_LAST_APPLY_STATE_SUCCESS":
		fallthrough
	case "APP_ACCESS_REQUEST_DEFAULTS_LAST_APPLY_STATE_FAILED":
		fallthrough
	case "APP_ACCESS_REQUEST_DEFAULTS_LAST_APPLY_STATE_CANCELING":
		fallthrough
	case "APP_ACCESS_REQUEST_DEFAULTS_LAST_APPLY_STATE_CANCEL_SUCCESS":
		fallthrough
	case "APP_ACCESS_REQUEST_DEFAULTS_LAST_APPLY_STATE_CANCEL_ERROR":
		*e = AppAccessRequestDefaultsState(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AppAccessRequestDefaultsState: %v", v)
	}
}

// AppAccessRequestDefaults - The AppAccessRequestDefaults message.
//
// This message contains a oneof named max_grant_duration. Only a single field of the following list may be set at a time:
//   - durationUnset
//   - durationGrant
type AppAccessRequestDefaults struct {
	// The app id for the app access request rule
	AppID *string `json:"appId,omitempty"`
	// The request catalog ids for the app access request rule.
	CatalogIds []string `json:"catalogIds,omitempty"`
	// If true the app level request configuration will be applied to specified resource types.
	DefaultsEnabled *bool                                  `json:"defaultsEnabled,omitempty"`
	DurationGrant   *string                                `json:"durationGrant,omitempty"`
	DurationUnset   *AppAccessRequestDefaultsDurationUnset `json:"durationUnset,omitempty"`
	// If emergency grants are enabled for this app access request rule.
	EmergencyGrantEnabled *bool `json:"emergencyGrantEnabled,omitempty"`
	// The policy id for the emergency grant policy.
	EmergencyGrantPolicyID *string `json:"emergencyGrantPolicyId,omitempty"`
	// The requestPolicyId field.
	RequestPolicyID *string `json:"requestPolicyId,omitempty"`
	// The app resource type ids for which the app access request defaults are applied.
	ResourceTypeIds []string `json:"resourceTypeIds,omitempty"`
	// The last applied state of the app access request defaults.
	State *AppAccessRequestDefaultsState `json:"state,omitempty"`
}

func (o *AppAccessRequestDefaults) GetAppID() *string {
	if o == nil {
		return nil
	}
	return o.AppID
}

func (o *AppAccessRequestDefaults) GetCatalogIds() []string {
	if o == nil {
		return nil
	}
	return o.CatalogIds
}

func (o *AppAccessRequestDefaults) GetDefaultsEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.DefaultsEnabled
}

func (o *AppAccessRequestDefaults) GetDurationGrant() *string {
	if o == nil {
		return nil
	}
	return o.DurationGrant
}

func (o *AppAccessRequestDefaults) GetDurationUnset() *AppAccessRequestDefaultsDurationUnset {
	if o == nil {
		return nil
	}
	return o.DurationUnset
}

func (o *AppAccessRequestDefaults) GetEmergencyGrantEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.EmergencyGrantEnabled
}

func (o *AppAccessRequestDefaults) GetEmergencyGrantPolicyID() *string {
	if o == nil {
		return nil
	}
	return o.EmergencyGrantPolicyID
}

func (o *AppAccessRequestDefaults) GetRequestPolicyID() *string {
	if o == nil {
		return nil
	}
	return o.RequestPolicyID
}

func (o *AppAccessRequestDefaults) GetResourceTypeIds() []string {
	if o == nil {
		return nil
	}
	return o.ResourceTypeIds
}

func (o *AppAccessRequestDefaults) GetState() *AppAccessRequestDefaultsState {
	if o == nil {
		return nil
	}
	return o.State
}
