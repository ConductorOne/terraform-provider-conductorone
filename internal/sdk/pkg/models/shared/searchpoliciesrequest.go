// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SearchPoliciesRequestPolicyTypes string

const (
	SearchPoliciesRequestPolicyTypesPolicyTypeUnspecified   SearchPoliciesRequestPolicyTypes = "POLICY_TYPE_UNSPECIFIED"
	SearchPoliciesRequestPolicyTypesPolicyTypeGrant         SearchPoliciesRequestPolicyTypes = "POLICY_TYPE_GRANT"
	SearchPoliciesRequestPolicyTypesPolicyTypeRevoke        SearchPoliciesRequestPolicyTypes = "POLICY_TYPE_REVOKE"
	SearchPoliciesRequestPolicyTypesPolicyTypeCertify       SearchPoliciesRequestPolicyTypes = "POLICY_TYPE_CERTIFY"
	SearchPoliciesRequestPolicyTypesPolicyTypeAccessRequest SearchPoliciesRequestPolicyTypes = "POLICY_TYPE_ACCESS_REQUEST"
	SearchPoliciesRequestPolicyTypesPolicyTypeProvision     SearchPoliciesRequestPolicyTypes = "POLICY_TYPE_PROVISION"
)

func (e SearchPoliciesRequestPolicyTypes) ToPointer() *SearchPoliciesRequestPolicyTypes {
	return &e
}

func (e *SearchPoliciesRequestPolicyTypes) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "POLICY_TYPE_UNSPECIFIED":
		fallthrough
	case "POLICY_TYPE_GRANT":
		fallthrough
	case "POLICY_TYPE_REVOKE":
		fallthrough
	case "POLICY_TYPE_CERTIFY":
		fallthrough
	case "POLICY_TYPE_ACCESS_REQUEST":
		fallthrough
	case "POLICY_TYPE_PROVISION":
		*e = SearchPoliciesRequestPolicyTypes(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SearchPoliciesRequestPolicyTypes: %v", v)
	}
}

// SearchPoliciesRequest - The SearchPoliciesRequest message.
type SearchPoliciesRequest struct {
	// The displayName field.
	DisplayName *string `json:"displayName,omitempty"`
	// The pageSize field.
	PageSize *float64 `json:"pageSize,omitempty"`
	// The pageToken field.
	PageToken *string `json:"pageToken,omitempty"`
	// The policyTypes field.
	PolicyTypes []SearchPoliciesRequestPolicyTypes `json:"policyTypes,omitempty"`
	// The query field.
	Query *string `json:"query,omitempty"`
}
