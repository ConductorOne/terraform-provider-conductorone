// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// AppUserAppUserType - The appUserType field.
type AppUserAppUserType string

const (
	AppUserAppUserTypeAppUserTypeUnspecified    AppUserAppUserType = "APP_USER_TYPE_UNSPECIFIED"
	AppUserAppUserTypeAppUserTypeUser           AppUserAppUserType = "APP_USER_TYPE_USER"
	AppUserAppUserTypeAppUserTypeServiceAccount AppUserAppUserType = "APP_USER_TYPE_SERVICE_ACCOUNT"
	AppUserAppUserTypeAppUserTypeSystemAccount  AppUserAppUserType = "APP_USER_TYPE_SYSTEM_ACCOUNT"
)

func (e AppUserAppUserType) ToPointer() *AppUserAppUserType {
	return &e
}

func (e *AppUserAppUserType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "APP_USER_TYPE_UNSPECIFIED":
		fallthrough
	case "APP_USER_TYPE_USER":
		fallthrough
	case "APP_USER_TYPE_SERVICE_ACCOUNT":
		fallthrough
	case "APP_USER_TYPE_SYSTEM_ACCOUNT":
		*e = AppUserAppUserType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AppUserAppUserType: %v", v)
	}
}

// AppUser - The AppUser message.
type AppUser struct {
	// The AppUserStatus message.
	AppUserStatus *AppUserStatus `json:"status,omitempty"`
	// The appId field.
	AppID *string `json:"appId,omitempty"`
	// The appUserType field.
	AppUserType *AppUserAppUserType `json:"appUserType,omitempty"`
	CreatedAt   *time.Time          `json:"createdAt,omitempty"`
	DeletedAt   *time.Time          `json:"deletedAt,omitempty"`
	// The displayName field.
	DisplayName *string `json:"displayName,omitempty"`
	// The email field.
	Email *string `json:"email,omitempty"`
	// The id field.
	ID *string `json:"id,omitempty"`
	// The identityUserId field.
	IdentityUserID *string                `json:"identityUserId,omitempty"`
	Profile        map[string]interface{} `json:"profile,omitempty"`
	UpdatedAt      *time.Time             `json:"updatedAt,omitempty"`
}
