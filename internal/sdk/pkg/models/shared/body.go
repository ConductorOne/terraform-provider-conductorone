// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// Body - The Body message.
type Body struct {
	// If your receiver returns HTTP Status Code 202 Accepted, it MUST send its resposne to this URL as a POST
	//  message body.
	//
	//  If your receiver returns any other status code, it is expected to not use the callback url.
	//
	//  This value will match the "Webhook-Callback-Url" header.
	CallbackURL *string `json:"callbackUrl,omitempty"`
	// The type of event that triggered this Webhook.
	//
	//  This value will match the "Webhook-Event" header.
	//
	//  The value will be one of:
	//  - "c1.webhooks.v1.PayloadTest"
	//  - "c1.webhooks.v1.PayloadPolicyApprovalStep"
	//  - "c1.webhooks.v1.PayloadPolicyPostAction"
	//  - "c1.webhooks.v1.PayloadProvisionStep"
	Event *string `json:"event,omitempty"`
	// Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
	Payload map[string]interface{} `json:"payload,omitempty"`
	// version contains the constant value "v1". Future versions of the Webhook body will use a different string.
	//
	//  This value will match the "Webhook-Version" header.
	Version *string `json:"version,omitempty"`
	// Unique ID for this Webhook. Your receiver should only process this ID once.
	//
	//  This value will match the "Webhook-Id" header.
	WebhookID *string `json:"webhookId,omitempty"`
}

func (o *Body) GetCallbackURL() *string {
	if o == nil {
		return nil
	}
	return o.CallbackURL
}

func (o *Body) GetEvent() *string {
	if o == nil {
		return nil
	}
	return o.Event
}

func (o *Body) GetPayload() map[string]interface{} {
	if o == nil {
		return nil
	}
	return o.Payload
}

func (o *Body) GetVersion() *string {
	if o == nil {
		return nil
	}
	return o.Version
}

func (o *Body) GetWebhookID() *string {
	if o == nil {
		return nil
	}
	return o.WebhookID
}
