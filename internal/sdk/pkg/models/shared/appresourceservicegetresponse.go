// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
)

// AppResourceServiceGetResponseExpanded - Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
type AppResourceServiceGetResponseExpanded struct {
	// The type of the serialized message.
	AtType *string `json:"@type,omitempty"`

	AdditionalProperties interface{} `json:"-"`
}
type _AppResourceServiceGetResponseExpanded AppResourceServiceGetResponseExpanded

func (c *AppResourceServiceGetResponseExpanded) UnmarshalJSON(bs []byte) error {
	data := _AppResourceServiceGetResponseExpanded{}

	if err := json.Unmarshal(bs, &data); err != nil {
		return err
	}
	*c = AppResourceServiceGetResponseExpanded(data)

	additionalFields := make(map[string]interface{})

	if err := json.Unmarshal(bs, &additionalFields); err != nil {
		return err
	}
	delete(additionalFields, "@type")

	c.AdditionalProperties = additionalFields

	return nil
}

func (c AppResourceServiceGetResponseExpanded) MarshalJSON() ([]byte, error) {
	out := map[string]interface{}{}
	bs, err := json.Marshal(_AppResourceServiceGetResponseExpanded(c))
	if err != nil {
		return nil, err
	}

	if err := json.Unmarshal([]byte(bs), &out); err != nil {
		return nil, err
	}

	bs, err = json.Marshal(c.AdditionalProperties)
	if err != nil {
		return nil, err
	}

	if err := json.Unmarshal([]byte(bs), &out); err != nil {
		return nil, err
	}

	return json.Marshal(out)
}

// AppResourceServiceGetResponse - The AppResourceServiceGetResponse message.
type AppResourceServiceGetResponse struct {
	// The AppResourceView message.
	AppResourceView *AppResourceView `json:"appResourceView,omitempty"`
	// The expanded field.
	Expanded []AppResourceServiceGetResponseExpanded `json:"expanded,omitempty"`
}
