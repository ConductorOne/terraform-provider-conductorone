// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

// The AppGroupApproval object provides the configuration for setting a group as the approvers of an approval policy step.
type AppGroupApproval struct {
	// Configuration to allow self approval if the target user is a member of the group during this step.
	AllowSelfApproval *bool `json:"allowSelfApproval,omitempty"`
	// The ID of the group specified for approval.
	AppGroupID *string `json:"appGroupId,omitempty"`
	// The ID of the app that contains the group specified for approval.
	AppID *string `json:"appId,omitempty"`
	// Configuration to allow a fallback if the group is empty.
	Fallback *bool `json:"fallback,omitempty"`
	// Configuration to specific which users to fallback to if fallback is enabled and the group is empty.
	FallbackUserIds []string `json:"fallbackUserIds,omitempty"`
}

func (o *AppGroupApproval) GetAllowSelfApproval() *bool {
	if o == nil {
		return nil
	}
	return o.AllowSelfApproval
}

func (o *AppGroupApproval) GetAppGroupID() *string {
	if o == nil {
		return nil
	}
	return o.AppGroupID
}

func (o *AppGroupApproval) GetAppID() *string {
	if o == nil {
		return nil
	}
	return o.AppID
}

func (o *AppGroupApproval) GetFallback() *bool {
	if o == nil {
		return nil
	}
	return o.Fallback
}

func (o *AppGroupApproval) GetFallbackUserIds() []string {
	if o == nil {
		return nil
	}
	return o.FallbackUserIds
}
