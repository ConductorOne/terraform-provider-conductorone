// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/conductorone/terraform-provider-conductorone/internal/sdk/internal/utils"
	"time"
)

// The ConflictMonitor message.
type ConflictMonitor struct {
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	DeletedAt *time.Time `json:"deletedAt,omitempty"`
	// The description field.
	Description *string `json:"description,omitempty"`
	// The displayName field.
	DisplayName *string `json:"displayName,omitempty"`
	// The enabled field.
	Enabled *bool `json:"enabled,omitempty"`
	// The entitlementSetAId field.
	EntitlementSetAID *string `json:"entitlementSetAId,omitempty"`
	// The entitlementSetBId field.
	EntitlementSetBID *string `json:"entitlementSetBId,omitempty"`
	// The id field.
	ID *string `json:"id,omitempty"`
	// The NotificationConfig message.
	NotificationConfig *NotificationConfig `json:"notificationConfig,omitempty"`
	UpdatedAt          *time.Time          `json:"updatedAt,omitempty"`
}

func (c ConflictMonitor) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *ConflictMonitor) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (o *ConflictMonitor) GetCreatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *ConflictMonitor) GetDeletedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.DeletedAt
}

func (o *ConflictMonitor) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *ConflictMonitor) GetDisplayName() *string {
	if o == nil {
		return nil
	}
	return o.DisplayName
}

func (o *ConflictMonitor) GetEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.Enabled
}

func (o *ConflictMonitor) GetEntitlementSetAID() *string {
	if o == nil {
		return nil
	}
	return o.EntitlementSetAID
}

func (o *ConflictMonitor) GetEntitlementSetBID() *string {
	if o == nil {
		return nil
	}
	return o.EntitlementSetBID
}

func (o *ConflictMonitor) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *ConflictMonitor) GetNotificationConfig() *NotificationConfig {
	if o == nil {
		return nil
	}
	return o.NotificationConfig
}

func (o *ConflictMonitor) GetUpdatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}
