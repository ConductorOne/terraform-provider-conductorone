// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

// RepeatedRules describe the constraints applied to `repeated` values
type RepeatedRules struct {
	// IgnoreEmpty specifies that the validation rules of this field should be
	//  evaluated only if the field is not empty
	IgnoreEmpty *bool       `json:"ignoreEmpty,omitempty"`
	Items       *FieldRules `json:"items,omitempty"`
	// MaxItems specifies that this field must have the specified number of
	//  items at a maximum
	MaxItems *string `json:"maxItems,omitempty"`
	// MinItems specifies that this field must have the specified number of
	//  items at a minimum
	MinItems *string `json:"minItems,omitempty"`
	// Unique specifies that all elements in this field must be unique. This
	//  contraint is only applicable to scalar and enum types (messages are not
	//  supported).
	Unique *bool `json:"unique,omitempty"`
}

func (r *RepeatedRules) GetIgnoreEmpty() *bool {
	if r == nil {
		return nil
	}
	return r.IgnoreEmpty
}

func (r *RepeatedRules) GetItems() *FieldRules {
	if r == nil {
		return nil
	}
	return r.Items
}

func (r *RepeatedRules) GetMaxItems() *string {
	if r == nil {
		return nil
	}
	return r.MaxItems
}

func (r *RepeatedRules) GetMinItems() *string {
	if r == nil {
		return nil
	}
	return r.MinItems
}

func (r *RepeatedRules) GetUnique() *bool {
	if r == nil {
		return nil
	}
	return r.Unique
}
