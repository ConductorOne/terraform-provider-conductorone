// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

// PolicyStepInput - The PolicyStep message.
//
// This message contains a oneof named step. Only a single field of the following list may be set at a time:
//   - approval
//   - provision
//   - accept
//   - reject
//   - wait
//   - form
type PolicyStepInput struct {
	Accept    *Accept        `json:"accept,omitempty"`
	Approval  *ApprovalInput `json:"approval,omitempty"`
	Form      any            `json:"form,omitempty"`
	Provision *Provision     `json:"provision,omitempty"`
	Reject    *Reject        `json:"reject,omitempty"`
	Wait      *Wait          `json:"wait,omitempty"`
}

func (p *PolicyStepInput) GetAccept() *Accept {
	if p == nil {
		return nil
	}
	return p.Accept
}

func (p *PolicyStepInput) GetApproval() *ApprovalInput {
	if p == nil {
		return nil
	}
	return p.Approval
}

func (p *PolicyStepInput) GetForm() any {
	if p == nil {
		return nil
	}
	return p.Form
}

func (p *PolicyStepInput) GetProvision() *Provision {
	if p == nil {
		return nil
	}
	return p.Provision
}

func (p *PolicyStepInput) GetReject() *Reject {
	if p == nil {
		return nil
	}
	return p.Reject
}

func (p *PolicyStepInput) GetWait() *Wait {
	if p == nil {
		return nil
	}
	return p.Wait
}
