// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/conductorone/terraform-provider-conductorone/internal/sdk/internal/utils"
	"time"
)

// The AppEntitlementWithExpired message.
type AppEntitlementWithExpired struct {
	// The appEntitlementId field.
	AppEntitlementID *string `json:"appEntitlementId,omitempty"`
	// The appId field.
	AppID   *string  `json:"appId,omitempty"`
	AppUser *AppUser `json:"appUser,omitempty"`
	// The appUserId field.
	AppUserID  *string    `json:"appUserId,omitempty"`
	Discovered *time.Time `json:"discovered,omitempty"`
	Expired    *time.Time `json:"expired,omitempty"`
	// The grantReasons field.
	GrantReasons []GrantReason `json:"grantReasons,omitempty"`
	// The grantSources field.
	GrantSources []AppEntitlementRef `json:"grantSources,omitempty"`
	User         *User               `json:"user,omitempty"`
}

func (a AppEntitlementWithExpired) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *AppEntitlementWithExpired) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (a *AppEntitlementWithExpired) GetAppEntitlementID() *string {
	if a == nil {
		return nil
	}
	return a.AppEntitlementID
}

func (a *AppEntitlementWithExpired) GetAppID() *string {
	if a == nil {
		return nil
	}
	return a.AppID
}

func (a *AppEntitlementWithExpired) GetAppUser() *AppUser {
	if a == nil {
		return nil
	}
	return a.AppUser
}

func (a *AppEntitlementWithExpired) GetAppUserID() *string {
	if a == nil {
		return nil
	}
	return a.AppUserID
}

func (a *AppEntitlementWithExpired) GetDiscovered() *time.Time {
	if a == nil {
		return nil
	}
	return a.Discovered
}

func (a *AppEntitlementWithExpired) GetExpired() *time.Time {
	if a == nil {
		return nil
	}
	return a.Expired
}

func (a *AppEntitlementWithExpired) GetGrantReasons() []GrantReason {
	if a == nil {
		return nil
	}
	return a.GrantReasons
}

func (a *AppEntitlementWithExpired) GetGrantSources() []AppEntitlementRef {
	if a == nil {
		return nil
	}
	return a.GrantSources
}

func (a *AppEntitlementWithExpired) GetUser() *User {
	if a == nil {
		return nil
	}
	return a.User
}
