// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/conductorone/terraform-provider-conductorone/internal/sdk/internal/utils"
	"time"
)

// The EscalationInstance message.
//
// This message contains a oneof named escalation_policy. Only a single field of the following list may be set at a time:
//   - replacePolicy
//   - reassignToApprovers
type EscalationInstance struct {
	// The alreadyEscalated field.
	AlreadyEscalated *bool `json:"alreadyEscalated,omitempty"`
	// The escalationComment field.
	EscalationComment *string    `json:"escalationComment,omitempty"`
	ExpiresAt         *time.Time `json:"expiresAt,omitempty"`
	// The ReassignToApprovers message.
	ReassignToApprovers *ReassignToApprovers `json:"reassignToApprovers,omitempty"`
	// The ReplacePolicy message.
	ReplacePolicy *ReplacePolicy `json:"replacePolicy,omitempty"`
}

func (e EscalationInstance) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(e, "", false)
}

func (e *EscalationInstance) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &e, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (e *EscalationInstance) GetAlreadyEscalated() *bool {
	if e == nil {
		return nil
	}
	return e.AlreadyEscalated
}

func (e *EscalationInstance) GetEscalationComment() *string {
	if e == nil {
		return nil
	}
	return e.EscalationComment
}

func (e *EscalationInstance) GetExpiresAt() *time.Time {
	if e == nil {
		return nil
	}
	return e.ExpiresAt
}

func (e *EscalationInstance) GetReassignToApprovers() *ReassignToApprovers {
	if e == nil {
		return nil
	}
	return e.ReassignToApprovers
}

func (e *EscalationInstance) GetReplacePolicy() *ReplacePolicy {
	if e == nil {
		return nil
	}
	return e.ReplacePolicy
}
