// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/conductorone/terraform-provider-conductorone/internal/sdk/internal/utils"
	"time"
)

// State - The state field.
type State string

const (
	StateWorkflowExecutionStateUnspecified  State = "WORKFLOW_EXECUTION_STATE_UNSPECIFIED"
	StateWorkflowExecutionStatePending      State = "WORKFLOW_EXECUTION_STATE_PENDING"
	StateWorkflowExecutionStateCreating     State = "WORKFLOW_EXECUTION_STATE_CREATING"
	StateWorkflowExecutionStateGetStep      State = "WORKFLOW_EXECUTION_STATE_GET_STEP"
	StateWorkflowExecutionStateProcessStep  State = "WORKFLOW_EXECUTION_STATE_PROCESS_STEP"
	StateWorkflowExecutionStateCompleteStep State = "WORKFLOW_EXECUTION_STATE_COMPLETE_STEP"
	StateWorkflowExecutionStateDone         State = "WORKFLOW_EXECUTION_STATE_DONE"
	StateWorkflowExecutionStateError        State = "WORKFLOW_EXECUTION_STATE_ERROR"
)

func (e State) ToPointer() *State {
	return &e
}
func (e *State) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "WORKFLOW_EXECUTION_STATE_UNSPECIFIED":
		fallthrough
	case "WORKFLOW_EXECUTION_STATE_PENDING":
		fallthrough
	case "WORKFLOW_EXECUTION_STATE_CREATING":
		fallthrough
	case "WORKFLOW_EXECUTION_STATE_GET_STEP":
		fallthrough
	case "WORKFLOW_EXECUTION_STATE_PROCESS_STEP":
		fallthrough
	case "WORKFLOW_EXECUTION_STATE_COMPLETE_STEP":
		fallthrough
	case "WORKFLOW_EXECUTION_STATE_DONE":
		fallthrough
	case "WORKFLOW_EXECUTION_STATE_ERROR":
		*e = State(v)
		return nil
	default:
		return fmt.Errorf("invalid value for State: %v", v)
	}
}

// The WorkflowExecution message.
type WorkflowExecution struct {
	CompletedAt *time.Time `json:"completedAt,omitempty"`
	// The WorkflowContext message.
	WorkflowContext *WorkflowContext `json:"context,omitempty"`
	CreatedAt       *time.Time       `json:"createdAt,omitempty"`
	DeletedAt       *time.Time       `json:"deletedAt,omitempty"`
	Duration        *string          `json:"duration,omitempty"`
	// The id field.
	ID *string `json:"id,omitempty"`
	// The state field.
	State     *State     `json:"state,omitempty"`
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
	// The workflowTemplateId field.
	WorkflowTemplateID *string `json:"workflowTemplateId,omitempty"`
}

func (w WorkflowExecution) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(w, "", false)
}

func (w *WorkflowExecution) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &w, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *WorkflowExecution) GetCompletedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.CompletedAt
}

func (o *WorkflowExecution) GetWorkflowContext() *WorkflowContext {
	if o == nil {
		return nil
	}
	return o.WorkflowContext
}

func (o *WorkflowExecution) GetCreatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *WorkflowExecution) GetDeletedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.DeletedAt
}

func (o *WorkflowExecution) GetDuration() *string {
	if o == nil {
		return nil
	}
	return o.Duration
}

func (o *WorkflowExecution) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *WorkflowExecution) GetState() *State {
	if o == nil {
		return nil
	}
	return o.State
}

func (o *WorkflowExecution) GetUpdatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}

func (o *WorkflowExecution) GetWorkflowTemplateID() *string {
	if o == nil {
		return nil
	}
	return o.WorkflowTemplateID
}
