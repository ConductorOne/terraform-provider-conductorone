// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/conductorone/terraform-provider-conductorone/internal/sdk/internal/utils"
	"time"
)

// FunctionCommit represents a single commit in a function's history
type FunctionCommit struct {
	// The author field.
	Author    *string    `json:"author,omitempty"`
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	// The functionId field.
	FunctionID *string `json:"functionId,omitempty"`
	// The id field.
	ID *string `json:"id,omitempty"`
	// The message field.
	Message *string `json:"message,omitempty"`
}

func (f FunctionCommit) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(f, "", false)
}

func (f *FunctionCommit) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &f, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (o *FunctionCommit) GetAuthor() *string {
	if o == nil {
		return nil
	}
	return o.Author
}

func (o *FunctionCommit) GetCreatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *FunctionCommit) GetFunctionID() *string {
	if o == nil {
		return nil
	}
	return o.FunctionID
}

func (o *FunctionCommit) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *FunctionCommit) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}
