// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/conductorone/terraform-provider-conductorone/internal/sdk/internal/utils"
	"time"
)

// ReferenceStrength - GrantReasonReferenceStrength is used to indicate the strength of the reference to the reason.
//
//	This is used to determine if a grant should be removed when all strong reasons are removed.
type ReferenceStrength string

const (
	ReferenceStrengthGrantReasonReferenceStrengthUnspecified ReferenceStrength = "GRANT_REASON_REFERENCE_STRENGTH_UNSPECIFIED"
	ReferenceStrengthGrantReasonReferenceStrengthWeak        ReferenceStrength = "GRANT_REASON_REFERENCE_STRENGTH_WEAK"
	ReferenceStrengthGrantReasonReferenceStrengthStrong      ReferenceStrength = "GRANT_REASON_REFERENCE_STRENGTH_STRONG"
)

func (e ReferenceStrength) ToPointer() *ReferenceStrength {
	return &e
}
func (e *ReferenceStrength) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "GRANT_REASON_REFERENCE_STRENGTH_UNSPECIFIED":
		fallthrough
	case "GRANT_REASON_REFERENCE_STRENGTH_WEAK":
		fallthrough
	case "GRANT_REASON_REFERENCE_STRENGTH_STRONG":
		*e = ReferenceStrength(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ReferenceStrength: %v", v)
	}
}

// The GrantReason message.
type GrantReason struct {
	// The ID of the app entitlement that is associated with the grant reason.
	AppEntitlementID *string `json:"appEntitlementId,omitempty"`
	// The ID of the app that is associated with the grant reason.
	AppID *string `json:"appId,omitempty"`
	// The ID of the app user that is associated with the grant reason.
	AppUserID *string    `json:"appUserId,omitempty"`
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	DeletedAt *time.Time `json:"deletedAt,omitempty"`
	// This is the other part of the derived ID which include the details like ticket_id, group_id, etc. This provides the uniqueness.
	DerivedIDData *string `json:"derivedIdData,omitempty"`
	// This is one part of the derived ID, indicating the type, like "ticket" or "group"
	DerivedIDType   *string    `json:"derivedIdType,omitempty"`
	ReasonExpiresAt *time.Time `json:"reasonExpiresAt,omitempty"`
	// GrantReasonReferenceStrength is used to indicate the strength of the reference to the reason.
	//  This is used to determine if a grant should be removed when all strong reasons are removed.
	ReferenceStrength *ReferenceStrength `json:"referenceStrength,omitempty"`
	UpdatedAt         *time.Time         `json:"updatedAt,omitempty"`
}

func (g GrantReason) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GrantReason) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (o *GrantReason) GetAppEntitlementID() *string {
	if o == nil {
		return nil
	}
	return o.AppEntitlementID
}

func (o *GrantReason) GetAppID() *string {
	if o == nil {
		return nil
	}
	return o.AppID
}

func (o *GrantReason) GetAppUserID() *string {
	if o == nil {
		return nil
	}
	return o.AppUserID
}

func (o *GrantReason) GetCreatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *GrantReason) GetDeletedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.DeletedAt
}

func (o *GrantReason) GetDerivedIDData() *string {
	if o == nil {
		return nil
	}
	return o.DerivedIDData
}

func (o *GrantReason) GetDerivedIDType() *string {
	if o == nil {
		return nil
	}
	return o.DerivedIDType
}

func (o *GrantReason) GetReasonExpiresAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.ReasonExpiresAt
}

func (o *GrantReason) GetReferenceStrength() *ReferenceStrength {
	if o == nil {
		return nil
	}
	return o.ReferenceStrength
}

func (o *GrantReason) GetUpdatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}
