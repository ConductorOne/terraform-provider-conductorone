// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/conductorone/terraform-provider-conductorone/internal/sdk/internal/utils"
	"time"
)

// ExporterState - The state field.
type ExporterState string

const (
	ExporterStateExportStateUnspecified ExporterState = "EXPORT_STATE_UNSPECIFIED"
	ExporterStateExportStateExporting   ExporterState = "EXPORT_STATE_EXPORTING"
	ExporterStateExportStateWaiting     ExporterState = "EXPORT_STATE_WAITING"
	ExporterStateExportStateError       ExporterState = "EXPORT_STATE_ERROR"
)

func (e ExporterState) ToPointer() *ExporterState {
	return &e
}
func (e *ExporterState) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "EXPORT_STATE_UNSPECIFIED":
		fallthrough
	case "EXPORT_STATE_EXPORTING":
		fallthrough
	case "EXPORT_STATE_WAITING":
		fallthrough
	case "EXPORT_STATE_ERROR":
		*e = ExporterState(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ExporterState: %v", v)
	}
}

// The Exporter message.
//
// This message contains a oneof named export_to. Only a single field of the following list may be set at a time:
//   - datasource
type Exporter struct {
	CreatedAt  *time.Time          `json:"createdAt,omitempty"`
	Datasource *ExportToDatasource `json:"datasource,omitempty"`
	DeletedAt  *time.Time          `json:"deletedAt,omitempty"`
	// The displayName field.
	DisplayName *string `json:"displayName,omitempty"`
	// The exportId field.
	ExportID *string `json:"exportId,omitempty"`
	// The state field.
	State     *ExporterState `json:"state,omitempty"`
	UpdatedAt *time.Time     `json:"updatedAt,omitempty"`
	// we've synchorized this far
	WatermarkEventID *string `json:"watermarkEventId,omitempty"`
}

func (e Exporter) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(e, "", false)
}

func (e *Exporter) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &e, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (e *Exporter) GetCreatedAt() *time.Time {
	if e == nil {
		return nil
	}
	return e.CreatedAt
}

func (e *Exporter) GetDatasource() *ExportToDatasource {
	if e == nil {
		return nil
	}
	return e.Datasource
}

func (e *Exporter) GetDeletedAt() *time.Time {
	if e == nil {
		return nil
	}
	return e.DeletedAt
}

func (e *Exporter) GetDisplayName() *string {
	if e == nil {
		return nil
	}
	return e.DisplayName
}

func (e *Exporter) GetExportID() *string {
	if e == nil {
		return nil
	}
	return e.ExportID
}

func (e *Exporter) GetState() *ExporterState {
	if e == nil {
		return nil
	}
	return e.State
}

func (e *Exporter) GetUpdatedAt() *time.Time {
	if e == nil {
		return nil
	}
	return e.UpdatedAt
}

func (e *Exporter) GetWatermarkEventID() *string {
	if e == nil {
		return nil
	}
	return e.WatermarkEventID
}
