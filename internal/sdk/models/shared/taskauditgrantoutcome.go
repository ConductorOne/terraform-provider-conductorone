// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// TaskAuditGrantOutcomeOutcome - The outcome field.
type TaskAuditGrantOutcomeOutcome string

const (
	TaskAuditGrantOutcomeOutcomeGrantOutcomeUnspecified  TaskAuditGrantOutcomeOutcome = "GRANT_OUTCOME_UNSPECIFIED"
	TaskAuditGrantOutcomeOutcomeGrantOutcomeGranted      TaskAuditGrantOutcomeOutcome = "GRANT_OUTCOME_GRANTED"
	TaskAuditGrantOutcomeOutcomeGrantOutcomeDenied       TaskAuditGrantOutcomeOutcome = "GRANT_OUTCOME_DENIED"
	TaskAuditGrantOutcomeOutcomeGrantOutcomeError        TaskAuditGrantOutcomeOutcome = "GRANT_OUTCOME_ERROR"
	TaskAuditGrantOutcomeOutcomeGrantOutcomeCancelled    TaskAuditGrantOutcomeOutcome = "GRANT_OUTCOME_CANCELLED"
	TaskAuditGrantOutcomeOutcomeGrantOutcomeWaitTimedOut TaskAuditGrantOutcomeOutcome = "GRANT_OUTCOME_WAIT_TIMED_OUT"
)

func (e TaskAuditGrantOutcomeOutcome) ToPointer() *TaskAuditGrantOutcomeOutcome {
	return &e
}
func (e *TaskAuditGrantOutcomeOutcome) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "GRANT_OUTCOME_UNSPECIFIED":
		fallthrough
	case "GRANT_OUTCOME_GRANTED":
		fallthrough
	case "GRANT_OUTCOME_DENIED":
		fallthrough
	case "GRANT_OUTCOME_ERROR":
		fallthrough
	case "GRANT_OUTCOME_CANCELLED":
		fallthrough
	case "GRANT_OUTCOME_WAIT_TIMED_OUT":
		*e = TaskAuditGrantOutcomeOutcome(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TaskAuditGrantOutcomeOutcome: %v", v)
	}
}

// The TaskAuditGrantOutcome message.
type TaskAuditGrantOutcome struct {
	// The outcome field.
	Outcome *TaskAuditGrantOutcomeOutcome `json:"outcome,omitempty"`
}

func (t *TaskAuditGrantOutcome) GetOutcome() *TaskAuditGrantOutcomeOutcome {
	if t == nil {
		return nil
	}
	return t.Outcome
}
