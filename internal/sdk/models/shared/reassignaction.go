// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

// The ReassignAction message.
//
// This message contains a oneof named assignee_user_identifier. Only a single field of the following list may be set at a time:
//   - assigneeUserIdCel
//   - assigneeUserRef
//
// This message contains a oneof named subject_user_identifier. Only a single field of the following list may be set at a time:
//   - subjectUserIdCel
//   - subjectUserRef
type ReassignAction struct {
	// The assigneeUserIdCel field.
	// This field is part of the `assignee_user_identifier` oneof.
	// See the documentation for `c1.api.automations.v1.ReassignAction` for more details.
	AssigneeUserIDCel *string  `json:"assigneeUserIdCel,omitempty"`
	AssigneeUserRef   *UserRef `json:"assigneeUserRef,omitempty"`
	// The subjectUserIdCel field.
	// This field is part of the `subject_user_identifier` oneof.
	// See the documentation for `c1.api.automations.v1.ReassignAction` for more details.
	SubjectUserIDCel *string  `json:"subjectUserIdCel,omitempty"`
	SubjectUserRef   *UserRef `json:"subjectUserRef,omitempty"`
	// If true, the step will use the subject user of the automation as the subject.
	UseSubjectUser *bool `json:"useSubjectUser,omitempty"`
}

func (r *ReassignAction) GetAssigneeUserIDCel() *string {
	if r == nil {
		return nil
	}
	return r.AssigneeUserIDCel
}

func (r *ReassignAction) GetAssigneeUserRef() *UserRef {
	if r == nil {
		return nil
	}
	return r.AssigneeUserRef
}

func (r *ReassignAction) GetSubjectUserIDCel() *string {
	if r == nil {
		return nil
	}
	return r.SubjectUserIDCel
}

func (r *ReassignAction) GetSubjectUserRef() *UserRef {
	if r == nil {
		return nil
	}
	return r.SubjectUserRef
}

func (r *ReassignAction) GetUseSubjectUser() *bool {
	if r == nil {
		return nil
	}
	return r.UseSubjectUser
}
