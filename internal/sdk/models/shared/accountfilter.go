// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AccountType - The accountType field.
type AccountType string

const (
	AccountTypeAppUserTypeUnspecified    AccountType = "APP_USER_TYPE_UNSPECIFIED"
	AccountTypeAppUserTypeUser           AccountType = "APP_USER_TYPE_USER"
	AccountTypeAppUserTypeServiceAccount AccountType = "APP_USER_TYPE_SERVICE_ACCOUNT"
	AccountTypeAppUserTypeSystemAccount  AccountType = "APP_USER_TYPE_SYSTEM_ACCOUNT"
)

func (e AccountType) ToPointer() *AccountType {
	return &e
}
func (e *AccountType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "APP_USER_TYPE_UNSPECIFIED":
		fallthrough
	case "APP_USER_TYPE_USER":
		fallthrough
	case "APP_USER_TYPE_SERVICE_ACCOUNT":
		fallthrough
	case "APP_USER_TYPE_SYSTEM_ACCOUNT":
		*e = AccountType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AccountType: %v", v)
	}
}

// The AccountFilter message.
type AccountFilter struct {
	// The accountType field.
	AccountType *AccountType `json:"accountType,omitempty"`
}

func (o *AccountFilter) GetAccountType() *AccountType {
	if o == nil {
		return nil
	}
	return o.AccountType
}
