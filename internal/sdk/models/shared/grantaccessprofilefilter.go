// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// FilterType - The filterType field.
type FilterType string

const (
	FilterTypeAccessProfileFilterTypeUnspecified     FilterType = "ACCESS_PROFILE_FILTER_TYPE_UNSPECIFIED"
	FilterTypeAccessProfileFilterTypeIncludeAll      FilterType = "ACCESS_PROFILE_FILTER_TYPE_INCLUDE_ALL"
	FilterTypeAccessProfileFilterTypeExcludeAll      FilterType = "ACCESS_PROFILE_FILTER_TYPE_EXCLUDE_ALL"
	FilterTypeAccessProfileFilterTypeExcludeSpecific FilterType = "ACCESS_PROFILE_FILTER_TYPE_EXCLUDE_SPECIFIC"
)

func (e FilterType) ToPointer() *FilterType {
	return &e
}
func (e *FilterType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ACCESS_PROFILE_FILTER_TYPE_UNSPECIFIED":
		fallthrough
	case "ACCESS_PROFILE_FILTER_TYPE_INCLUDE_ALL":
		fallthrough
	case "ACCESS_PROFILE_FILTER_TYPE_EXCLUDE_ALL":
		fallthrough
	case "ACCESS_PROFILE_FILTER_TYPE_EXCLUDE_SPECIFIC":
		*e = FilterType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FilterType: %v", v)
	}
}

// The GrantAccessProfileFilter message.
type GrantAccessProfileFilter struct {
	// List of access profiles to exclude if type is EXCLUDE_SPECIFIC
	ExcludedAccessProfileIds []string `json:"excludedAccessProfileIds,omitempty"`
	// The filterType field.
	FilterType *FilterType `json:"filterType,omitempty"`
}

func (o *GrantAccessProfileFilter) GetExcludedAccessProfileIds() []string {
	if o == nil {
		return nil
	}
	return o.ExcludedAccessProfileIds
}

func (o *GrantAccessProfileFilter) GetFilterType() *FilterType {
	if o == nil {
		return nil
	}
	return o.FilterType
}
