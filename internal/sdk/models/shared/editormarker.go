// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// Severity - The severity field.
type Severity string

const (
	SeverityUnknown Severity = "UNKNOWN"
	SeverityHint    Severity = "HINT"
	SeverityInfo    Severity = "INFO"
	SeverityWarning Severity = "WARNING"
	SeverityError   Severity = "ERROR"
)

func (e Severity) ToPointer() *Severity {
	return &e
}
func (e *Severity) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "UNKNOWN":
		fallthrough
	case "HINT":
		fallthrough
	case "INFO":
		fallthrough
	case "WARNING":
		fallthrough
	case "ERROR":
		*e = Severity(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Severity: %v", v)
	}
}

// The EditorMarker message.
type EditorMarker struct {
	// The endColumn field.
	EndColumn *int `json:"endColumn,omitempty"`
	// The endLineNumber field.
	EndLineNumber *int `json:"endLineNumber,omitempty"`
	// The message field.
	Message *string `json:"message,omitempty"`
	// The severity field.
	Severity *Severity `json:"severity,omitempty"`
	// The startColumn field.
	StartColumn *int `json:"startColumn,omitempty"`
	// The startLineNumber field.
	StartLineNumber *int `json:"startLineNumber,omitempty"`
}

func (e *EditorMarker) GetEndColumn() *int {
	if e == nil {
		return nil
	}
	return e.EndColumn
}

func (e *EditorMarker) GetEndLineNumber() *int {
	if e == nil {
		return nil
	}
	return e.EndLineNumber
}

func (e *EditorMarker) GetMessage() *string {
	if e == nil {
		return nil
	}
	return e.Message
}

func (e *EditorMarker) GetSeverity() *Severity {
	if e == nil {
		return nil
	}
	return e.Severity
}

func (e *EditorMarker) GetStartColumn() *int {
	if e == nil {
		return nil
	}
	return e.StartColumn
}

func (e *EditorMarker) GetStartLineNumber() *int {
	if e == nil {
		return nil
	}
	return e.StartLineNumber
}
