// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/conductorone/terraform-provider-conductorone/internal/sdk/internal/utils"
	"time"
)

// AppUserCredential - A credentials for the Application User that represents an account in the application.
//
// This message contains a oneof named credential. Only a single field of the following list may be set at a time:
//   - encryptedData
type AppUserCredential struct {
	// The ID of the application.
	AppID *string `json:"appId,omitempty"`
	// A unique identifier of the application user.
	AppUserID     *string        `json:"appUserId,omitempty"`
	CreatedAt     *time.Time     `json:"createdAt,omitempty"`
	DeletedAt     *time.Time     `json:"deletedAt,omitempty"`
	EncryptedData *EncryptedData `json:"encryptedData,omitempty"`
	ExpiresAt     *time.Time     `json:"expiresAt,omitempty"`
	// A unique identifier of the credential.
	ID        *string    `json:"id,omitempty"`
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

func (a AppUserCredential) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *AppUserCredential) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (a *AppUserCredential) GetAppID() *string {
	if a == nil {
		return nil
	}
	return a.AppID
}

func (a *AppUserCredential) GetAppUserID() *string {
	if a == nil {
		return nil
	}
	return a.AppUserID
}

func (a *AppUserCredential) GetCreatedAt() *time.Time {
	if a == nil {
		return nil
	}
	return a.CreatedAt
}

func (a *AppUserCredential) GetDeletedAt() *time.Time {
	if a == nil {
		return nil
	}
	return a.DeletedAt
}

func (a *AppUserCredential) GetEncryptedData() *EncryptedData {
	if a == nil {
		return nil
	}
	return a.EncryptedData
}

func (a *AppUserCredential) GetExpiresAt() *time.Time {
	if a == nil {
		return nil
	}
	return a.ExpiresAt
}

func (a *AppUserCredential) GetID() *string {
	if a == nil {
		return nil
	}
	return a.ID
}

func (a *AppUserCredential) GetUpdatedAt() *time.Time {
	if a == nil {
		return nil
	}
	return a.UpdatedAt
}
