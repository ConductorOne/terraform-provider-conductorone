// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GrantFilterType - The grantFilterType field.
type GrantFilterType string

const (
	GrantFilterTypeGrantFilterTypeUnspecified GrantFilterType = "GRANT_FILTER_TYPE_UNSPECIFIED"
	GrantFilterTypeGrantFilterTypePermanent   GrantFilterType = "GRANT_FILTER_TYPE_PERMANENT"
	GrantFilterTypeGrantFilterTypeTemporary   GrantFilterType = "GRANT_FILTER_TYPE_TEMPORARY"
)

func (e GrantFilterType) ToPointer() *GrantFilterType {
	return &e
}
func (e *GrantFilterType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "GRANT_FILTER_TYPE_UNSPECIFIED":
		fallthrough
	case "GRANT_FILTER_TYPE_PERMANENT":
		fallthrough
	case "GRANT_FILTER_TYPE_TEMPORARY":
		*e = GrantFilterType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GrantFilterType: %v", v)
	}
}

// GrantJustificationType - The grantJustificationType field.
type GrantJustificationType string

const (
	GrantJustificationTypeGrantJustificationTypeUnspecified  GrantJustificationType = "GRANT_JUSTIFICATION_TYPE_UNSPECIFIED"
	GrantJustificationTypeGrantJustificationTypeAll          GrantJustificationType = "GRANT_JUSTIFICATION_TYPE_ALL"
	GrantJustificationTypeGrantJustificationTypeConductorOne GrantJustificationType = "GRANT_JUSTIFICATION_TYPE_CONDUCTOR_ONE"
	GrantJustificationTypeGrantJustificationTypeDirect       GrantJustificationType = "GRANT_JUSTIFICATION_TYPE_DIRECT"
)

func (e GrantJustificationType) ToPointer() *GrantJustificationType {
	return &e
}
func (e *GrantJustificationType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "GRANT_JUSTIFICATION_TYPE_UNSPECIFIED":
		fallthrough
	case "GRANT_JUSTIFICATION_TYPE_ALL":
		fallthrough
	case "GRANT_JUSTIFICATION_TYPE_CONDUCTOR_ONE":
		fallthrough
	case "GRANT_JUSTIFICATION_TYPE_DIRECT":
		*e = GrantJustificationType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GrantJustificationType: %v", v)
	}
}

// GrantSourceFilter - The grantSourceFilter field.
type GrantSourceFilter string

const (
	GrantSourceFilterGrantSourceFilterUnspecified GrantSourceFilter = "GRANT_SOURCE_FILTER_UNSPECIFIED"
	GrantSourceFilterGrantSourceFilterDirect      GrantSourceFilter = "GRANT_SOURCE_FILTER_DIRECT"
	GrantSourceFilterGrantSourceFilterInherited   GrantSourceFilter = "GRANT_SOURCE_FILTER_INHERITED"
)

func (e GrantSourceFilter) ToPointer() *GrantSourceFilter {
	return &e
}
func (e *GrantSourceFilter) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "GRANT_SOURCE_FILTER_UNSPECIFIED":
		fallthrough
	case "GRANT_SOURCE_FILTER_DIRECT":
		fallthrough
	case "GRANT_SOURCE_FILTER_INHERITED":
		*e = GrantSourceFilter(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GrantSourceFilter: %v", v)
	}
}

// The GrantFilter message.
type GrantFilter struct {
	// The grantFilterType field.
	GrantFilterType *GrantFilterType `json:"grantFilterType,omitempty"`
	// The grantJustificationType field.
	GrantJustificationType *GrantJustificationType `json:"grantJustificationType,omitempty"`
	// The grantSourceFilter field.
	GrantSourceFilter *GrantSourceFilter `json:"grantSourceFilter,omitempty"`
}

func (g *GrantFilter) GetGrantFilterType() *GrantFilterType {
	if g == nil {
		return nil
	}
	return g.GrantFilterType
}

func (g *GrantFilter) GetGrantJustificationType() *GrantJustificationType {
	if g == nil {
		return nil
	}
	return g.GrantJustificationType
}

func (g *GrantFilter) GetGrantSourceFilter() *GrantSourceFilter {
	if g == nil {
		return nil
	}
	return g.GrantSourceFilter
}
