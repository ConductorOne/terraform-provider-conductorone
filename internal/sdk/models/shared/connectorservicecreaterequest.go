// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/conductorone/terraform-provider-conductorone/internal/sdk/internal/utils"
)

// ConnectorServiceCreateRequestConfig - Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
type ConnectorServiceCreateRequestConfig struct {
	// The type of the serialized message.
	AtType               *string `json:"@type,omitempty"`
	AdditionalProperties any     `additionalProperties:"true" json:"-"`
}

func (c ConnectorServiceCreateRequestConfig) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *ConnectorServiceCreateRequestConfig) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (c *ConnectorServiceCreateRequestConfig) GetAtType() *string {
	if c == nil {
		return nil
	}
	return c.AtType
}

func (c *ConnectorServiceCreateRequestConfig) GetAdditionalProperties() any {
	if c == nil {
		return nil
	}
	return c.AdditionalProperties
}

// The ConnectorServiceCreateRequest message.
type ConnectorServiceCreateRequest struct {
	// The catalogId field.
	CatalogID *string `json:"catalogId,omitempty"`
	// Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
	Config *ConnectorServiceCreateRequestConfig `json:"config,omitempty"`
	// The description field.
	Description *string `json:"description,omitempty"`
	// The userIds field.
	UserIds []string `json:"userIds,omitempty"`
}

func (c *ConnectorServiceCreateRequest) GetCatalogID() *string {
	if c == nil {
		return nil
	}
	return c.CatalogID
}

func (c *ConnectorServiceCreateRequest) GetConfig() *ConnectorServiceCreateRequestConfig {
	if c == nil {
		return nil
	}
	return c.Config
}

func (c *ConnectorServiceCreateRequest) GetDescription() *string {
	if c == nil {
		return nil
	}
	return c.Description
}

func (c *ConnectorServiceCreateRequest) GetUserIds() []string {
	if c == nil {
		return nil
	}
	return c.UserIds
}
