// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/conductorone/terraform-provider-conductorone/internal/sdk/internal/utils"
	"time"
)

// The BundleAutomation message.
//
// This message contains a oneof named conditions. Only a single field of the following list may be set at a time:
//   - entitlements
type BundleAutomation struct {
	// The BundleAutomationCircuitBreaker message.
	BundleAutomationCircuitBreaker *BundleAutomationCircuitBreaker `json:"circuitBreaker,omitempty"`
	// The createTasks field.
	CreateTasks *bool      `json:"createTasks,omitempty"`
	CreatedAt   *time.Time `json:"createdAt,omitempty"`
	DeletedAt   *time.Time `json:"deletedAt,omitempty"`
	// The disableCircuitBreaker field.
	DisableCircuitBreaker *bool `json:"disableCircuitBreaker,omitempty"`
	// The enabled field.
	Enabled *bool `json:"enabled,omitempty"`
	// The BundleAutomationRuleEntitlement message.
	BundleAutomationRuleEntitlement *BundleAutomationRuleEntitlement `json:"entitlements,omitempty"`
	// The requestCatalogId field.
	RequestCatalogID *string `json:"requestCatalogId,omitempty"`
	// The BundleAutomationLastRunState message.
	BundleAutomationLastRunState *BundleAutomationLastRunState `json:"state,omitempty"`
	// The tenantId field.
	TenantID  *string    `json:"tenantId,omitempty"`
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

func (b BundleAutomation) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(b, "", false)
}

func (b *BundleAutomation) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &b, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (b *BundleAutomation) GetBundleAutomationCircuitBreaker() *BundleAutomationCircuitBreaker {
	if b == nil {
		return nil
	}
	return b.BundleAutomationCircuitBreaker
}

func (b *BundleAutomation) GetCreateTasks() *bool {
	if b == nil {
		return nil
	}
	return b.CreateTasks
}

func (b *BundleAutomation) GetCreatedAt() *time.Time {
	if b == nil {
		return nil
	}
	return b.CreatedAt
}

func (b *BundleAutomation) GetDeletedAt() *time.Time {
	if b == nil {
		return nil
	}
	return b.DeletedAt
}

func (b *BundleAutomation) GetDisableCircuitBreaker() *bool {
	if b == nil {
		return nil
	}
	return b.DisableCircuitBreaker
}

func (b *BundleAutomation) GetEnabled() *bool {
	if b == nil {
		return nil
	}
	return b.Enabled
}

func (b *BundleAutomation) GetBundleAutomationRuleEntitlement() *BundleAutomationRuleEntitlement {
	if b == nil {
		return nil
	}
	return b.BundleAutomationRuleEntitlement
}

func (b *BundleAutomation) GetRequestCatalogID() *string {
	if b == nil {
		return nil
	}
	return b.RequestCatalogID
}

func (b *BundleAutomation) GetBundleAutomationLastRunState() *BundleAutomationLastRunState {
	if b == nil {
		return nil
	}
	return b.BundleAutomationLastRunState
}

func (b *BundleAutomation) GetTenantID() *string {
	if b == nil {
		return nil
	}
	return b.TenantID
}

func (b *BundleAutomation) GetUpdatedAt() *time.Time {
	if b == nil {
		return nil
	}
	return b.UpdatedAt
}
