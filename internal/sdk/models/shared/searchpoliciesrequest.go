// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type PolicyTypes string

const (
	PolicyTypesPolicyTypeUnspecified   PolicyTypes = "POLICY_TYPE_UNSPECIFIED"
	PolicyTypesPolicyTypeGrant         PolicyTypes = "POLICY_TYPE_GRANT"
	PolicyTypesPolicyTypeRevoke        PolicyTypes = "POLICY_TYPE_REVOKE"
	PolicyTypesPolicyTypeCertify       PolicyTypes = "POLICY_TYPE_CERTIFY"
	PolicyTypesPolicyTypeAccessRequest PolicyTypes = "POLICY_TYPE_ACCESS_REQUEST"
	PolicyTypesPolicyTypeProvision     PolicyTypes = "POLICY_TYPE_PROVISION"
)

func (e PolicyTypes) ToPointer() *PolicyTypes {
	return &e
}

func (e *PolicyTypes) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "POLICY_TYPE_UNSPECIFIED":
		fallthrough
	case "POLICY_TYPE_GRANT":
		fallthrough
	case "POLICY_TYPE_REVOKE":
		fallthrough
	case "POLICY_TYPE_CERTIFY":
		fallthrough
	case "POLICY_TYPE_ACCESS_REQUEST":
		fallthrough
	case "POLICY_TYPE_PROVISION":
		*e = PolicyTypes(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PolicyTypes: %v", v)
	}
}

// SearchPoliciesRequest - Search Policies by a few properties.
type SearchPoliciesRequest struct {
	// Search for policies with a case insensitive match on the display name.
	DisplayName *string `json:"displayName,omitempty"`
	// The pageSize where 0 <= pageSize <= 100. Values < 10 will be set to 10. A value of 0 returns the default page size (currently 25)
	PageSize *int `json:"pageSize,omitempty"`
	// The pageToken field.
	PageToken *string `json:"pageToken,omitempty"`
	// The policy type to search on. This can be POLICY_TYPE_GRANT, POLICY_TYPE_REVOKE, POLICY_TYPE_CERTIFY, POLICY_TYPE_ACCESS_REQUEST, or POLICY_TYPE_PROVISION.
	PolicyTypes []PolicyTypes `json:"policyTypes,omitempty"`
	// Query the policies with a fuzzy search on display name and description.
	Query *string `json:"query,omitempty"`
	// The refs field.
	Refs []PolicyRef `json:"refs,omitempty"`
}

func (o *SearchPoliciesRequest) GetDisplayName() *string {
	if o == nil {
		return nil
	}
	return o.DisplayName
}

func (o *SearchPoliciesRequest) GetPageSize() *int {
	if o == nil {
		return nil
	}
	return o.PageSize
}

func (o *SearchPoliciesRequest) GetPageToken() *string {
	if o == nil {
		return nil
	}
	return o.PageToken
}

func (o *SearchPoliciesRequest) GetPolicyTypes() []PolicyTypes {
	if o == nil {
		return nil
	}
	return o.PolicyTypes
}

func (o *SearchPoliciesRequest) GetQuery() *string {
	if o == nil {
		return nil
	}
	return o.Query
}

func (o *SearchPoliciesRequest) GetRefs() []PolicyRef {
	if o == nil {
		return nil
	}
	return o.Refs
}
