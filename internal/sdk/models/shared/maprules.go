// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

// MapRules describe the constraints applied to `map` values
type MapRules struct {
	// IgnoreEmpty specifies that the validation rules of this field should be
	//  evaluated only if the field is not empty
	IgnoreEmpty *bool       `json:"ignoreEmpty,omitempty"`
	Keys        *FieldRules `json:"keys,omitempty"`
	// MaxPairs specifies that this field must have the specified number of
	//  KVs at a maximum
	MaxPairs *string `json:"maxPairs,omitempty"`
	// MinPairs specifies that this field must have the specified number of
	//  KVs at a minimum
	MinPairs *string `json:"minPairs,omitempty"`
	// NoSparse specifies values in this field cannot be unset. This only
	//  applies to map's with message value types.
	NoSparse *bool       `json:"noSparse,omitempty"`
	Values   *FieldRules `json:"values,omitempty"`
}

func (m *MapRules) GetIgnoreEmpty() *bool {
	if m == nil {
		return nil
	}
	return m.IgnoreEmpty
}

func (m *MapRules) GetKeys() *FieldRules {
	if m == nil {
		return nil
	}
	return m.Keys
}

func (m *MapRules) GetMaxPairs() *string {
	if m == nil {
		return nil
	}
	return m.MaxPairs
}

func (m *MapRules) GetMinPairs() *string {
	if m == nil {
		return nil
	}
	return m.MinPairs
}

func (m *MapRules) GetNoSparse() *bool {
	if m == nil {
		return nil
	}
	return m.NoSparse
}

func (m *MapRules) GetValues() *FieldRules {
	if m == nil {
		return nil
	}
	return m.Values
}
