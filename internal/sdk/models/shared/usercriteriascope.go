// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type UserStatus string

const (
	UserStatusUnknown  UserStatus = "UNKNOWN"
	UserStatusEnabled  UserStatus = "ENABLED"
	UserStatusDisabled UserStatus = "DISABLED"
	UserStatusDeleted  UserStatus = "DELETED"
)

func (e UserStatus) ToPointer() *UserStatus {
	return &e
}
func (e *UserStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "UNKNOWN":
		fallthrough
	case "ENABLED":
		fallthrough
	case "DISABLED":
		fallthrough
	case "DELETED":
		*e = UserStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UserStatus: %v", v)
	}
}

// The UserCriteriaScope message.
type UserCriteriaScope struct {
	// The groupAppEntitlementsRef field.
	GroupAppEntitlementsRef []AppEntitlementRef `json:"groupAppEntitlementsRef,omitempty"`
	// The managerUserIds field.
	ManagerUserIds []string `json:"managerUserIds,omitempty"`
	// The multiUserProfileAttributes field.
	MultiUserProfileAttributes map[string]IncludedUserAttributeValues `json:"multiUserProfileAttributes,omitempty"`
	// The userStatus field.
	UserStatus []UserStatus `json:"userStatus,omitempty"`
}

func (o *UserCriteriaScope) GetGroupAppEntitlementsRef() []AppEntitlementRef {
	if o == nil {
		return nil
	}
	return o.GroupAppEntitlementsRef
}

func (o *UserCriteriaScope) GetManagerUserIds() []string {
	if o == nil {
		return nil
	}
	return o.ManagerUserIds
}

func (o *UserCriteriaScope) GetMultiUserProfileAttributes() map[string]IncludedUserAttributeValues {
	if o == nil {
		return nil
	}
	return o.MultiUserProfileAttributes
}

func (o *UserCriteriaScope) GetUserStatus() []UserStatus {
	if o == nil {
		return nil
	}
	return o.UserStatus
}
