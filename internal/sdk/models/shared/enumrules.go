// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

// EnumRules describe the constraints applied to enum values
type EnumRules struct {
	// Const specifies that this field must be exactly the specified value
	Const *int `json:"const,omitempty"`
	// DefinedOnly specifies that this field must be only one of the defined
	//  values for this enum, failing on any undefined value.
	DefinedOnly *bool `json:"definedOnly,omitempty"`
	// In specifies that this field must be equal to one of the specified
	//  values
	In []int `json:"in,omitempty"`
	// NotIn specifies that this field cannot be equal to one of the specified
	//  values
	NotIn []int `json:"notIn,omitempty"`
}

func (o *EnumRules) GetConst() *int {
	if o == nil {
		return nil
	}
	return o.Const
}

func (o *EnumRules) GetDefinedOnly() *bool {
	if o == nil {
		return nil
	}
	return o.DefinedOnly
}

func (o *EnumRules) GetIn() []int {
	if o == nil {
		return nil
	}
	return o.In
}

func (o *EnumRules) GetNotIn() []int {
	if o == nil {
		return nil
	}
	return o.NotIn
}
