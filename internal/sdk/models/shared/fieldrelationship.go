// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

// FieldRelationship - FieldRelationships can be used during form validation, or they can represent
//
//	information that is necessary to when it comes to visually rendering the form
//
// This message contains a oneof named kind. Only a single field of the following list may be set at a time:
//   - requiredTogether
//   - atLeastOne
//   - mutuallyExclusive
type FieldRelationship struct {
	AtLeastOne *AtLeastOne `json:"atLeastOne,omitempty"`
	// The names of the fields that share this relationship
	FieldNames        []string           `json:"fieldNames,omitempty"`
	MutuallyExclusive *MutuallyExclusive `json:"mutuallyExclusive,omitempty"`
	RequiredTogether  *RequiredTogether  `json:"requiredTogether,omitempty"`
}

func (f *FieldRelationship) GetAtLeastOne() *AtLeastOne {
	if f == nil {
		return nil
	}
	return f.AtLeastOne
}

func (f *FieldRelationship) GetFieldNames() []string {
	if f == nil {
		return nil
	}
	return f.FieldNames
}

func (f *FieldRelationship) GetMutuallyExclusive() *MutuallyExclusive {
	if f == nil {
		return nil
	}
	return f.MutuallyExclusive
}

func (f *FieldRelationship) GetRequiredTogether() *RequiredTogether {
	if f == nil {
		return nil
	}
	return f.RequiredTogether
}
