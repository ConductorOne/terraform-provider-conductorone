// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type DurationUnset struct {
}

// State - The last applied state of the app access request defaults.
type State string

const (
	StateAppAccessRequestDefaultsLastApplyStateUnspecified   State = "APP_ACCESS_REQUEST_DEFAULTS_LAST_APPLY_STATE_UNSPECIFIED"
	StateAppAccessRequestDefaultsLastApplyStateRunning       State = "APP_ACCESS_REQUEST_DEFAULTS_LAST_APPLY_STATE_RUNNING"
	StateAppAccessRequestDefaultsLastApplyStateSuccess       State = "APP_ACCESS_REQUEST_DEFAULTS_LAST_APPLY_STATE_SUCCESS"
	StateAppAccessRequestDefaultsLastApplyStateFailed        State = "APP_ACCESS_REQUEST_DEFAULTS_LAST_APPLY_STATE_FAILED"
	StateAppAccessRequestDefaultsLastApplyStateCanceling     State = "APP_ACCESS_REQUEST_DEFAULTS_LAST_APPLY_STATE_CANCELING"
	StateAppAccessRequestDefaultsLastApplyStateCancelSuccess State = "APP_ACCESS_REQUEST_DEFAULTS_LAST_APPLY_STATE_CANCEL_SUCCESS"
	StateAppAccessRequestDefaultsLastApplyStateCancelError   State = "APP_ACCESS_REQUEST_DEFAULTS_LAST_APPLY_STATE_CANCEL_ERROR"
)

func (e State) ToPointer() *State {
	return &e
}
func (e *State) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "APP_ACCESS_REQUEST_DEFAULTS_LAST_APPLY_STATE_UNSPECIFIED":
		fallthrough
	case "APP_ACCESS_REQUEST_DEFAULTS_LAST_APPLY_STATE_RUNNING":
		fallthrough
	case "APP_ACCESS_REQUEST_DEFAULTS_LAST_APPLY_STATE_SUCCESS":
		fallthrough
	case "APP_ACCESS_REQUEST_DEFAULTS_LAST_APPLY_STATE_FAILED":
		fallthrough
	case "APP_ACCESS_REQUEST_DEFAULTS_LAST_APPLY_STATE_CANCELING":
		fallthrough
	case "APP_ACCESS_REQUEST_DEFAULTS_LAST_APPLY_STATE_CANCEL_SUCCESS":
		fallthrough
	case "APP_ACCESS_REQUEST_DEFAULTS_LAST_APPLY_STATE_CANCEL_ERROR":
		*e = State(v)
		return nil
	default:
		return fmt.Errorf("invalid value for State: %v", v)
	}
}

// The AppAccessRequestDefaults message.
//
// This message contains a oneof named max_grant_duration. Only a single field of the following list may be set at a time:
//   - durationUnset
//   - durationGrant
type AppAccessRequestDefaults struct {
	// The app id for the app access request rule
	AppID *string `json:"appId,omitempty"`
	// The request catalog ids for the app access request rule.
	CatalogIds []string `json:"catalogIds,omitempty"`
	// If true the app level request configuration will be applied to specified resource types.
	DefaultsEnabled *bool          `json:"defaultsEnabled,omitempty"`
	DurationGrant   *string        `json:"durationGrant,omitempty"`
	DurationUnset   *DurationUnset `json:"durationUnset,omitempty"`
	// If emergency grants are enabled for this app access request rule.
	EmergencyGrantEnabled *bool `json:"emergencyGrantEnabled,omitempty"`
	// The policy id for the emergency grant policy.
	EmergencyGrantPolicyID *string `json:"emergencyGrantPolicyId,omitempty"`
	// The requestPolicyId field.
	RequestPolicyID *string `json:"requestPolicyId,omitempty"`
	// The app resource type ids for which the app access request defaults are applied.
	ResourceTypeIds []string `json:"resourceTypeIds,omitempty"`
	// The last applied state of the app access request defaults.
	State *State `json:"state,omitempty"`
}

func (a *AppAccessRequestDefaults) GetAppID() *string {
	if a == nil {
		return nil
	}
	return a.AppID
}

func (a *AppAccessRequestDefaults) GetCatalogIds() []string {
	if a == nil {
		return nil
	}
	return a.CatalogIds
}

func (a *AppAccessRequestDefaults) GetDefaultsEnabled() *bool {
	if a == nil {
		return nil
	}
	return a.DefaultsEnabled
}

func (a *AppAccessRequestDefaults) GetDurationGrant() *string {
	if a == nil {
		return nil
	}
	return a.DurationGrant
}

func (a *AppAccessRequestDefaults) GetDurationUnset() *DurationUnset {
	if a == nil {
		return nil
	}
	return a.DurationUnset
}

func (a *AppAccessRequestDefaults) GetEmergencyGrantEnabled() *bool {
	if a == nil {
		return nil
	}
	return a.EmergencyGrantEnabled
}

func (a *AppAccessRequestDefaults) GetEmergencyGrantPolicyID() *string {
	if a == nil {
		return nil
	}
	return a.EmergencyGrantPolicyID
}

func (a *AppAccessRequestDefaults) GetRequestPolicyID() *string {
	if a == nil {
		return nil
	}
	return a.RequestPolicyID
}

func (a *AppAccessRequestDefaults) GetResourceTypeIds() []string {
	if a == nil {
		return nil
	}
	return a.ResourceTypeIds
}

func (a *AppAccessRequestDefaults) GetState() *State {
	if a == nil {
		return nil
	}
	return a.State
}

// AppAccessRequestDefaults1 - The AppAccessRequestDefaults message.
//
// This message contains a oneof named max_grant_duration. Only a single field of the following list may be set at a time:
//   - durationUnset
//   - durationGrant
type AppAccessRequestDefaults1 struct {
	// The request catalog ids for the app access request rule.
	CatalogIds []string `json:"catalogIds,omitempty"`
	// If true the app level request configuration will be applied to specified resource types.
	DefaultsEnabled *bool          `json:"defaultsEnabled,omitempty"`
	DurationGrant   *string        `json:"durationGrant,omitempty"`
	DurationUnset   *DurationUnset `json:"durationUnset,omitempty"`
	// If emergency grants are enabled for this app access request rule.
	EmergencyGrantEnabled *bool `json:"emergencyGrantEnabled,omitempty"`
	// The policy id for the emergency grant policy.
	EmergencyGrantPolicyID *string `json:"emergencyGrantPolicyId,omitempty"`
	// The requestPolicyId field.
	RequestPolicyID *string `json:"requestPolicyId,omitempty"`
	// The app resource type ids for which the app access request defaults are applied.
	ResourceTypeIds []string `json:"resourceTypeIds,omitempty"`
	// The last applied state of the app access request defaults.
	State *State `json:"state,omitempty"`
}

func (a *AppAccessRequestDefaults1) GetCatalogIds() []string {
	if a == nil {
		return nil
	}
	return a.CatalogIds
}

func (a *AppAccessRequestDefaults1) GetDefaultsEnabled() *bool {
	if a == nil {
		return nil
	}
	return a.DefaultsEnabled
}

func (a *AppAccessRequestDefaults1) GetDurationGrant() *string {
	if a == nil {
		return nil
	}
	return a.DurationGrant
}

func (a *AppAccessRequestDefaults1) GetDurationUnset() *DurationUnset {
	if a == nil {
		return nil
	}
	return a.DurationUnset
}

func (a *AppAccessRequestDefaults1) GetEmergencyGrantEnabled() *bool {
	if a == nil {
		return nil
	}
	return a.EmergencyGrantEnabled
}

func (a *AppAccessRequestDefaults1) GetEmergencyGrantPolicyID() *string {
	if a == nil {
		return nil
	}
	return a.EmergencyGrantPolicyID
}

func (a *AppAccessRequestDefaults1) GetRequestPolicyID() *string {
	if a == nil {
		return nil
	}
	return a.RequestPolicyID
}

func (a *AppAccessRequestDefaults1) GetResourceTypeIds() []string {
	if a == nil {
		return nil
	}
	return a.ResourceTypeIds
}

func (a *AppAccessRequestDefaults1) GetState() *State {
	if a == nil {
		return nil
	}
	return a.State
}
