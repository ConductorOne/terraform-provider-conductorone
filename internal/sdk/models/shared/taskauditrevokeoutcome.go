// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// TaskAuditRevokeOutcomeOutcome - The outcome field.
type TaskAuditRevokeOutcomeOutcome string

const (
	TaskAuditRevokeOutcomeOutcomeRevokeOutcomeUnspecified  TaskAuditRevokeOutcomeOutcome = "REVOKE_OUTCOME_UNSPECIFIED"
	TaskAuditRevokeOutcomeOutcomeRevokeOutcomeRevoked      TaskAuditRevokeOutcomeOutcome = "REVOKE_OUTCOME_REVOKED"
	TaskAuditRevokeOutcomeOutcomeRevokeOutcomeDenied       TaskAuditRevokeOutcomeOutcome = "REVOKE_OUTCOME_DENIED"
	TaskAuditRevokeOutcomeOutcomeRevokeOutcomeError        TaskAuditRevokeOutcomeOutcome = "REVOKE_OUTCOME_ERROR"
	TaskAuditRevokeOutcomeOutcomeRevokeOutcomeCancelled    TaskAuditRevokeOutcomeOutcome = "REVOKE_OUTCOME_CANCELLED"
	TaskAuditRevokeOutcomeOutcomeRevokeOutcomeWaitTimedOut TaskAuditRevokeOutcomeOutcome = "REVOKE_OUTCOME_WAIT_TIMED_OUT"
)

func (e TaskAuditRevokeOutcomeOutcome) ToPointer() *TaskAuditRevokeOutcomeOutcome {
	return &e
}
func (e *TaskAuditRevokeOutcomeOutcome) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "REVOKE_OUTCOME_UNSPECIFIED":
		fallthrough
	case "REVOKE_OUTCOME_REVOKED":
		fallthrough
	case "REVOKE_OUTCOME_DENIED":
		fallthrough
	case "REVOKE_OUTCOME_ERROR":
		fallthrough
	case "REVOKE_OUTCOME_CANCELLED":
		fallthrough
	case "REVOKE_OUTCOME_WAIT_TIMED_OUT":
		*e = TaskAuditRevokeOutcomeOutcome(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TaskAuditRevokeOutcomeOutcome: %v", v)
	}
}

// The TaskAuditRevokeOutcome message.
type TaskAuditRevokeOutcome struct {
	// The outcome field.
	Outcome *TaskAuditRevokeOutcomeOutcome `json:"outcome,omitempty"`
}

func (t *TaskAuditRevokeOutcome) GetOutcome() *TaskAuditRevokeOutcomeOutcome {
	if t == nil {
		return nil
	}
	return t.Outcome
}
