// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/conductorone/terraform-provider-conductorone/internal/sdk/internal/utils"
	"time"
)

// ApprovedAction - The approved action indicates that the approvalinstance had an outcome of approved.
type ApprovedAction struct {
	ApprovedAt *time.Time `json:"approvedAt,omitempty"`
	// The entitlements that were approved. This will only ever be a list of one entitlement.
	Entitlements []AppEntitlementReference `json:"entitlements,omitempty"`
	// The ID of the step-up transaction that was used for this approval, if step-up was required.
	StepUpTransactionID *string `json:"stepUpTransactionId,omitempty"`
	// The UserID that approved this step.
	UserID *string `json:"userId,omitempty"`
}

func (a ApprovedAction) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *ApprovedAction) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (a *ApprovedAction) GetApprovedAt() *time.Time {
	if a == nil {
		return nil
	}
	return a.ApprovedAt
}

func (a *ApprovedAction) GetEntitlements() []AppEntitlementReference {
	if a == nil {
		return nil
	}
	return a.Entitlements
}

func (a *ApprovedAction) GetStepUpTransactionID() *string {
	if a == nil {
		return nil
	}
	return a.StepUpTransactionID
}

func (a *ApprovedAction) GetUserID() *string {
	if a == nil {
		return nil
	}
	return a.UserID
}
