// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/conductorone/terraform-provider-conductorone/internal/sdk/internal/utils"
	"time"
)

type TargetedAppUserTypes string

const (
	TargetedAppUserTypesAppUserTypeUnspecified    TargetedAppUserTypes = "APP_USER_TYPE_UNSPECIFIED"
	TargetedAppUserTypesAppUserTypeUser           TargetedAppUserTypes = "APP_USER_TYPE_USER"
	TargetedAppUserTypesAppUserTypeServiceAccount TargetedAppUserTypes = "APP_USER_TYPE_SERVICE_ACCOUNT"
	TargetedAppUserTypesAppUserTypeSystemAccount  TargetedAppUserTypes = "APP_USER_TYPE_SYSTEM_ACCOUNT"
)

func (e TargetedAppUserTypes) ToPointer() *TargetedAppUserTypes {
	return &e
}
func (e *TargetedAppUserTypes) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "APP_USER_TYPE_UNSPECIFIED":
		fallthrough
	case "APP_USER_TYPE_USER":
		fallthrough
	case "APP_USER_TYPE_SERVICE_ACCOUNT":
		fallthrough
	case "APP_USER_TYPE_SYSTEM_ACCOUNT":
		*e = TargetedAppUserTypes(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TargetedAppUserTypes: %v", v)
	}
}

// The UsageBasedRevocationTrigger message.
//
// This message contains a oneof named cold_start_schedule. Only a single field of the following list may be set at a time:
//   - runImmediately
//   - runDelayed
type UsageBasedRevocationTrigger struct {
	// The appId field.
	AppID     *string    `json:"appId,omitempty"`
	EnabledAt *time.Time `json:"enabledAt,omitempty"`
	// The excludedGroupRefs field.
	ExcludedGroupRefs []AppEntitlementRef `json:"excludedGroupRefs,omitempty"`
	// The excludedUserRefs field.
	ExcludedUserRefs []UserRef `json:"excludedUserRefs,omitempty"`
	// The includeUsersWithNoActivity field.
	IncludeUsersWithNoActivity *bool           `json:"includeUsersWithNoActivity,omitempty"`
	RunDelayed                 *RunDelayed     `json:"runDelayed,omitempty"`
	RunImmediately             *RunImmediately `json:"runImmediately,omitempty"`
	// The targetedAppUserTypes field.
	TargetedAppUserTypes []TargetedAppUserTypes `json:"targetedAppUserTypes,omitempty"`
	// The targetedEntitlementRefs field.
	TargetedEntitlementRefs []AppEntitlementRef `json:"targetedEntitlementRefs,omitempty"`
	// The unusedForDays field.
	UnusedForDays *int64 `json:"unusedForDays,omitempty"`
}

func (u UsageBasedRevocationTrigger) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(u, "", false)
}

func (u *UsageBasedRevocationTrigger) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &u, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (u *UsageBasedRevocationTrigger) GetAppID() *string {
	if u == nil {
		return nil
	}
	return u.AppID
}

func (u *UsageBasedRevocationTrigger) GetEnabledAt() *time.Time {
	if u == nil {
		return nil
	}
	return u.EnabledAt
}

func (u *UsageBasedRevocationTrigger) GetExcludedGroupRefs() []AppEntitlementRef {
	if u == nil {
		return nil
	}
	return u.ExcludedGroupRefs
}

func (u *UsageBasedRevocationTrigger) GetExcludedUserRefs() []UserRef {
	if u == nil {
		return nil
	}
	return u.ExcludedUserRefs
}

func (u *UsageBasedRevocationTrigger) GetIncludeUsersWithNoActivity() *bool {
	if u == nil {
		return nil
	}
	return u.IncludeUsersWithNoActivity
}

func (u *UsageBasedRevocationTrigger) GetRunDelayed() *RunDelayed {
	if u == nil {
		return nil
	}
	return u.RunDelayed
}

func (u *UsageBasedRevocationTrigger) GetRunImmediately() *RunImmediately {
	if u == nil {
		return nil
	}
	return u.RunImmediately
}

func (u *UsageBasedRevocationTrigger) GetTargetedAppUserTypes() []TargetedAppUserTypes {
	if u == nil {
		return nil
	}
	return u.TargetedAppUserTypes
}

func (u *UsageBasedRevocationTrigger) GetTargetedEntitlementRefs() []AppEntitlementRef {
	if u == nil {
		return nil
	}
	return u.TargetedEntitlementRefs
}

func (u *UsageBasedRevocationTrigger) GetUnusedForDays() *int64 {
	if u == nil {
		return nil
	}
	return u.UnusedForDays
}
