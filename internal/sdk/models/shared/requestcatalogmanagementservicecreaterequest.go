// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// EnrollmentBehavior - Defines how to handle the request policies of the entitlements in the catalog during enrollment.
type EnrollmentBehavior string

const (
	EnrollmentBehaviorRequestCatalogEnrollmentBehaviorUnspecified                     EnrollmentBehavior = "REQUEST_CATALOG_ENROLLMENT_BEHAVIOR_UNSPECIFIED"
	EnrollmentBehaviorRequestCatalogEnrollmentBehaviorBypassEntitlementRequestPolicy  EnrollmentBehavior = "REQUEST_CATALOG_ENROLLMENT_BEHAVIOR_BYPASS_ENTITLEMENT_REQUEST_POLICY"
	EnrollmentBehaviorRequestCatalogEnrollmentBehaviorEnforceEntitlementRequestPolicy EnrollmentBehavior = "REQUEST_CATALOG_ENROLLMENT_BEHAVIOR_ENFORCE_ENTITLEMENT_REQUEST_POLICY"
)

func (e EnrollmentBehavior) ToPointer() *EnrollmentBehavior {
	return &e
}
func (e *EnrollmentBehavior) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "REQUEST_CATALOG_ENROLLMENT_BEHAVIOR_UNSPECIFIED":
		fallthrough
	case "REQUEST_CATALOG_ENROLLMENT_BEHAVIOR_BYPASS_ENTITLEMENT_REQUEST_POLICY":
		fallthrough
	case "REQUEST_CATALOG_ENROLLMENT_BEHAVIOR_ENFORCE_ENTITLEMENT_REQUEST_POLICY":
		*e = EnrollmentBehavior(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EnrollmentBehavior: %v", v)
	}
}

// UnenrollmentBehavior - Defines how to handle the revocation of the entitlements in the catalog during unenrollment.
type UnenrollmentBehavior string

const (
	UnenrollmentBehaviorRequestCatalogUnenrollmentBehaviorUnspecified       UnenrollmentBehavior = "REQUEST_CATALOG_UNENROLLMENT_BEHAVIOR_UNSPECIFIED"
	UnenrollmentBehaviorRequestCatalogUnenrollmentBehaviorLeaveAccessAsIs   UnenrollmentBehavior = "REQUEST_CATALOG_UNENROLLMENT_BEHAVIOR_LEAVE_ACCESS_AS_IS"
	UnenrollmentBehaviorRequestCatalogUnenrollmentBehaviorRevokeAll         UnenrollmentBehavior = "REQUEST_CATALOG_UNENROLLMENT_BEHAVIOR_REVOKE_ALL"
	UnenrollmentBehaviorRequestCatalogUnenrollmentBehaviorRevokeUnjustified UnenrollmentBehavior = "REQUEST_CATALOG_UNENROLLMENT_BEHAVIOR_REVOKE_UNJUSTIFIED"
)

func (e UnenrollmentBehavior) ToPointer() *UnenrollmentBehavior {
	return &e
}
func (e *UnenrollmentBehavior) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "REQUEST_CATALOG_UNENROLLMENT_BEHAVIOR_UNSPECIFIED":
		fallthrough
	case "REQUEST_CATALOG_UNENROLLMENT_BEHAVIOR_LEAVE_ACCESS_AS_IS":
		fallthrough
	case "REQUEST_CATALOG_UNENROLLMENT_BEHAVIOR_REVOKE_ALL":
		fallthrough
	case "REQUEST_CATALOG_UNENROLLMENT_BEHAVIOR_REVOKE_UNJUSTIFIED":
		*e = UnenrollmentBehavior(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UnenrollmentBehavior: %v", v)
	}
}

// UnenrollmentEntitlementBehavior - Defines how to handle the revoke policies of the entitlements in the catalog during unenrollment.
type UnenrollmentEntitlementBehavior string

const (
	UnenrollmentEntitlementBehaviorRequestCatalogUnenrollmentEntitlementBehaviorUnspecified UnenrollmentEntitlementBehavior = "REQUEST_CATALOG_UNENROLLMENT_ENTITLEMENT_BEHAVIOR_UNSPECIFIED"
	UnenrollmentEntitlementBehaviorRequestCatalogUnenrollmentEntitlementBehaviorBypass      UnenrollmentEntitlementBehavior = "REQUEST_CATALOG_UNENROLLMENT_ENTITLEMENT_BEHAVIOR_BYPASS"
	UnenrollmentEntitlementBehaviorRequestCatalogUnenrollmentEntitlementBehaviorEnforce     UnenrollmentEntitlementBehavior = "REQUEST_CATALOG_UNENROLLMENT_ENTITLEMENT_BEHAVIOR_ENFORCE"
)

func (e UnenrollmentEntitlementBehavior) ToPointer() *UnenrollmentEntitlementBehavior {
	return &e
}
func (e *UnenrollmentEntitlementBehavior) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "REQUEST_CATALOG_UNENROLLMENT_ENTITLEMENT_BEHAVIOR_UNSPECIFIED":
		fallthrough
	case "REQUEST_CATALOG_UNENROLLMENT_ENTITLEMENT_BEHAVIOR_BYPASS":
		fallthrough
	case "REQUEST_CATALOG_UNENROLLMENT_ENTITLEMENT_BEHAVIOR_ENFORCE":
		*e = UnenrollmentEntitlementBehavior(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UnenrollmentEntitlementBehavior: %v", v)
	}
}

// RequestCatalogManagementServiceCreateRequest - Create a request catalog.
type RequestCatalogManagementServiceCreateRequest struct {
	// The description of the new request catalog.
	Description *string `json:"description,omitempty"`
	// The display name of the new request catalog.
	DisplayName string `json:"displayName"`
	// Defines how to handle the request policies of the entitlements in the catalog during enrollment.
	EnrollmentBehavior *EnrollmentBehavior `json:"enrollmentBehavior,omitempty"`
	// Whether or not the new catalog should be created as published.
	Published *bool `json:"published,omitempty"`
	// Whether all the entitlements in the catalog can be requests at once. Your tenant must have the bundles feature to use this.
	RequestBundle *bool `json:"requestBundle,omitempty"`
	// Defines how to handle the revocation of the entitlements in the catalog during unenrollment.
	UnenrollmentBehavior *UnenrollmentBehavior `json:"unenrollmentBehavior,omitempty"`
	// Defines how to handle the revoke policies of the entitlements in the catalog during unenrollment.
	UnenrollmentEntitlementBehavior *UnenrollmentEntitlementBehavior `json:"unenrollmentEntitlementBehavior,omitempty"`
	// Whether or not the new catalog is visible to everyone by default.
	VisibleToEveryone *bool `json:"visibleToEveryone,omitempty"`
}

func (o *RequestCatalogManagementServiceCreateRequest) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *RequestCatalogManagementServiceCreateRequest) GetDisplayName() string {
	if o == nil {
		return ""
	}
	return o.DisplayName
}

func (o *RequestCatalogManagementServiceCreateRequest) GetEnrollmentBehavior() *EnrollmentBehavior {
	if o == nil {
		return nil
	}
	return o.EnrollmentBehavior
}

func (o *RequestCatalogManagementServiceCreateRequest) GetPublished() *bool {
	if o == nil {
		return nil
	}
	return o.Published
}

func (o *RequestCatalogManagementServiceCreateRequest) GetRequestBundle() *bool {
	if o == nil {
		return nil
	}
	return o.RequestBundle
}

func (o *RequestCatalogManagementServiceCreateRequest) GetUnenrollmentBehavior() *UnenrollmentBehavior {
	if o == nil {
		return nil
	}
	return o.UnenrollmentBehavior
}

func (o *RequestCatalogManagementServiceCreateRequest) GetUnenrollmentEntitlementBehavior() *UnenrollmentEntitlementBehavior {
	if o == nil {
		return nil
	}
	return o.UnenrollmentEntitlementBehavior
}

func (o *RequestCatalogManagementServiceCreateRequest) GetVisibleToEveryone() *bool {
	if o == nil {
		return nil
	}
	return o.VisibleToEveryone
}
