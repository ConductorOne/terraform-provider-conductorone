// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// RequestCatalogManagementServiceCreateRequestEnrollmentBehavior - Defines how to handle the request policies of the entitlements in the catalog during enrollment.
type RequestCatalogManagementServiceCreateRequestEnrollmentBehavior string

const (
	RequestCatalogManagementServiceCreateRequestEnrollmentBehaviorRequestCatalogEnrollmentBehaviorUnspecified                     RequestCatalogManagementServiceCreateRequestEnrollmentBehavior = "REQUEST_CATALOG_ENROLLMENT_BEHAVIOR_UNSPECIFIED"
	RequestCatalogManagementServiceCreateRequestEnrollmentBehaviorRequestCatalogEnrollmentBehaviorBypassEntitlementRequestPolicy  RequestCatalogManagementServiceCreateRequestEnrollmentBehavior = "REQUEST_CATALOG_ENROLLMENT_BEHAVIOR_BYPASS_ENTITLEMENT_REQUEST_POLICY"
	RequestCatalogManagementServiceCreateRequestEnrollmentBehaviorRequestCatalogEnrollmentBehaviorEnforceEntitlementRequestPolicy RequestCatalogManagementServiceCreateRequestEnrollmentBehavior = "REQUEST_CATALOG_ENROLLMENT_BEHAVIOR_ENFORCE_ENTITLEMENT_REQUEST_POLICY"
)

func (e RequestCatalogManagementServiceCreateRequestEnrollmentBehavior) ToPointer() *RequestCatalogManagementServiceCreateRequestEnrollmentBehavior {
	return &e
}
func (e *RequestCatalogManagementServiceCreateRequestEnrollmentBehavior) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "REQUEST_CATALOG_ENROLLMENT_BEHAVIOR_UNSPECIFIED":
		fallthrough
	case "REQUEST_CATALOG_ENROLLMENT_BEHAVIOR_BYPASS_ENTITLEMENT_REQUEST_POLICY":
		fallthrough
	case "REQUEST_CATALOG_ENROLLMENT_BEHAVIOR_ENFORCE_ENTITLEMENT_REQUEST_POLICY":
		*e = RequestCatalogManagementServiceCreateRequestEnrollmentBehavior(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RequestCatalogManagementServiceCreateRequestEnrollmentBehavior: %v", v)
	}
}

// RequestCatalogManagementServiceCreateRequestUnenrollmentBehavior - Defines how to handle the revocation of the entitlements in the catalog during unenrollment.
type RequestCatalogManagementServiceCreateRequestUnenrollmentBehavior string

const (
	RequestCatalogManagementServiceCreateRequestUnenrollmentBehaviorRequestCatalogUnenrollmentBehaviorUnspecified       RequestCatalogManagementServiceCreateRequestUnenrollmentBehavior = "REQUEST_CATALOG_UNENROLLMENT_BEHAVIOR_UNSPECIFIED"
	RequestCatalogManagementServiceCreateRequestUnenrollmentBehaviorRequestCatalogUnenrollmentBehaviorLeaveAccessAsIs   RequestCatalogManagementServiceCreateRequestUnenrollmentBehavior = "REQUEST_CATALOG_UNENROLLMENT_BEHAVIOR_LEAVE_ACCESS_AS_IS"
	RequestCatalogManagementServiceCreateRequestUnenrollmentBehaviorRequestCatalogUnenrollmentBehaviorRevokeAll         RequestCatalogManagementServiceCreateRequestUnenrollmentBehavior = "REQUEST_CATALOG_UNENROLLMENT_BEHAVIOR_REVOKE_ALL"
	RequestCatalogManagementServiceCreateRequestUnenrollmentBehaviorRequestCatalogUnenrollmentBehaviorRevokeUnjustified RequestCatalogManagementServiceCreateRequestUnenrollmentBehavior = "REQUEST_CATALOG_UNENROLLMENT_BEHAVIOR_REVOKE_UNJUSTIFIED"
)

func (e RequestCatalogManagementServiceCreateRequestUnenrollmentBehavior) ToPointer() *RequestCatalogManagementServiceCreateRequestUnenrollmentBehavior {
	return &e
}
func (e *RequestCatalogManagementServiceCreateRequestUnenrollmentBehavior) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "REQUEST_CATALOG_UNENROLLMENT_BEHAVIOR_UNSPECIFIED":
		fallthrough
	case "REQUEST_CATALOG_UNENROLLMENT_BEHAVIOR_LEAVE_ACCESS_AS_IS":
		fallthrough
	case "REQUEST_CATALOG_UNENROLLMENT_BEHAVIOR_REVOKE_ALL":
		fallthrough
	case "REQUEST_CATALOG_UNENROLLMENT_BEHAVIOR_REVOKE_UNJUSTIFIED":
		*e = RequestCatalogManagementServiceCreateRequestUnenrollmentBehavior(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RequestCatalogManagementServiceCreateRequestUnenrollmentBehavior: %v", v)
	}
}

// RequestCatalogManagementServiceCreateRequestUnenrollmentEntitlementBehavior - Defines how to handle the revoke policies of the entitlements in the catalog during unenrollment.
type RequestCatalogManagementServiceCreateRequestUnenrollmentEntitlementBehavior string

const (
	RequestCatalogManagementServiceCreateRequestUnenrollmentEntitlementBehaviorRequestCatalogUnenrollmentEntitlementBehaviorUnspecified RequestCatalogManagementServiceCreateRequestUnenrollmentEntitlementBehavior = "REQUEST_CATALOG_UNENROLLMENT_ENTITLEMENT_BEHAVIOR_UNSPECIFIED"
	RequestCatalogManagementServiceCreateRequestUnenrollmentEntitlementBehaviorRequestCatalogUnenrollmentEntitlementBehaviorBypass      RequestCatalogManagementServiceCreateRequestUnenrollmentEntitlementBehavior = "REQUEST_CATALOG_UNENROLLMENT_ENTITLEMENT_BEHAVIOR_BYPASS"
	RequestCatalogManagementServiceCreateRequestUnenrollmentEntitlementBehaviorRequestCatalogUnenrollmentEntitlementBehaviorEnforce     RequestCatalogManagementServiceCreateRequestUnenrollmentEntitlementBehavior = "REQUEST_CATALOG_UNENROLLMENT_ENTITLEMENT_BEHAVIOR_ENFORCE"
)

func (e RequestCatalogManagementServiceCreateRequestUnenrollmentEntitlementBehavior) ToPointer() *RequestCatalogManagementServiceCreateRequestUnenrollmentEntitlementBehavior {
	return &e
}
func (e *RequestCatalogManagementServiceCreateRequestUnenrollmentEntitlementBehavior) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "REQUEST_CATALOG_UNENROLLMENT_ENTITLEMENT_BEHAVIOR_UNSPECIFIED":
		fallthrough
	case "REQUEST_CATALOG_UNENROLLMENT_ENTITLEMENT_BEHAVIOR_BYPASS":
		fallthrough
	case "REQUEST_CATALOG_UNENROLLMENT_ENTITLEMENT_BEHAVIOR_ENFORCE":
		*e = RequestCatalogManagementServiceCreateRequestUnenrollmentEntitlementBehavior(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RequestCatalogManagementServiceCreateRequestUnenrollmentEntitlementBehavior: %v", v)
	}
}

// RequestCatalogManagementServiceCreateRequest - Create a request catalog.
type RequestCatalogManagementServiceCreateRequest struct {
	// The description of the new request catalog.
	Description *string `json:"description,omitempty"`
	// The display name of the new request catalog.
	DisplayName string `json:"displayName"`
	// Defines how to handle the request policies of the entitlements in the catalog during enrollment.
	EnrollmentBehavior *RequestCatalogManagementServiceCreateRequestEnrollmentBehavior `json:"enrollmentBehavior,omitempty"`
	// Whether or not the new catalog should be created as published.
	Published *bool `json:"published,omitempty"`
	// Whether all the entitlements in the catalog can be requests at once. Your tenant must have the bundles feature to use this.
	RequestBundle *bool `json:"requestBundle,omitempty"`
	// Defines how to handle the revocation of the entitlements in the catalog during unenrollment.
	UnenrollmentBehavior *RequestCatalogManagementServiceCreateRequestUnenrollmentBehavior `json:"unenrollmentBehavior,omitempty"`
	// Defines how to handle the revoke policies of the entitlements in the catalog during unenrollment.
	UnenrollmentEntitlementBehavior *RequestCatalogManagementServiceCreateRequestUnenrollmentEntitlementBehavior `json:"unenrollmentEntitlementBehavior,omitempty"`
	// Whether or not the new catalog is visible to everyone by default.
	VisibleToEveryone *bool `json:"visibleToEveryone,omitempty"`
}

func (r *RequestCatalogManagementServiceCreateRequest) GetDescription() *string {
	if r == nil {
		return nil
	}
	return r.Description
}

func (r *RequestCatalogManagementServiceCreateRequest) GetDisplayName() string {
	if r == nil {
		return ""
	}
	return r.DisplayName
}

func (r *RequestCatalogManagementServiceCreateRequest) GetEnrollmentBehavior() *RequestCatalogManagementServiceCreateRequestEnrollmentBehavior {
	if r == nil {
		return nil
	}
	return r.EnrollmentBehavior
}

func (r *RequestCatalogManagementServiceCreateRequest) GetPublished() *bool {
	if r == nil {
		return nil
	}
	return r.Published
}

func (r *RequestCatalogManagementServiceCreateRequest) GetRequestBundle() *bool {
	if r == nil {
		return nil
	}
	return r.RequestBundle
}

func (r *RequestCatalogManagementServiceCreateRequest) GetUnenrollmentBehavior() *RequestCatalogManagementServiceCreateRequestUnenrollmentBehavior {
	if r == nil {
		return nil
	}
	return r.UnenrollmentBehavior
}

func (r *RequestCatalogManagementServiceCreateRequest) GetUnenrollmentEntitlementBehavior() *RequestCatalogManagementServiceCreateRequestUnenrollmentEntitlementBehavior {
	if r == nil {
		return nil
	}
	return r.UnenrollmentEntitlementBehavior
}

func (r *RequestCatalogManagementServiceCreateRequest) GetVisibleToEveryone() *bool {
	if r == nil {
		return nil
	}
	return r.VisibleToEveryone
}
