// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/conductorone/terraform-provider-conductorone/internal/sdk/internal/utils"
	"time"
)

// The StepUpProvider message.
//
// This message contains a oneof named settings. Only a single field of the following list may be set at a time:
//   - oauth2
//   - microsoft
type StepUpProvider struct {
	// The clientId field.
	ClientID  *string    `json:"clientId,omitempty"`
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	// The displayName field.
	DisplayName *string `json:"displayName,omitempty"`
	// The enabled field.
	Enabled *bool `json:"enabled,omitempty"`
	// The id field.
	ID *string `json:"id,omitempty"`
	// The issuerUrl field.
	IssuerURL    *string                  `json:"issuerUrl,omitempty"`
	LastTestedAt *time.Time               `json:"lastTestedAt,omitempty"`
	Microsoft    *StepUpMicrosoftSettings `json:"microsoft,omitempty"`
	Oauth2       *StepUpOAuth2Settings    `json:"oauth2,omitempty"`
	UpdatedAt    *time.Time               `json:"updatedAt,omitempty"`
}

func (s StepUpProvider) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *StepUpProvider) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (s *StepUpProvider) GetClientID() *string {
	if s == nil {
		return nil
	}
	return s.ClientID
}

func (s *StepUpProvider) GetCreatedAt() *time.Time {
	if s == nil {
		return nil
	}
	return s.CreatedAt
}

func (s *StepUpProvider) GetDisplayName() *string {
	if s == nil {
		return nil
	}
	return s.DisplayName
}

func (s *StepUpProvider) GetEnabled() *bool {
	if s == nil {
		return nil
	}
	return s.Enabled
}

func (s *StepUpProvider) GetID() *string {
	if s == nil {
		return nil
	}
	return s.ID
}

func (s *StepUpProvider) GetIssuerURL() *string {
	if s == nil {
		return nil
	}
	return s.IssuerURL
}

func (s *StepUpProvider) GetLastTestedAt() *time.Time {
	if s == nil {
		return nil
	}
	return s.LastTestedAt
}

func (s *StepUpProvider) GetMicrosoft() *StepUpMicrosoftSettings {
	if s == nil {
		return nil
	}
	return s.Microsoft
}

func (s *StepUpProvider) GetOauth2() *StepUpOAuth2Settings {
	if s == nil {
		return nil
	}
	return s.Oauth2
}

func (s *StepUpProvider) GetUpdatedAt() *time.Time {
	if s == nil {
		return nil
	}
	return s.UpdatedAt
}
