// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

// The WorkflowStep message.
//
// This message contains a oneof named kind. Only a single field of the following list may be set at a time:
//   - createAccessReview
//   - waitForDuration
//   - unenrollFromAllAccessProfiles
//   - createRevokeTasks
//   - sendEmail
//   - removeFromDelegation
//   - runWorkflow
//   - updateUser
//   - taskAction
type WorkflowStep struct {
	// The CreateAccessReview message.
	CreateAccessReview *CreateAccessReview `json:"createAccessReview,omitempty"`
	// The CreateRevokeTasks message.
	CreateRevokeTasks *CreateRevokeTasks `json:"createRevokeTasks,omitempty"`
	// RemoveFromDelegation: find all users that have the target user as their delegated user, and clear the delegation.
	RemoveFromDelegation *RemoveFromDelegation `json:"removeFromDelegation,omitempty"`
	// RunWorkflow: kick off the execution of a workflow template.
	//
	// This message contains a oneof named workflow_template. Only a single field of the following list may be set at a time:
	//   - workflowTemplateRef
	//   - workflowTemplateIdCel
	//
	RunWorkflow *RunWorkflow `json:"runWorkflow,omitempty"`
	// The SendEmail message.
	SendEmail *SendEmail `json:"sendEmail,omitempty"`
	// The skipIfTrueCel field.
	SkipIfTrueCel *string `json:"skipIfTrueCel,omitempty"`
	// The stepName field.
	StepName *string `json:"stepName,omitempty"`
	// The TaskAction message.
	//
	// This message contains a oneof named action. Only a single field of the following list may be set at a time:
	//   - close
	//   - reassign
	//
	TaskAction *TaskAction `json:"taskAction,omitempty"`
	// The UnenrollFromAllAccessProfiles message.
	UnenrollFromAllAccessProfiles *UnenrollFromAllAccessProfiles `json:"unenrollFromAllAccessProfiles,omitempty"`
	// The UpdateUser message.
	UpdateUser *UpdateUser `json:"updateUser,omitempty"`
	// The WaitForDuration message.
	WaitForDuration *WaitForDuration `json:"waitForDuration,omitempty"`
}

func (o *WorkflowStep) GetCreateAccessReview() *CreateAccessReview {
	if o == nil {
		return nil
	}
	return o.CreateAccessReview
}

func (o *WorkflowStep) GetCreateRevokeTasks() *CreateRevokeTasks {
	if o == nil {
		return nil
	}
	return o.CreateRevokeTasks
}

func (o *WorkflowStep) GetRemoveFromDelegation() *RemoveFromDelegation {
	if o == nil {
		return nil
	}
	return o.RemoveFromDelegation
}

func (o *WorkflowStep) GetRunWorkflow() *RunWorkflow {
	if o == nil {
		return nil
	}
	return o.RunWorkflow
}

func (o *WorkflowStep) GetSendEmail() *SendEmail {
	if o == nil {
		return nil
	}
	return o.SendEmail
}

func (o *WorkflowStep) GetSkipIfTrueCel() *string {
	if o == nil {
		return nil
	}
	return o.SkipIfTrueCel
}

func (o *WorkflowStep) GetStepName() *string {
	if o == nil {
		return nil
	}
	return o.StepName
}

func (o *WorkflowStep) GetTaskAction() *TaskAction {
	if o == nil {
		return nil
	}
	return o.TaskAction
}

func (o *WorkflowStep) GetUnenrollFromAllAccessProfiles() *UnenrollFromAllAccessProfiles {
	if o == nil {
		return nil
	}
	return o.UnenrollFromAllAccessProfiles
}

func (o *WorkflowStep) GetUpdateUser() *UpdateUser {
	if o == nil {
		return nil
	}
	return o.UpdateUser
}

func (o *WorkflowStep) GetWaitForDuration() *WaitForDuration {
	if o == nil {
		return nil
	}
	return o.WaitForDuration
}
