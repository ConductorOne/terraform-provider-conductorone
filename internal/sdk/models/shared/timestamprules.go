// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/conductorone/terraform-provider-conductorone/internal/sdk/internal/utils"
	"time"
)

// TimestampRules describe the constraints applied exclusively to the
//
//	`google.protobuf.Timestamp` well-known type
type TimestampRules struct {
	Const *time.Time `json:"const,omitempty"`
	Gt    *time.Time `json:"gt,omitempty"`
	// GtNow specifies that this must be greater than the current time. GtNow
	//  can only be used with the Within rule.
	GtNow *bool      `json:"gtNow,omitempty"`
	Gte   *time.Time `json:"gte,omitempty"`
	Lt    *time.Time `json:"lt,omitempty"`
	// LtNow specifies that this must be less than the current time. LtNow
	//  can only be used with the Within rule.
	LtNow *bool      `json:"ltNow,omitempty"`
	Lte   *time.Time `json:"lte,omitempty"`
	// Required specifies that this field must be set
	Required *bool   `json:"required,omitempty"`
	Within   *string `json:"within,omitempty"`
}

func (t TimestampRules) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TimestampRules) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (o *TimestampRules) GetConst() *time.Time {
	if o == nil {
		return nil
	}
	return o.Const
}

func (o *TimestampRules) GetGt() *time.Time {
	if o == nil {
		return nil
	}
	return o.Gt
}

func (o *TimestampRules) GetGtNow() *bool {
	if o == nil {
		return nil
	}
	return o.GtNow
}

func (o *TimestampRules) GetGte() *time.Time {
	if o == nil {
		return nil
	}
	return o.Gte
}

func (o *TimestampRules) GetLt() *time.Time {
	if o == nil {
		return nil
	}
	return o.Lt
}

func (o *TimestampRules) GetLtNow() *bool {
	if o == nil {
		return nil
	}
	return o.LtNow
}

func (o *TimestampRules) GetLte() *time.Time {
	if o == nil {
		return nil
	}
	return o.Lte
}

func (o *TimestampRules) GetRequired() *bool {
	if o == nil {
		return nil
	}
	return o.Required
}

func (o *TimestampRules) GetWithin() *string {
	if o == nil {
		return nil
	}
	return o.Within
}
