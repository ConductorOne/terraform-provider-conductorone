// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type CreateAppEntitlementRequestDurationUnset struct {
}

// CreateAppEntitlementRequestPurpose - The purpose field.
type CreateAppEntitlementRequestPurpose string

const (
	CreateAppEntitlementRequestPurposeAppEntitlementPurposeValueUnspecified CreateAppEntitlementRequestPurpose = "APP_ENTITLEMENT_PURPOSE_VALUE_UNSPECIFIED"
	CreateAppEntitlementRequestPurposeAppEntitlementPurposeValueAssignment  CreateAppEntitlementRequestPurpose = "APP_ENTITLEMENT_PURPOSE_VALUE_ASSIGNMENT"
	CreateAppEntitlementRequestPurposeAppEntitlementPurposeValuePermission  CreateAppEntitlementRequestPurpose = "APP_ENTITLEMENT_PURPOSE_VALUE_PERMISSION"
)

func (e CreateAppEntitlementRequestPurpose) ToPointer() *CreateAppEntitlementRequestPurpose {
	return &e
}
func (e *CreateAppEntitlementRequestPurpose) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "APP_ENTITLEMENT_PURPOSE_VALUE_UNSPECIFIED":
		fallthrough
	case "APP_ENTITLEMENT_PURPOSE_VALUE_ASSIGNMENT":
		fallthrough
	case "APP_ENTITLEMENT_PURPOSE_VALUE_PERMISSION":
		*e = CreateAppEntitlementRequestPurpose(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAppEntitlementRequestPurpose: %v", v)
	}
}

// The CreateAppEntitlementRequest message.
//
// This message contains a oneof named max_grant_duration. Only a single field of the following list may be set at a time:
//   - durationUnset
//   - durationGrant
type CreateAppEntitlementRequest struct {
	// The alias field.
	Alias *string `json:"alias,omitempty"`
	// The appResourceId field.
	AppResourceID *string `json:"appResourceId,omitempty"`
	// The appResourceTypeId field.
	AppResourceTypeID *string `json:"appResourceTypeId,omitempty"`
	// The certifyPolicyId field.
	CertifyPolicyID *string `json:"certifyPolicyId,omitempty"`
	// The complianceFrameworkValueIds field.
	ComplianceFrameworkValueIds []string `json:"complianceFrameworkValueIds,omitempty"`
	// The description field.
	Description *string `json:"description,omitempty"`
	// The displayName field.
	DisplayName   string                                    `json:"displayName"`
	DurationGrant *string                                   `json:"durationGrant,omitempty"`
	DurationUnset *CreateAppEntitlementRequestDurationUnset `json:"durationUnset,omitempty"`
	// The emergencyGrantEnabled field.
	EmergencyGrantEnabled *bool `json:"emergencyGrantEnabled,omitempty"`
	// The emergencyGrantPolicyId field.
	EmergencyGrantPolicyID *string `json:"emergencyGrantPolicyId,omitempty"`
	// The grantPolicyId field.
	GrantPolicyID *string `json:"grantPolicyId,omitempty"`
	// If supplied, it's implied that the entitlement is created before sync and needs to be merged with connector entitlement.
	MatchBatonID *string `json:"matchBatonId,omitempty"`
	// The overrideAccessRequestsDefaults field.
	OverrideAccessRequestsDefaults *bool `json:"overrideAccessRequestsDefaults,omitempty"`
	// ProvisionPolicy is a oneOf that indicates how a provision step should be processed.
	//
	// This message contains a oneof named typ. Only a single field of the following list may be set at a time:
	//   - connector
	//   - manual
	//   - delegated
	//   - webhook
	//   - multiStep
	//   - externalTicket
	//   - unconfigured
	//
	ProvisionPolicy *ProvisionPolicy `json:"provisionPolicy,omitempty"`
	// The purpose field.
	Purpose *CreateAppEntitlementRequestPurpose `json:"purpose,omitempty"`
	// The revokePolicyId field.
	RevokePolicyID *string `json:"revokePolicyId,omitempty"`
	// The riskLevelValueId field.
	RiskLevelValueID *string `json:"riskLevelValueId,omitempty"`
	// The slug field.
	Slug *string `json:"slug,omitempty"`
}

func (o *CreateAppEntitlementRequest) GetAlias() *string {
	if o == nil {
		return nil
	}
	return o.Alias
}

func (o *CreateAppEntitlementRequest) GetAppResourceID() *string {
	if o == nil {
		return nil
	}
	return o.AppResourceID
}

func (o *CreateAppEntitlementRequest) GetAppResourceTypeID() *string {
	if o == nil {
		return nil
	}
	return o.AppResourceTypeID
}

func (o *CreateAppEntitlementRequest) GetCertifyPolicyID() *string {
	if o == nil {
		return nil
	}
	return o.CertifyPolicyID
}

func (o *CreateAppEntitlementRequest) GetComplianceFrameworkValueIds() []string {
	if o == nil {
		return nil
	}
	return o.ComplianceFrameworkValueIds
}

func (o *CreateAppEntitlementRequest) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *CreateAppEntitlementRequest) GetDisplayName() string {
	if o == nil {
		return ""
	}
	return o.DisplayName
}

func (o *CreateAppEntitlementRequest) GetDurationGrant() *string {
	if o == nil {
		return nil
	}
	return o.DurationGrant
}

func (o *CreateAppEntitlementRequest) GetDurationUnset() *CreateAppEntitlementRequestDurationUnset {
	if o == nil {
		return nil
	}
	return o.DurationUnset
}

func (o *CreateAppEntitlementRequest) GetEmergencyGrantEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.EmergencyGrantEnabled
}

func (o *CreateAppEntitlementRequest) GetEmergencyGrantPolicyID() *string {
	if o == nil {
		return nil
	}
	return o.EmergencyGrantPolicyID
}

func (o *CreateAppEntitlementRequest) GetGrantPolicyID() *string {
	if o == nil {
		return nil
	}
	return o.GrantPolicyID
}

func (o *CreateAppEntitlementRequest) GetMatchBatonID() *string {
	if o == nil {
		return nil
	}
	return o.MatchBatonID
}

func (o *CreateAppEntitlementRequest) GetOverrideAccessRequestsDefaults() *bool {
	if o == nil {
		return nil
	}
	return o.OverrideAccessRequestsDefaults
}

func (o *CreateAppEntitlementRequest) GetProvisionPolicy() *ProvisionPolicy {
	if o == nil {
		return nil
	}
	return o.ProvisionPolicy
}

func (o *CreateAppEntitlementRequest) GetPurpose() *CreateAppEntitlementRequestPurpose {
	if o == nil {
		return nil
	}
	return o.Purpose
}

func (o *CreateAppEntitlementRequest) GetRevokePolicyID() *string {
	if o == nil {
		return nil
	}
	return o.RevokePolicyID
}

func (o *CreateAppEntitlementRequest) GetRiskLevelValueID() *string {
	if o == nil {
		return nil
	}
	return o.RiskLevelValueID
}

func (o *CreateAppEntitlementRequest) GetSlug() *string {
	if o == nil {
		return nil
	}
	return o.Slug
}
