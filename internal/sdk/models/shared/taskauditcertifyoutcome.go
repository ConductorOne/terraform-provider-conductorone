// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// TaskAuditCertifyOutcomeOutcome - The outcome field.
type TaskAuditCertifyOutcomeOutcome string

const (
	TaskAuditCertifyOutcomeOutcomeCertifyOutcomeUnspecified  TaskAuditCertifyOutcomeOutcome = "CERTIFY_OUTCOME_UNSPECIFIED"
	TaskAuditCertifyOutcomeOutcomeCertifyOutcomeCertified    TaskAuditCertifyOutcomeOutcome = "CERTIFY_OUTCOME_CERTIFIED"
	TaskAuditCertifyOutcomeOutcomeCertifyOutcomeDecertified  TaskAuditCertifyOutcomeOutcome = "CERTIFY_OUTCOME_DECERTIFIED"
	TaskAuditCertifyOutcomeOutcomeCertifyOutcomeError        TaskAuditCertifyOutcomeOutcome = "CERTIFY_OUTCOME_ERROR"
	TaskAuditCertifyOutcomeOutcomeCertifyOutcomeCancelled    TaskAuditCertifyOutcomeOutcome = "CERTIFY_OUTCOME_CANCELLED"
	TaskAuditCertifyOutcomeOutcomeCertifyOutcomeWaitTimedOut TaskAuditCertifyOutcomeOutcome = "CERTIFY_OUTCOME_WAIT_TIMED_OUT"
)

func (e TaskAuditCertifyOutcomeOutcome) ToPointer() *TaskAuditCertifyOutcomeOutcome {
	return &e
}
func (e *TaskAuditCertifyOutcomeOutcome) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CERTIFY_OUTCOME_UNSPECIFIED":
		fallthrough
	case "CERTIFY_OUTCOME_CERTIFIED":
		fallthrough
	case "CERTIFY_OUTCOME_DECERTIFIED":
		fallthrough
	case "CERTIFY_OUTCOME_ERROR":
		fallthrough
	case "CERTIFY_OUTCOME_CANCELLED":
		fallthrough
	case "CERTIFY_OUTCOME_WAIT_TIMED_OUT":
		*e = TaskAuditCertifyOutcomeOutcome(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TaskAuditCertifyOutcomeOutcome: %v", v)
	}
}

// The TaskAuditCertifyOutcome message.
type TaskAuditCertifyOutcome struct {
	// The outcome field.
	Outcome *TaskAuditCertifyOutcomeOutcome `json:"outcome,omitempty"`
}

func (t *TaskAuditCertifyOutcome) GetOutcome() *TaskAuditCertifyOutcomeOutcome {
	if t == nil {
		return nil
	}
	return t.Outcome
}
