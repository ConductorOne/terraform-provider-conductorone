// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

// ProvisionPolicy is a oneOf that indicates how a provision step should be processed.
//
// This message contains a oneof named typ. Only a single field of the following list may be set at a time:
//   - connector
//   - manual
//   - delegated
//   - webhook
//   - multiStep
//   - externalTicket
//   - unconfigured
type ProvisionPolicy struct {
	Connector      *ConnectorProvision      `json:"connector,omitempty"`
	Delegated      *DelegatedProvision      `json:"delegated,omitempty"`
	ExternalTicket *ExternalTicketProvision `json:"externalTicket,omitempty"`
	Manual         *ManualProvision         `json:"manual,omitempty"`
	MultiStep      any                      `json:"multiStep,omitempty"`
	Unconfigured   *UnconfiguredProvision   `json:"unconfigured,omitempty"`
	Webhook        *WebhookProvision        `json:"webhook,omitempty"`
}

func (p *ProvisionPolicy) GetConnector() *ConnectorProvision {
	if p == nil {
		return nil
	}
	return p.Connector
}

func (p *ProvisionPolicy) GetDelegated() *DelegatedProvision {
	if p == nil {
		return nil
	}
	return p.Delegated
}

func (p *ProvisionPolicy) GetExternalTicket() *ExternalTicketProvision {
	if p == nil {
		return nil
	}
	return p.ExternalTicket
}

func (p *ProvisionPolicy) GetManual() *ManualProvision {
	if p == nil {
		return nil
	}
	return p.Manual
}

func (p *ProvisionPolicy) GetMultiStep() any {
	if p == nil {
		return nil
	}
	return p.MultiStep
}

func (p *ProvisionPolicy) GetUnconfigured() *UnconfiguredProvision {
	if p == nil {
		return nil
	}
	return p.Unconfigured
}

func (p *ProvisionPolicy) GetWebhook() *WebhookProvision {
	if p == nil {
		return nil
	}
	return p.Webhook
}
