// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AppUserStatusStatus - The application user status field.
type AppUserStatusStatus string

const (
	AppUserStatusStatusStatusUnspecified AppUserStatusStatus = "STATUS_UNSPECIFIED"
	AppUserStatusStatusStatusEnabled     AppUserStatusStatus = "STATUS_ENABLED"
	AppUserStatusStatusStatusDisabled    AppUserStatusStatus = "STATUS_DISABLED"
	AppUserStatusStatusStatusDeleted     AppUserStatusStatus = "STATUS_DELETED"
)

func (e AppUserStatusStatus) ToPointer() *AppUserStatusStatus {
	return &e
}

func (e *AppUserStatusStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "STATUS_UNSPECIFIED":
		fallthrough
	case "STATUS_ENABLED":
		fallthrough
	case "STATUS_DISABLED":
		fallthrough
	case "STATUS_DELETED":
		*e = AppUserStatusStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AppUserStatusStatus: %v", v)
	}
}

// AppUserStatus - The satus of the applicaiton user.
type AppUserStatus struct {
	// The details of applicaiton user status.
	Details *string `json:"details,omitempty"`
	// The application user status field.
	Status *AppUserStatusStatus `json:"status,omitempty"`
}

func (o *AppUserStatus) GetDetails() *string {
	if o == nil {
		return nil
	}
	return o.Details
}

func (o *AppUserStatus) GetStatus() *AppUserStatusStatus {
	if o == nil {
		return nil
	}
	return o.Status
}
