// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// UserStatus - The userStatus field.
type UserStatus string

const (
	UserStatusUnknown  UserStatus = "UNKNOWN"
	UserStatusEnabled  UserStatus = "ENABLED"
	UserStatusDisabled UserStatus = "DISABLED"
	UserStatusDeleted  UserStatus = "DELETED"
)

func (e UserStatus) ToPointer() *UserStatus {
	return &e
}
func (e *UserStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "UNKNOWN":
		fallthrough
	case "ENABLED":
		fallthrough
	case "DISABLED":
		fallthrough
	case "DELETED":
		*e = UserStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UserStatus: %v", v)
	}
}

// The UpdateUser message.
type UpdateUser struct {
	// The userIdCel field.
	UserIDCel *string `json:"userIdCel,omitempty"`
	// A reference to a user.
	UserRef *UserRef `json:"userRef,omitempty"`
	// The userStatus field.
	UserStatus *UserStatus `json:"userStatus,omitempty"`
	// The userStatusCel field.
	UserStatusCel *string `json:"userStatusCel,omitempty"`
}

func (o *UpdateUser) GetUserIDCel() *string {
	if o == nil {
		return nil
	}
	return o.UserIDCel
}

func (o *UpdateUser) GetUserRef() *UserRef {
	if o == nil {
		return nil
	}
	return o.UserRef
}

func (o *UpdateUser) GetUserStatus() *UserStatus {
	if o == nil {
		return nil
	}
	return o.UserStatus
}

func (o *UpdateUser) GetUserStatusCel() *string {
	if o == nil {
		return nil
	}
	return o.UserStatusCel
}
