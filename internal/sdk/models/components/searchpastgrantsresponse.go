// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"undefined/internal/utils"
)

// SearchPastGrantsResponseExpanded - Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
type SearchPastGrantsResponseExpanded struct {
	// The type of the serialized message.
	AtType               *string        `json:"@type,omitempty"`
	AdditionalProperties map[string]any `additionalProperties:"true" json:"-"`
}

func (s SearchPastGrantsResponseExpanded) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SearchPastGrantsResponseExpanded) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *SearchPastGrantsResponseExpanded) GetAtType() *string {
	if o == nil {
		return nil
	}
	return o.AtType
}

func (o *SearchPastGrantsResponseExpanded) GetAdditionalProperties() map[string]any {
	if o == nil {
		return nil
	}
	return o.AdditionalProperties
}

// The SearchPastGrantsResponse message contains a list of past grants and a nextPageToken if applicable.
type SearchPastGrantsResponse struct {
	// The expanded field.
	Expanded []SearchPastGrantsResponseExpanded `json:"expanded,omitempty"`
	// The list of results containing up to X results, where X is the page size defined in the request.
	List []AppEntitlementUserBindingHistoryView `json:"list,omitempty"`
	// The nextPageToken is shown for the next page if the number of results is larger than the max page size.
	//  The server returns one page of results and the nextPageToken until all results are retrieved.
	//  To retrieve the next page, use the same request and append a pageToken field with the value of nextPageToken shown on the previous page.
	NextPageToken *string `json:"nextPageToken,omitempty"`
}

func (o *SearchPastGrantsResponse) GetExpanded() []SearchPastGrantsResponseExpanded {
	if o == nil {
		return nil
	}
	return o.Expanded
}

func (o *SearchPastGrantsResponse) GetList() []AppEntitlementUserBindingHistoryView {
	if o == nil {
		return nil
	}
	return o.List
}

func (o *SearchPastGrantsResponse) GetNextPageToken() *string {
	if o == nil {
		return nil
	}
	return o.NextPageToken
}
