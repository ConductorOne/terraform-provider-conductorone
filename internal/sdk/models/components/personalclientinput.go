// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"time"
	"undefined/internal/utils"
)

// PersonalClientInput - The PersonalClient message contains information about a presonal client credential.
type PersonalClientInput struct {
	// If set, only allows the CIDRs in the array to use the credential.
	AllowSourceCidr []string `json:"allowSourceCidr,omitempty"`
	// The display name of the personal client credential.
	DisplayName *string    `json:"displayName,omitempty"`
	ExpiresTime *time.Time `json:"expiresTime,omitempty"`
	// scoped_roles provides a list of IAM Roles
	//  that this OAuth2 Client's API permissions
	//  are reduced to. The permissions granted to OAuth2 Client
	//  are AND'ed against the owning User's own permissions.
	ScopedRoles []string `json:"scopedRoles,omitempty"`
}

func (p PersonalClientInput) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *PersonalClientInput) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *PersonalClientInput) GetAllowSourceCidr() []string {
	if o == nil {
		return nil
	}
	return o.AllowSourceCidr
}

func (o *PersonalClientInput) GetDisplayName() *string {
	if o == nil {
		return nil
	}
	return o.DisplayName
}

func (o *PersonalClientInput) GetExpiresTime() *time.Time {
	if o == nil {
		return nil
	}
	return o.ExpiresTime
}

func (o *PersonalClientInput) GetScopedRoles() []string {
	if o == nil {
		return nil
	}
	return o.ScopedRoles
}
