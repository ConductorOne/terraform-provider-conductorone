// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"time"
	"undefined/internal/utils"
)

// The BundleAutomation message.
//
// This message contains a oneof named conditions. Only a single field of the following list may be set at a time:
//   - entitlements
type BundleAutomation struct {
	// The createTasks field.
	CreateTasks *bool      `json:"createTasks,omitempty"`
	CreatedAt   *time.Time `json:"createdAt,omitempty"`
	DeletedAt   *time.Time `json:"deletedAt,omitempty"`
	// The enabled field.
	Enabled *bool `json:"enabled,omitempty"`
	// The BundleAutomationRuleEntitlement message.
	BundleAutomationRuleEntitlement *BundleAutomationRuleEntitlement `json:"entitlements,omitempty"`
	// The requestCatalogId field.
	RequestCatalogID *string `json:"requestCatalogId,omitempty"`
	// The BundleAutomationLastRunState message.
	BundleAutomationLastRunState *BundleAutomationLastRunState `json:"state,omitempty"`
	// The tenantId field.
	TenantID  *string    `json:"tenantId,omitempty"`
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

func (b BundleAutomation) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(b, "", false)
}

func (b *BundleAutomation) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &b, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *BundleAutomation) GetCreateTasks() *bool {
	if o == nil {
		return nil
	}
	return o.CreateTasks
}

func (o *BundleAutomation) GetCreatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *BundleAutomation) GetDeletedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.DeletedAt
}

func (o *BundleAutomation) GetEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.Enabled
}

func (o *BundleAutomation) GetBundleAutomationRuleEntitlement() *BundleAutomationRuleEntitlement {
	if o == nil {
		return nil
	}
	return o.BundleAutomationRuleEntitlement
}

func (o *BundleAutomation) GetRequestCatalogID() *string {
	if o == nil {
		return nil
	}
	return o.RequestCatalogID
}

func (o *BundleAutomation) GetBundleAutomationLastRunState() *BundleAutomationLastRunState {
	if o == nil {
		return nil
	}
	return o.BundleAutomationLastRunState
}

func (o *BundleAutomation) GetTenantID() *string {
	if o == nil {
		return nil
	}
	return o.TenantID
}

func (o *BundleAutomation) GetUpdatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}
