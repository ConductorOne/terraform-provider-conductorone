// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"time"
	"undefined/internal/utils"
)

// AppUserCredential - A credentials for the Application User that represents an account in the application.
//
// This message contains a oneof named credential. Only a single field of the following list may be set at a time:
//   - encryptedData
type AppUserCredential struct {
	// The ID of the application.
	AppID *string `json:"appId,omitempty"`
	// A unique identifier of the application user.
	AppUserID *string    `json:"appUserId,omitempty"`
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	DeletedAt *time.Time `json:"deletedAt,omitempty"`
	// EncryptedData is a message that contains encrypted bytes and metadata.
	EncryptedData *EncryptedData `json:"encryptedData,omitempty"`
	ExpiresAt     *time.Time     `json:"expiresAt,omitempty"`
	// A unique identifier of the credential.
	ID        *string    `json:"id,omitempty"`
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

func (a AppUserCredential) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *AppUserCredential) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *AppUserCredential) GetAppID() *string {
	if o == nil {
		return nil
	}
	return o.AppID
}

func (o *AppUserCredential) GetAppUserID() *string {
	if o == nil {
		return nil
	}
	return o.AppUserID
}

func (o *AppUserCredential) GetCreatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *AppUserCredential) GetDeletedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.DeletedAt
}

func (o *AppUserCredential) GetEncryptedData() *EncryptedData {
	if o == nil {
		return nil
	}
	return o.EncryptedData
}

func (o *AppUserCredential) GetExpiresAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.ExpiresAt
}

func (o *AppUserCredential) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *AppUserCredential) GetUpdatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}
