// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"undefined/internal/utils"
)

// TaskAuditSuccessResultAnnotations - Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
type TaskAuditSuccessResultAnnotations struct {
	// The type of the serialized message.
	AtType               *string        `json:"@type,omitempty"`
	AdditionalProperties map[string]any `additionalProperties:"true" json:"-"`
}

func (t TaskAuditSuccessResultAnnotations) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TaskAuditSuccessResultAnnotations) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TaskAuditSuccessResultAnnotations) GetAtType() *string {
	if o == nil {
		return nil
	}
	return o.AtType
}

func (o *TaskAuditSuccessResultAnnotations) GetAdditionalProperties() map[string]any {
	if o == nil {
		return nil
	}
	return o.AdditionalProperties
}

// The TaskAuditSuccessResult message.
type TaskAuditSuccessResult struct {
	// The annotations field.
	Annotations []TaskAuditSuccessResultAnnotations `json:"annotations,omitempty"`
}

func (o *TaskAuditSuccessResult) GetAnnotations() []TaskAuditSuccessResultAnnotations {
	if o == nil {
		return nil
	}
	return o.Annotations
}
