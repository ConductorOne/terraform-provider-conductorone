// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

// CreatePolicyRequestPolicyType - The enum of the policy type.
type CreatePolicyRequestPolicyType string

const (
	CreatePolicyRequestPolicyTypePolicyTypeUnspecified   CreatePolicyRequestPolicyType = "POLICY_TYPE_UNSPECIFIED"
	CreatePolicyRequestPolicyTypePolicyTypeGrant         CreatePolicyRequestPolicyType = "POLICY_TYPE_GRANT"
	CreatePolicyRequestPolicyTypePolicyTypeRevoke        CreatePolicyRequestPolicyType = "POLICY_TYPE_REVOKE"
	CreatePolicyRequestPolicyTypePolicyTypeCertify       CreatePolicyRequestPolicyType = "POLICY_TYPE_CERTIFY"
	CreatePolicyRequestPolicyTypePolicyTypeAccessRequest CreatePolicyRequestPolicyType = "POLICY_TYPE_ACCESS_REQUEST"
	CreatePolicyRequestPolicyTypePolicyTypeProvision     CreatePolicyRequestPolicyType = "POLICY_TYPE_PROVISION"
)

func (e CreatePolicyRequestPolicyType) ToPointer() *CreatePolicyRequestPolicyType {
	return &e
}

// The CreatePolicyRequest message is used to create a new policy.
type CreatePolicyRequest struct {
	// The description of the new policy.
	Description *string `json:"description,omitempty"`
	// The display name of the new policy.
	DisplayName string `json:"displayName"`
	// The map of policy type to policy steps. The key is the stringified version of the enum. See other policies for examples.
	PolicySteps map[string]PolicyStepsInput `json:"policySteps,omitempty"`
	// The enum of the policy type.
	PolicyType *CreatePolicyRequestPolicyType `json:"policyType,omitempty"`
	// Actions to occur after a policy finishes. As of now this is only valid on a certify policy to remediate a denied certification immediately.
	PostActions []PolicyPostActions `json:"postActions,omitempty"`
	// Deprecated. Use setting in policy step instead
	//
	// Deprecated: This will be removed in a future release, please migrate away from it as soon as possible.
	ReassignTasksToDelegates *bool `json:"reassignTasksToDelegates,omitempty"`
	// The rules field.
	Rules []Rule `json:"rules,omitempty"`
}

func (o *CreatePolicyRequest) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *CreatePolicyRequest) GetDisplayName() string {
	if o == nil {
		return ""
	}
	return o.DisplayName
}

func (o *CreatePolicyRequest) GetPolicySteps() map[string]PolicyStepsInput {
	if o == nil {
		return nil
	}
	return o.PolicySteps
}

func (o *CreatePolicyRequest) GetPolicyType() *CreatePolicyRequestPolicyType {
	if o == nil {
		return nil
	}
	return o.PolicyType
}

func (o *CreatePolicyRequest) GetPostActions() []PolicyPostActions {
	if o == nil {
		return nil
	}
	return o.PostActions
}

func (o *CreatePolicyRequest) GetReassignTasksToDelegates() *bool {
	if o == nil {
		return nil
	}
	return o.ReassignTasksToDelegates
}

func (o *CreatePolicyRequest) GetRules() []Rule {
	if o == nil {
		return nil
	}
	return o.Rules
}
