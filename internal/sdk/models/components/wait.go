// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

// Wait - Define a Wait step for a policy to wait on a condition to be met.
//
// This message contains a oneof named until. Only a single field of the following list may be set at a time:
//   - condition
type Wait struct {
	// The comment to post on first failed check.
	CommentOnFirstWait *string `json:"commentOnFirstWait,omitempty"`
	// The comment to post if we timeout.
	CommentOnTimeout *string `json:"commentOnTimeout,omitempty"`
	// The WaitCondition message.
	WaitCondition *WaitCondition `json:"condition,omitempty"`
	// The name of our condition to show on the task details page
	Name            *string `json:"name,omitempty"`
	TimeoutDuration *string `json:"timeoutDuration,omitempty"`
}

func (o *Wait) GetCommentOnFirstWait() *string {
	if o == nil {
		return nil
	}
	return o.CommentOnFirstWait
}

func (o *Wait) GetCommentOnTimeout() *string {
	if o == nil {
		return nil
	}
	return o.CommentOnTimeout
}

func (o *Wait) GetWaitCondition() *WaitCondition {
	if o == nil {
		return nil
	}
	return o.WaitCondition
}

func (o *Wait) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *Wait) GetTimeoutDuration() *string {
	if o == nil {
		return nil
	}
	return o.TimeoutDuration
}
